<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='44591' time_ms='1490669733485'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.45-b02
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.45-b02) for bsd-amd64 JRE (1.8.0_45-b14), built on Apr 10 2015 10:46:38 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -Didea.launcher.port=7535 -Didea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 
</args>
<command>
com.intellij.rt.execution.application.AppMain com.concurrent.volatiles.TestVolatile
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.45-b02
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/liuzhengyang/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib
java.library.path=/Users/liuzhengyang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/tools.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
idea.launcher.port=7535
idea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin
file.encoding=UTF-8
sun.java.command=com.intellij.rt.execution.application.AppMain com.concurrent.volatiles.TestVolatile
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='7171'/>
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='14595'/>
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
<thread_logfile thread='19203' filename='/var/folders/lg/wvtqlfn13lx5kfp0p_pf_hx00000gn/T//hs_c19203_pid44591.log'/>
<writer thread='20227'/>
<thread_logfile thread='20227' filename='/var/folders/lg/wvtqlfn13lx5kfp0p_pf_hx00000gn/T//hs_c20227_pid44591.log'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
<thread_logfile thread='19715' filename='/var/folders/lg/wvtqlfn13lx5kfp0p_pf_hx00000gn/T//hs_c19715_pid44591.log'/>
<writer thread='20739'/>
<thread_logfile thread='20739' filename='/var/folders/lg/wvtqlfn13lx5kfp0p_pf_hx00000gn/T//hs_c20739_pid44591.log'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2048' iicount='2048' level='3' stamp='0.093' comment='tiered' hot_count='2048'/>
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x000000011260eed0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011260f040: mov    0x8(%rsi),%r10d
  0x000000011260f044: shl    $0x3,%r10
  0x000000011260f048: cmp    %rax,%r10
  0x000000011260f04b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260f051: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011260f05c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260f060: mov    %eax,-0x14000(%rsp)
  0x000000011260f067: push   %rbp
  0x000000011260f068: sub    $0x30,%rsp
  0x000000011260f06c: movabs $0x129e7d930,%rdi  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011260f076: mov    0xdc(%rdi),%ebx
  0x000000011260f07c: add    $0x8,%ebx
  0x000000011260f07f: mov    %ebx,0xdc(%rdi)
  0x000000011260f085: movabs $0x129d0d488,%rdi  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011260f08f: and    $0x1ff8,%ebx
  0x000000011260f095: cmp    $0x0,%ebx
  0x000000011260f098: je     0x000000011260f0b7
  0x000000011260f09e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000011260f0a1: mov    %rsi,0x20(%rsp)
  0x000000011260f0a6: callq  0x00000001126074e0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000011260f0ab: add    $0x30,%rsp
  0x000000011260f0af: pop    %rbp
  0x000000011260f0b0: test   %eax,-0x33befb6(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260f0b6: retq   
  0x000000011260f0b7: mov    %rdi,0x8(%rsp)
  0x000000011260f0bc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260f0c4: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x000000011260f0c9: jmp    0x000000011260f09e
  0x000000011260f0cb: nop
  0x000000011260f0cc: nop
  0x000000011260f0cd: mov    0x2a8(%r15),%rax
  0x000000011260f0d4: movabs $0x0,%r10
  0x000000011260f0de: mov    %r10,0x2a8(%r15)
  0x000000011260f0e5: movabs $0x0,%r10
  0x000000011260f0ef: mov    %r10,0x2b0(%r15)
  0x000000011260f0f6: add    $0x30,%rsp
  0x000000011260f0fa: pop    %rbp
  0x000000011260f0fb: jmpq   0x0000000112606860  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000011260f100: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011260f105: mov    %rsp,-0x28(%rsp)
  0x000000011260f10a: sub    $0x80,%rsp
  0x000000011260f111: mov    %rax,0x78(%rsp)
  0x000000011260f116: mov    %rcx,0x70(%rsp)
  0x000000011260f11b: mov    %rdx,0x68(%rsp)
  0x000000011260f120: mov    %rbx,0x60(%rsp)
  0x000000011260f125: mov    %rbp,0x50(%rsp)
  0x000000011260f12a: mov    %rsi,0x48(%rsp)
  0x000000011260f12f: mov    %rdi,0x40(%rsp)
  0x000000011260f134: mov    %r8,0x38(%rsp)
  0x000000011260f139: mov    %r9,0x30(%rsp)
  0x000000011260f13e: mov    %r10,0x28(%rsp)
  0x000000011260f143: mov    %r11,0x20(%rsp)
  0x000000011260f148: mov    %r12,0x18(%rsp)
  0x000000011260f14d: mov    %r13,0x10(%rsp)
  0x000000011260f152: mov    %r14,0x8(%rsp)
  0x000000011260f157: mov    %r15,(%rsp)
  0x000000011260f15b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260f165: movabs $0x11260f105,%rsi  ;   {internal_word}
  0x000000011260f16f: mov    %rsp,%rdx
  0x000000011260f172: and    $0xfffffffffffffff0,%rsp
  0x000000011260f176: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260f17b: hlt    
[Deopt Handler Code]
  0x000000011260f17c: movabs $0x11260f17c,%r10  ;   {section_word}
  0x000000011260f186: push   %r10
  0x000000011260f188: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260f18d: hlt    
  0x000000011260f18e: hlt    
  0x000000011260f18f: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x000000011260f040' size='832' address='0x000000011260eed0' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2051' iicount='2051' stamp='0.100'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='7171'/>
<task_queued compile_id='2' method='java/lang/String hashCode ()I' bytes='55' count='650' backedge_count='14336' iicount='650' level='3' stamp='0.102' comment='tiered' hot_count='650'/>
<task_queued compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='577' backedge_count='3072' iicount='577' level='3' stamp='0.102' comment='tiered' hot_count='577'/>
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='4' method='java/lang/String charAt (I)C' bytes='29' count='6912' iicount='6912' stamp='0.102' comment='tiered' hot_count='6912'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011260cd50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011260cec0: mov    0x8(%rsi),%r10d
  0x000000011260cec4: shl    $0x3,%r10
  0x000000011260cec8: cmp    %rax,%r10
  0x000000011260cecb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260ced1: 
<writer thread='7171'/>
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011260cedc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260cee0: mov    %eax,-0x14000(%rsp)
  0x000000011260cee7: push   %rbp
  0x000000011260cee8: sub    $0x30,%rsp
  0x000000011260ceec: movabs $0x129ecfde0,%rax  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cef6: mov    0xdc(%rax),%edi
  0x000000011260cefc: add    $0x8,%edi
  0x000000011260ceff: mov    %edi,0xdc(%rax)
  0x000000011260cf05: movabs $0x129d11fc8,%rax  ;   {metadata({method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cf0f: and    $0x1ff8,%edi
  0x000000011260cf15: cmp    $0x0,%edi
  0x000000011260cf18: je     0x000000011260d051  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1454)

  0x000000011260cf1e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1454)

  0x000000011260cf21: cmp    $0x0,%eax
  0x000000011260cf24: movabs $0x129ecfde0,%rdi  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cf2e: movabs $0x108,%rbx
  0x000000011260cf38: jne    0x000000011260cf48
  0x000000011260cf3e: movabs $0x118,%rbx
  0x000000011260cf48: mov    (%rdi,%rbx,1),%rdx
  0x000000011260cf4c: lea    0x1(%rdx),%rdx
  0x000000011260cf50: mov    %rdx,(%rdi,%rbx,1)
  0x000000011260cf54: jne    0x000000011260d045  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1455)

  0x000000011260cf5a: mov    0xc(%rsi),%edi
  0x000000011260cf5d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1455)

  0x000000011260cf61: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ; implicit exception: dispatches to 0x000000011260d068
  0x000000011260cf64: cmp    $0x0,%ebx
  0x000000011260cf67: movabs $0x129ecfde0,%rdx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cf71: movabs $0x128,%rcx
  0x000000011260cf7b: jle    0x000000011260cf8b
  0x000000011260cf81: movabs $0x138,%rcx
  0x000000011260cf8b: mov    (%rdx,%rcx,1),%r8
  0x000000011260cf8f: lea    0x1(%r8),%r8
  0x000000011260cf93: mov    %r8,(%rdx,%rcx,1)
  0x000000011260cf97: jle    0x000000011260d045  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)

  0x000000011260cf9d: mov    $0x0,%edx
  0x000000011260cfa2: jmpq   0x000000011260d00a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1458)

  0x000000011260cfa7: nop
  0x000000011260cfa8: movslq %edx,%rcx
  0x000000011260cfab: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1459)

  0x000000011260cfb0: mov    %rax,%r8
  0x000000011260cfb3: shl    $0x5,%eax
  0x000000011260cfb6: sub    %r8d,%eax
  0x000000011260cfb9: add    %ecx,%eax
  0x000000011260cfbb: inc    %edx
  0x000000011260cfbd: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cfc7: mov    0xe0(%rcx),%r8d
  0x000000011260cfce: add    $0x8,%r8d
  0x000000011260cfd2: mov    %r8d,0xe0(%rcx)
  0x000000011260cfd9: movabs $0x129d11fc8,%rcx  ;   {metadata({method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260cfe3: and    $0xfff8,%r8d
  0x000000011260cfea: cmp    $0x0,%r8d
  0x000000011260cfee: je     0x000000011260d06d  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x000000011260cff4: test   %eax,-0x33bcefa(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011260cffa: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260d004: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x000000011260d00a: cmp    %ebx,%edx
  0x000000011260d00c: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260d016: movabs $0x148,%r8
  0x000000011260d020: jge    0x000000011260d030
  0x000000011260d026: movabs $0x158,%r8
  0x000000011260d030: mov    (%rcx,%r8,1),%r9
  0x000000011260d034: lea    0x1(%r9),%r9
  0x000000011260d038: mov    %r9,(%rcx,%r8,1)
  0x000000011260d03c: jl     0x000000011260cfa8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x000000011260d042: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1461)

  0x000000011260d045: add    $0x30,%rsp
  0x000000011260d049: pop    %rbp
  0x000000011260d04a: test   %eax,-0x33bcf50(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260d050: retq   
  0x000000011260d051: mov    %rax,0x8(%rsp)
  0x000000011260d056: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260d05e: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)
                                                ;   {runtime_call}
  0x000000011260d063: jmpq   0x000000011260cf1e
  0x000000011260d068: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x000000011260d06d: mov    %rcx,0x8(%rsp)
  0x000000011260d072: movq   $0x2d,(%rsp)
  0x000000011260d07a: callq  0x000000011260aea0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)
                                                ;   {runtime_call}
  0x000000011260d07f: jmpq   0x000000011260cff4
  0x000000011260d084: nop
  0x000000011260d085: nop
  0x000000011260d086: mov    0x2a8(%r15),%rax
  0x000000011260d08d: movabs $0x0,%r10
  0x000000011260d097: mov    %r10,0x2a8(%r15)
  0x000000011260d09e: movabs $0x0,%r10
  0x000000011260d0a8: mov    %r10,0x2b0(%r15)
  0x000000011260d0af: add    $0x30,%rsp
  0x000000011260d0b3: pop    %rbp
  0x000000011260d0b4: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011260d0b9: hlt    
  0x000000011260d0ba: hlt    
  0x000000011260d0bb: hlt    
  0x000000011260d0bc: hlt    
  0x000000011260d0bd: hlt    
  0x000000011260d0be: hlt    
  0x000000011260d0bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011260d0c0: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011260d0c5: mov    %rsp,-0x28(%rsp)
  0x000000011260d0ca: sub    $0x80,%rsp
  0x000000011260d0d1: mov    %rax,0x78(%rsp)
  0x000000011260d0d6: mov    %rcx,0x70(%rsp)
  0x000000011260d0db: mov    %rdx,0x68(%rsp)
  0x000000011260d0e0: mov    %rbx,0x60(%rsp)
  0x000000011260d0e5: mov    %rbp,0x50(%rsp)
  0x000000011260d0ea: mov    %rsi,0x48(%rsp)
  0x000000011260d0ef: mov    %rdi,0x40(%rsp)
  0x000000011260d0f4: mov    %r8,0x38(%rsp)
  0x000000011260d0f9: mov    %r9,0x30(%rsp)
  0x000000011260d0fe: mov    %r10,0x28(%rsp)
  0x000000011260d103: mov    %r11,0x20(%rsp)
  0x000000011260d108: mov    %r12,0x18(%rsp)
  0x000000011260d10d: mov    %r13,0x10(%rsp)
  0x000000011260d112: mov    %r14,0x8(%rsp)
  0x000000011260d117: mov    %r15,(%rsp)
  0x000000011260d11b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260d125: movabs $0x11260d0c5,%rsi  ;   {internal_word}
  0x000000011260d12f: mov    %rsp,%rdx
  0x000000011260d132: and    $0xfffffffffffffff0,%rsp
  0x000000011260d136: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260d13b: hlt    
[Deopt Handler Code]
  0x000000011260d13c: movabs $0x11260d13c,%r10  ;   {section_word}
  0x000000011260d146: push   %r10
  0x000000011260d148: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260d14d: hlt    
  0x000000011260d14e: hlt    
  0x000000011260d14f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x000000011260cec0' size='1448' address='0x000000011260cd50' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='666' backedge_count='14603' iicount='666' stamp='0.104'/>
<writer thread='7171'/>
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112618750:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001126188e0: mov    0x8(%rsi),%r10d
  0x00000001126188e4: shl    $0x3,%r10
  0x00000001126188e8: cmp    %rax,%r10
  0x00000001126188eb: jne    0x0000000112552e20  ;   {runtime_call}
  0x00000001126188f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001126188fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112618900: mov    %eax,-0x14000(%rsp)
  0x0000000112618907: push   %rbp
  0x0000000112618908: sub    $0x30,%rsp
  0x000000011261890c: movabs $0x129ed9960,%rax  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618916: mov    0xdc(%rax),%edi
  0x000000011261891c: add    $0x8,%edi
  0x000000011261891f: mov    %edi,0xdc(%rax)
  0x0000000112618925: movabs $0x129d115e8,%rax  ;   {metadata({method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011261892f: and    $0x1ff8,%edi
  0x0000000112618935: cmp    $0x0,%edi
  0x0000000112618938: je     0x0000000112618d06  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 965)

  0x000000011261893e: cmp    %rdx,%rsi
  0x0000000112618941: movabs $0x129ed9960,%rax  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011261894b: movabs $0x108,%rdi
  0x0000000112618955: jne    0x0000000112618965
  0x000000011261895b: movabs $0x118,%rdi
  0x0000000112618965: mov    (%rax,%rdi,1),%rbx
  0x0000000112618969: lea    0x1(%rbx),%rbx
  0x000000011261896d: mov    %rbx,(%rax,%rdi,1)
  0x0000000112618971: je     0x0000000112618cf5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 965)

  0x0000000112618977: cmp    $0x0,%rdx
  0x000000011261897b: jne    0x0000000112618996
  0x000000011261897d: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618987: orl    $0x100,0x120(%rbx)
  0x0000000112618991: 
<writer thread='7171'/>
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
jmpq   0x0000000112618a56
  0x0000000112618996: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001126189a0: mov    0x8(%rdx),%edi
  0x00000001126189a3: shl    $0x3,%rdi
  0x00000001126189a7: cmp    %rdi,%rcx
  0x00000001126189aa: jne    0x0000000112618a3a
  0x00000001126189b0: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001126189ba: mov    0x8(%rdx),%ecx
  0x00000001126189bd: shl    $0x3,%rcx
  0x00000001126189c1: cmp    0x130(%rbx),%rcx
  0x00000001126189c8: jne    0x00000001126189d7
  0x00000001126189ca: addq   $0x1,0x138(%rbx)
  0x00000001126189d2: jmpq   0x0000000112618a5b
  0x00000001126189d7: cmp    0x140(%rbx),%rcx
  0x00000001126189de: jne    0x00000001126189ed
  0x00000001126189e0: addq   $0x1,0x148(%rbx)
  0x00000001126189e8: jmpq   0x0000000112618a5b
  0x00000001126189ed: cmpq   $0x0,0x130(%rbx)
  0x00000001126189f8: jne    0x0000000112618a11
  0x00000001126189fa: mov    %rcx,0x130(%rbx)
  0x0000000112618a01: movq   $0x1,0x138(%rbx)
  0x0000000112618a0c: jmpq   0x0000000112618a5b
  0x0000000112618a11: cmpq   $0x0,0x140(%rbx)
  0x0000000112618a1c: jne    0x0000000112618a35
  0x0000000112618a1e: mov    %rcx,0x140(%rbx)
  0x0000000112618a25: movq   $0x1,0x148(%rbx)
  0x0000000112618a30: jmpq   0x0000000112618a5b
  0x0000000112618a35: jmpq   0x0000000112618a5b
  0x0000000112618a3a: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618a44: subq   $0x1,0x128(%rbx)
  0x0000000112618a4c: jmpq   0x0000000112618a56
  0x0000000112618a51: jmpq   0x0000000112618a5b
  0x0000000112618a56: xor    %rax,%rax
  0x0000000112618a59: jmp    0x0000000112618a65
  0x0000000112618a5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 968)

  0x0000000112618a65: cmp    $0x0,%eax
  0x0000000112618a68: movabs $0x129ed9960,%rax  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618a72: movabs $0x158,%rdi
  0x0000000112618a7c: je     0x0000000112618a8c
  0x0000000112618a82: movabs $0x168,%rdi
  0x0000000112618a8c: mov    (%rax,%rdi,1),%rbx
  0x0000000112618a90: lea    0x1(%rbx),%rbx
  0x0000000112618a94: mov    %rbx,(%rax,%rdi,1)
  0x0000000112618a98: je     0x0000000112618ce4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 968)

  0x0000000112618a9e: cmp    $0x0,%rdx
  0x0000000112618aa2: jne    0x0000000112618abd
  0x0000000112618aa4: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618aae: orl    $0x100,0x170(%rbx)
  0x0000000112618ab8: jmpq   0x0000000112618b7d
  0x0000000112618abd: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000112618ac7: mov    0x8(%rdx),%edi
  0x0000000112618aca: shl    $0x3,%rdi
  0x0000000112618ace: cmp    %rdi,%rax
  0x0000000112618ad1: jne    0x0000000112618b61
  0x0000000112618ad7: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618ae1: mov    0x8(%rdx),%eax
  0x0000000112618ae4: shl    $0x3,%rax
  0x0000000112618ae8: cmp    0x180(%rbx),%rax
  0x0000000112618aef: jne    0x0000000112618afe
  0x0000000112618af1: addq   $0x1,0x188(%rbx)
  0x0000000112618af9: jmpq   0x0000000112618b7d
  0x0000000112618afe: cmp    0x190(%rbx),%rax
  0x0000000112618b05: jne    0x0000000112618b14
  0x0000000112618b07: addq   $0x1,0x198(%rbx)
  0x0000000112618b0f: jmpq   0x0000000112618b7d
  0x0000000112618b14: cmpq   $0x0,0x180(%rbx)
  0x0000000112618b1f: jne    0x0000000112618b38
  0x0000000112618b21: mov    %rax,0x180(%rbx)
  0x0000000112618b28: movq   $0x1,0x188(%rbx)
  0x0000000112618b33: jmpq   0x0000000112618b7d
  0x0000000112618b38: cmpq   $0x0,0x190(%rbx)
  0x0000000112618b43: jne    0x0000000112618b5c
  0x0000000112618b45: mov    %rax,0x190(%rbx)
  0x0000000112618b4c: movq   $0x1,0x198(%rbx)
  0x0000000112618b57: jmpq   0x0000000112618b7d
  0x0000000112618b5c: jmpq   0x0000000112618b7d
  0x0000000112618b61: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618b6b: subq   $0x1,0x178(%rbx)
  0x0000000112618b73: jmpq   0x0000000112618d1d
  0x0000000112618b78: jmpq   0x0000000112618b7d
  0x0000000112618b7d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 969)

  0x0000000112618b80: mov    0xc(%rsi),%esi
  0x0000000112618b83: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 970)

  0x0000000112618b87: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 970)
                                                ; implicit exception: dispatches to 0x0000000112618d26
  0x0000000112618b8a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000112618d2b
  0x0000000112618b8d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 971)

  0x0000000112618b91: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 971)
                                                ; implicit exception: dispatches to 0x0000000112618d30
  0x0000000112618b94: cmp    %ebx,%edi
  0x0000000112618b96: movabs $0x129ed9960,%rbx  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618ba0: movabs $0x1a8,%rdx
  0x0000000112618baa: jne    0x0000000112618bba
  0x0000000112618bb0: movabs $0x1b8,%rdx
  0x0000000112618bba: mov    (%rbx,%rdx,1),%rcx
  0x0000000112618bbe: lea    0x1(%rcx),%rcx
  0x0000000112618bc2: mov    %rcx,(%rbx,%rdx,1)
  0x0000000112618bc6: jne    0x0000000112618ce4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 971)

  0x0000000112618bcc: mov    $0x0,%ebx
  0x0000000112618bd1: jmpq   0x0000000112618c7f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 975)

  0x0000000112618bd6: xchg   %ax,%ax
  0x0000000112618bd8: movslq %ebx,%rdi
  0x0000000112618bdb: cmp    0xc(%rsi),%ebx
  0x0000000112618bde: jae    0x0000000112618d35
  0x0000000112618be4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 976)

  0x0000000112618be9: movslq %ebx,%rcx
  0x0000000112618bec: cmp    0xc(%rax),%ebx
  0x0000000112618bef: jae    0x0000000112618d3e
  0x0000000112618bf5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 976)

  0x0000000112618bfa: cmp    %ecx,%edi
  0x0000000112618bfc: movabs $0x129ed9960,%rdi  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618c06: movabs $0x1e8,%rcx
  0x0000000112618c10: je     0x0000000112618c20
  0x0000000112618c16: movabs $0x1f8,%rcx
  0x0000000112618c20: mov    (%rdi,%rcx,1),%r8
  0x0000000112618c24: lea    0x1(%r8),%r8
  0x0000000112618c28: mov    %r8,(%rdi,%rcx,1)
  0x0000000112618c2c: jne    0x0000000112618cc2  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 976)

  0x0000000112618c32: inc    %ebx
  0x0000000112618c34: movabs $0x129ed9960,%rdi  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618c3e: mov    0xe0(%rdi),%ecx
  0x0000000112618c44: add    $0x8,%ecx
  0x0000000112618c47: mov    %ecx,0xe0(%rdi)
  0x0000000112618c4d: movabs $0x129d115e8,%rdi  ;   {metadata({method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618c57: and    $0xfff8,%ecx
  0x0000000112618c5d: cmp    $0x0,%ecx
  0x0000000112618c60: je     0x0000000112618d47  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 978)

  0x0000000112618c66: test   %eax,-0x33c8b6c(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112618c6c: movabs $0x129ed9960,%rdi  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618c76: incl   0x208(%rdi)
  0x0000000112618c7c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 978)

  0x0000000112618c7f: mov    %rdi,%rdx
  0x0000000112618c82: dec    %edx
  0x0000000112618c84: cmp    $0x0,%edi
  0x0000000112618c87: movabs $0x129ed9960,%rdi  ;   {metadata(method data for {method} {0x0000000129d115e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112618c91: movabs $0x1c8,%rcx
  0x0000000112618c9b: je     0x0000000112618cab
  0x0000000112618ca1: movabs $0x1d8,%rcx
  0x0000000112618cab: mov    (%rdi,%rcx,1),%r8
  0x0000000112618caf: lea    0x1(%r8),%r8
  0x0000000112618cb3: mov    %r8,(%rdi,%rcx,1)
  0x0000000112618cb7: je     0x0000000112618cd3
  0x0000000112618cbd: jmpq   0x0000000112618bd8  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 975)

  0x0000000112618cc2: mov    $0x0,%eax
  0x0000000112618cc7: add    $0x30,%rsp
  0x0000000112618ccb: pop    %rbp
  0x0000000112618ccc: test   %eax,-0x33c8bd2(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112618cd2: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 977)

  0x0000000112618cd3: mov    $0x1,%eax
  0x0000000112618cd8: add    $0x30,%rsp
  0x0000000112618cdc: pop    %rbp
  0x0000000112618cdd: test   %eax,-0x33c8be3(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112618ce3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 980)

  0x0000000112618ce4: mov    $0x0,%eax
  0x0000000112618ce9: add    $0x30,%rsp
  0x0000000112618ced: pop    %rbp
  0x0000000112618cee: test   %eax,-0x33c8bf4(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112618cf4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 983)

  0x0000000112618cf5: mov    $0x1,%eax
  0x0000000112618cfa: add    $0x30,%rsp
  0x0000000112618cfe: pop    %rbp
  0x0000000112618cff: test   %eax,-0x33c8c05(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112618d05: retq   
  0x0000000112618d06: mov    %rax,0x8(%rsp)
  0x0000000112618d0b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112618d13: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 965)
                                                ;   {runtime_call}
  0x0000000112618d18: jmpq   0x000000011261893e
  0x0000000112618d1d: mov    %rdx,(%rsp)
  0x0000000112618d21: callq  0x000000011260c300  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 969)
                                                ;   {runtime_call}
  0x0000000112618d26: callq  0x00000001126072c0  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 970)
                                                ;   {runtime_call}
  0x0000000112618d2b: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 971)
                                                ;   {runtime_call}
  0x0000000112618d30: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 971)
                                                ;   {runtime_call}
  0x0000000112618d35: mov    %rbx,(%rsp)
  0x0000000112618d39: callq  0x0000000112606c00  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 976)
                                                ;   {runtime_call}
  0x0000000112618d3e: mov    %rbx,(%rsp)
  0x0000000112618d42: callq  0x0000000112606c00  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 976)
                                                ;   {runtime_call}
  0x0000000112618d47: mov    %rdi,0x8(%rsp)
  0x0000000112618d4c: movq   $0x4a,(%rsp)
  0x0000000112618d54: callq  0x000000011260aea0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 978)
                                                ;   {runtime_call}
  0x0000000112618d59: jmpq   0x0000000112618c66
  0x0000000112618d5e: nop
  0x0000000112618d5f: nop
  0x0000000112618d60: mov    0x2a8(%r15),%rax
  0x0000000112618d67: movabs $0x0,%r10
  0x0000000112618d71: mov    %r10,0x2a8(%r15)
  0x0000000112618d78: movabs $0x0,%r10
  0x0000000112618d82: mov    %r10,0x2b0(%r15)
  0x0000000112618d89: add    $0x30,%rsp
  0x0000000112618d8d: pop    %rbp
  0x0000000112618d8e: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112618d93: hlt    
  0x0000000112618d94: hlt    
  0x0000000112618d95: hlt    
  0x0000000112618d96: hlt    
  0x0000000112618d97: hlt    
  0x0000000112618d98: hlt    
  0x0000000112618d99: hlt    
  0x0000000112618d9a: hlt    
  0x0000000112618d9b: hlt    
  0x0000000112618d9c: hlt    
  0x0000000112618d9d: hlt    
  0x0000000112618d9e: hlt    
  0x0000000112618d9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112618da0: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112618da5: mov    %rsp,-0x28(%rsp)
  0x0000000112618daa: sub    $0x80,%rsp
  0x0000000112618db1: mov    %rax,0x78(%rsp)
  0x0000000112618db6: mov    %rcx,0x70(%rsp)
  0x0000000112618dbb: mov    %rdx,0x68(%rsp)
  0x0000000112618dc0: mov    %rbx,0x60(%rsp)
  0x0000000112618dc5: mov    %rbp,0x50(%rsp)
  0x0000000112618dca: mov    %rsi,0x48(%rsp)
  0x0000000112618dcf: mov    %rdi,0x40(%rsp)
  0x0000000112618dd4: mov    %r8,0x38(%rsp)
  0x0000000112618dd9: mov    %r9,0x30(%rsp)
  0x0000000112618dde: mov    %r10,0x28(%rsp)
  0x0000000112618de3: mov    %r11,0x20(%rsp)
  0x0000000112618de8: mov    %r12,0x18(%rsp)
  0x0000000112618ded: mov    %r13,0x10(%rsp)
  0x0000000112618df2: mov    %r14,0x8(%rsp)
  0x0000000112618df7: mov    %r15,(%rsp)
  0x0000000112618dfb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112618e05: movabs $0x112618da5,%rsi  ;   {internal_word}
  0x0000000112618e0f: mov    %rsp,%rdx
  0x0000000112618e12: and    $0xfffffffffffffff0,%rsp
  0x0000000112618e16: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112618e1b: hlt    
[Deopt Handler Code]
  0x0000000112618e1c: movabs $0x112618e1c,%r10  ;   {section_word}
  0x0000000112618e26: push   %r10
  0x0000000112618e28: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112618e2d: hlt    
  0x0000000112618e2e: hlt    
  0x0000000112618e2f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00000001126188e0' size='2504' address='0x0000000112618750' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='595' backedge_count='3175' iicount='595' stamp='0.109'/>
<writer thread='7171'/>
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Decoding compiled method 0x0000000112610010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000112610160: mov    0x8(%rsi),%r10d
  0x0000000112610164: shl    $0x3,%r10
  0x0000000112610168: cmp    %r10,%rax
  0x000000011261016b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112610171: data32 xchg %ax,%ax
  0x0000000112610174: nopl   0x0(%rax,%rax,1)
  0x000000011261017c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112610180: mov    %eax,-0x14000(%rsp)
  0x0000000112610187: push   %rbp
  0x0000000112610188: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 645)

  0x000000011261018c: test   %edx,%edx
  0x000000011261018e: jl     0x00000001126101cd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)

  0x0000000112610190: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 645)

  0x0000000112610194: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; implicit exception: dispatches to 0x00000001126101fd
  0x0000000112610199: cmp    %ebp,%edx
  0x000000011261019b: jge    0x00000001126101e5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)

  0x000000011261019d: cmp    %ebp,%edx
  0x000000011261019f: jae    0x00000001126101b7
  0x00000001126101a1: shl    $0x3,%r10
  0x00000001126101a5: movzwl 0x10(%r10,%rdx,2),%eax
  0x00000001126101ab: add    $0x20,%rsp
  0x00000001126101af: pop    %rbp
  0x00000001126101b0: test   %eax,-0x33c01b6(%rip)        # 0x000000010f250000
                                                ;   {poll_return}
  0x00000001126101b6: retq   
  0x00000001126101b7: mov    $0xffffffe4,%esi
  0x00000001126101bc: mov    %edx,%ebp
  0x00000001126101be: mov    %r10d,(%rsp)
  0x00000001126101c2: nop
  0x00000001126101c3: callq  0x00000001125121a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ;   {runtime_call}
  0x00000001126101c8: callq  0x000000011086a158  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ;   {runtime_call}
  0x00000001126101cd: mov    %rsi,%rbp
  0x00000001126101d0: mov    %edx,0x4(%rsp)
  0x00000001126101d4: mov    $0xffffff65,%esi
  0x00000001126101d9: xchg   %ax,%ax
  0x00000001126101db: callq  0x00000001125121a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ;   {runtime_call}
  0x00000001126101e0: callq  0x000000011086a158  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ;   {runtime_call}
  0x00000001126101e5: mov    %rsi,(%rsp)
  0x00000001126101e9: mov    %edx,0xc(%rsp)
  0x00000001126101ed: mov    $0xffffff65,%esi
  0x00000001126101f2: nop
  0x00000001126101f3: callq  0x00000001125121a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ;   {runtime_call}
  0x00000001126101f8: callq  0x000000011086a158  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ;   {runtime_call}
  0x00000001126101fd: mov    $0xfffffff6,%esi
  0x0000000112610202: nop
  0x0000000112610203: callq  0x00000001125121a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ;   {runtime_call}
  0x0000000112610208: callq  0x000000011086a158  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ;   {runtime_call}
  0x000000011261020d: hlt    
  0x000000011261020e: hlt    
  0x000000011261020f: hlt    
  0x0000000112610210: hlt    
  0x0000000112610211: hlt    
  0x0000000112610212: hlt    
  0x0000000112610213: hlt    
  0x0000000112610214: hlt    
  0x0000000112610215: hlt    
  0x0000000112610216: hlt    
  0x0000000112610217: hlt    
  0x0000000112610218: hlt    
  0x0000000112610219: hlt    
  0x000000011261021a: hlt    
  0x000000011261021b: hlt    
  0x000000011261021c: hlt    
  0x000000011261021d: hlt    
  0x000000011261021e: hlt    
  0x000000011261021f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112610220: jmpq   0x00000001125793a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000112610225: callq  0x000000011261022a
  0x000000011261022a: subq   $0x5,(%rsp)
  0x000000011261022f: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112610234: hlt    
  0x0000000112610235: hlt    
  0x0000000112610236: hlt    
  0x0000000112610237: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x0000000112610160' size='928' address='0x0000000112610010' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='7095' iicount='7095' stamp='0.112'/>
<writer thread='7171'/>
<task_queued compile_id='5' method='java/lang/String indexOf (II)I' bytes='70' count='433' backedge_count='17408' iicount='433' level='3' stamp='0.112' comment='tiered' hot_count='433'/>
Decoding compiled method 0x000000011260fc90:
Code:
[Entry Point]
  # {method} {0x0000000129d26848} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000011260fe00: mov    0x8(%rsi),%r10d
  0x000000011260fe04: shl    $0x3,%r10
  0x000000011260fe08: cmp    %r10,%rax
  0x000000011260fe0b: je     0x000000011260fe18
  0x000000011260fe11: jmpq   0x0000000112552e20  ;   {runtime_call}
  0x000000011260fe16: xchg   %ax,%ax
[Verified Entry Point]
  0x000000011260fe18: mov    %eax,-0x14000(%rsp)
  0x000000011260fe1f: push   %rbp
  0x000000011260fe20: mov    %rsp,%rbp
  0x000000011260fe23: sub    $0x50,%rsp
  0x000000011260fe27: mov    %r9,(%rsp)
  0x000000011260fe2b: mov    %r8,%r9
  0x000000011260fe2e: mov    %rcx,0x18(%rsp)
  0x000000011260fe33: cmp    $0x0,%rcx
  0x000000011260fe37: lea    0x18(%rsp),%r8
  0x000000011260fe3c: cmove  0x18(%rsp),%r8
  0x000000011260fe42: mov    %rdx,%rcx
  0x000000011260fe45: mov    %rsi,0x8(%rsp)
  0x000000011260fe4a: cmp    $0x0,%rsi
  0x000000011260fe4e: lea    0x8(%rsp),%rdx
  0x000000011260fe53: cmove  0x8(%rsp),%rdx
  0x000000011260fe59: movabs $0x76ab00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000011260fe63: mov    %r14,0x38(%rsp)
  0x000000011260fe68: lea    0x38(%rsp),%r14
  0x000000011260fe6d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000011260fe70: movabs $0x11260fe70,%r10  ;   {section_word}
  0x000000011260fe7a: mov    %r10,0x1e0(%r15)
  0x000000011260fe81: mov    %rsp,0x1d8(%r15)
  0x000000011260fe88: cmpb   $0x0,-0x1957555(%rip)        # 0x0000000110cb893a
                                                ;   {external_word}
  0x000000011260fe8f: je     0x000000011260fed3
  0x000000011260fe95: push   %rsi
  0x000000011260fe96: push   %rdx
  0x000000011260fe97: push   %rcx
  0x000000011260fe98: push   %r8
  0x000000011260fe9a: push   %r9
  0x000000011260fe9c: movabs $0x129d26848,%rsi  ;   {metadata({method} {0x0000000129d26848} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011260fea6: mov    %r15,%rdi
  0x000000011260fea9: test   $0xf,%esp
  0x000000011260feaf: je     0x000000011260fec7
  0x000000011260feb5: sub    $0x8,%rsp
  0x000000011260feb9: callq  0x00000001108c8f0c  ;   {runtime_call}
  0x000000011260febe: add    $0x8,%rsp
  0x000000011260fec2: jmpq   0x000000011260fecc
  0x000000011260fec7: callq  0x00000001108c8f0c  ;   {runtime_call}
  0x000000011260fecc: pop    %r9
  0x000000011260fece: pop    %r8
  0x000000011260fed0: pop    %rcx
  0x000000011260fed1: pop    %rdx
  0x000000011260fed2: pop    %rsi
  0x000000011260fed3: lea    0x1f8(%r15),%rdi
  0x000000011260feda: movl   $0x4,0x270(%r15)
  0x000000011260fee5: callq  0x000000011072e138  ;   {runtime_call}
  0x000000011260feea: vzeroupper 
  0x000000011260feed: movl   $0x5,0x270(%r15)
  0x000000011260fef8: lock addl $0x0,(%rsp)
  0x000000011260fefd: cmpl   $0x0,-0x194d047(%rip)        # 0x0000000110cc2ec0
                                                ;   {external_word}
  0x000000011260ff07: jne    0x000000011260ff1b
  0x000000011260ff0d: cmpl   $0x0,0x30(%r15)
  0x000000011260ff15: je     0x000000011260ff34
  0x000000011260ff1b: mov    %r15,%rdi
  0x000000011260ff1e: mov    %rsp,%r12
  0x000000011260ff21: sub    $0x0,%rsp
  0x000000011260ff25: and    $0xfffffffffffffff0,%rsp
  0x000000011260ff29: callq  0x0000000110948d80  ;   {runtime_call}
  0x000000011260ff2e: mov    %r12,%rsp
  0x000000011260ff31: xor    %r12,%r12
  0x000000011260ff34: movl   $0x8,0x270(%r15)
  0x000000011260ff3f: cmpl   $0x1,0x29c(%r15)
  0x000000011260ff4a: je     0x000000011260ffd2
  0x000000011260ff50: cmpb   $0x0,-0x195761d(%rip)        # 0x0000000110cb893a
                                                ;   {external_word}
  0x000000011260ff57: je     0x000000011260ff8d
  0x000000011260ff5d: movabs $0x129d26848,%rsi  ;   {metadata({method} {0x0000000129d26848} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011260ff67: mov    %r15,%rdi
  0x000000011260ff6a: test   $0xf,%esp
  0x000000011260ff70: je     0x000000011260ff88
  0x000000011260ff76: sub    $0x8,%rsp
  0x000000011260ff7a: callq  0x00000001108c8e7e  ;   {runtime_call}
  0x000000011260ff7f: add    $0x8,%rsp
  0x000000011260ff83: jmpq   0x000000011260ff8d
  0x000000011260ff88: callq  0x00000001108c8e7e  ;   {runtime_call}
  0x000000011260ff8d: movabs $0x0,%r10
  0x000000011260ff97: mov    %r10,0x1d8(%r15)
  0x000000011260ff9e: movabs $0x0,%r10
  0x000000011260ffa8: mov    %r10,0x1e0(%r15)
  0x000000011260ffaf: mov    0x38(%r15),%rcx
  0x000000011260ffb3: movl   $0x0,0x100(%rcx)
  0x000000011260ffbd: leaveq 
  0x000000011260ffbe: cmpq   $0x0,0x8(%r15)
  0x000000011260ffc6: jne    0x000000011260ffcd
  0x000000011260ffcc: retq   
  0x000000011260ffcd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000011260ffd2: mov    %rsp,%r12
  0x000000011260ffd5: sub    $0x0,%rsp
  0x000000011260ffd9: and    $0xfffffffffffffff0,%rsp
  0x000000011260ffdd: callq  0x00000001108c6cf0  ;   {runtime_call}
  0x000000011260ffe2: mov    %r12,%rsp
  0x000000011260ffe5: xor    %r12,%r12
  0x000000011260ffe8: jmpq   0x000000011260ff50
  0x000000011260ffed: hlt    
  0x000000011260ffee: hlt    
  0x000000011260ffef: hlt    
<nmethod compile_id='6' compile_kind='c2n' level='0' entry='0x000000011260fe00' size='864' address='0x000000011260fc90' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='1152' iicount='1152' stamp='0.113'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011260f510:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011260f6a0: mov    0x8(%rsi),%r10d
  0x000000011260f6a4: shl    $0x3,%r10
  0x000000011260f6a8: cmp    %rax,%r10
  0x000000011260f6ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260f6b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011260f6bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260f6c0: mov    %eax,-0x14000(%rsp)
  0x000000011260f6c7: push   %rbp
  0x000000011260f6c8: sub    $0x30,%rsp
  0x000000011260f6cc: movabs $0x129ed00f8,%rax  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f6d6: mov    0xdc(%rax),%edi
  0x000000011260f6dc: add    $0x8,%edi
  0x000000011260f6df: mov    %edi,0xdc(%rax)
  0x000000011260f6e5: movabs $0x129d12148,%rax  ;   {metadata({method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f6ef: and    $0x1ff8,%edi
  0x000000011260f6f5: cmp    $0x0,%edi
  0x000000011260f6f8: je     0x000000011260f901  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1534)

  0x000000011260f6fe: mov    0xc(%rsi),%eax
  0x000000011260f701: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1534)

  0x000000011260f705: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1534)
                                                ; implicit exception: dispatches to 0x000000011260f918
  0x000000011260f708: cmp    $0x0,%ecx
  0x000000011260f70b: movabs $0x129ed00f8,%rbx  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f715: movabs $0x108,%r8
  0x000000011260f71f: jge    0x000000011260f72f
  0x000000011260f725: movabs $0x118,%r8
  0x000000011260f72f: mov    (%rbx,%r8,1),%r9
  0x000000011260f733: lea    0x1(%r9),%r9
  0x000000011260f737: mov    %r9,(%rbx,%r8,1)
  0x000000011260f73b: jge    0x000000011260f75b  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1535)

  0x000000011260f741: movabs $0x129ed00f8,%rcx  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f74b: incl   0x128(%rcx)
  0x000000011260f751: mov    $0x0,%ecx
  0x000000011260f756: jmpq   0x000000011260f793  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1536)

  0x000000011260f75b: cmp    %edi,%ecx
  0x000000011260f75d: movabs $0x129ed00f8,%rbx  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f767: movabs $0x140,%r8
  0x000000011260f771: jl     0x000000011260f781
  0x000000011260f777: movabs $0x150,%r8
  0x000000011260f781: mov    (%rbx,%r8,1),%r9
  0x000000011260f785: lea    0x1(%r9),%r9
  0x000000011260f789: mov    %r9,(%rbx,%r8,1)
  0x000000011260f78d: jge    0x000000011260f8f0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1537)

  0x000000011260f793: cmp    $0x10000,%edx
  0x000000011260f799: movabs $0x129ed00f8,%rbx  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f7a3: movabs $0x160,%r8
  0x000000011260f7ad: jge    0x000000011260f7bd
  0x000000011260f7b3: movabs $0x170,%r8
  0x000000011260f7bd: mov    (%rbx,%r8,1),%r9
  0x000000011260f7c1: lea    0x1(%r9),%r9
  0x000000011260f7c5: mov    %r9,(%rbx,%r8,1)
  0x000000011260f7c9: jge    0x000000011260f8c8
  0x000000011260f7cf: jmpq   0x000000011260f86b  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1542)

  0x000000011260f7d4: nopl   0x0(%rax)
  0x000000011260f7d8: movslq %ecx,%rsi
  0x000000011260f7db: cmp    0xc(%rax),%ecx
  0x000000011260f7de: jae    0x000000011260f91d
  0x000000011260f7e4: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1547)

  0x000000011260f7e9: cmp    %edx,%esi
  0x000000011260f7eb: movabs $0x129ed00f8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f7f5: movabs $0x1a0,%rbx
  0x000000011260f7ff: jne    0x000000011260f80f
  0x000000011260f805: movabs $0x1b0,%rbx
  0x000000011260f80f: mov    (%rsi,%rbx,1),%r8
  0x000000011260f813: lea    0x1(%r8),%r8
  0x000000011260f817: mov    %r8,(%rsi,%rbx,1)
  0x000000011260f81b: je     0x000000011260f8a8  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1547)

  0x000000011260f821: inc    %ecx
  0x000000011260f823: movabs $0x129ed00f8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f82d: mov    0xe0(%rsi),%ebx
  0x000000011260f833: add    $0x8,%ebx
  0x000000011260f836: mov    %ebx,0xe0(%rsi)
  0x000000011260f83c: movabs $0x129d12148,%rsi  ;   {metadata({method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f846: and    $0xfff8,%ebx
  0x000000011260f84c: cmp    $0x0,%ebx
  0x000000011260f84f: je     0x000000011260f926  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)

  0x000000011260f855: test   %eax,-0x33bf75b(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011260f85b: movabs $0x129ed00f8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f865: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)

  0x000000011260f86b: cmp    %edi,%ecx
  0x000000011260f86d: movabs $0x129ed00f8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f877: movabs $0x180,%rbx
  0x000000011260f881: jge    0x000000011260f891
  0x000000011260f887: movabs $0x190,%rbx
  0x000000011260f891: mov    (%rsi,%rbx,1),%r8
  0x000000011260f895: lea    0x1(%r8),%r8
  0x000000011260f899: mov    %r8,(%rsi,%rbx,1)
  0x000000011260f89d: jge    0x000000011260f8b7
  0x000000011260f8a3: jmpq   0x000000011260f7d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1546)

  0x000000011260f8a8: mov    %rcx,%rax
  0x000000011260f8ab: add    $0x30,%rsp
  0x000000011260f8af: pop    %rbp
  0x000000011260f8b0: test   %eax,-0x33bf7b6(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260f8b6: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1548)

  0x000000011260f8b7: mov    $0xffffffff,%eax
  0x000000011260f8bc: add    $0x30,%rsp
  0x000000011260f8c0: pop    %rbp
  0x000000011260f8c1: test   %eax,-0x33bf7c7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260f8c7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1551)

  0x000000011260f8c8: mov    %rsi,%rdi
  0x000000011260f8cb: movabs $0x129ed00f8,%rbx  ;   {metadata(method data for {method} {0x0000000129d12148} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260f8d5: addq   $0x1,0x1d8(%rbx)
  0x000000011260f8dd: nop
  0x000000011260f8de: nop
  0x000000011260f8df: callq  0x0000000112553020  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1553)
                                                ;   {optimized virtual_call}
  0x000000011260f8e4: add    $0x30,%rsp
  0x000000011260f8e8: pop    %rbp
  0x000000011260f8e9: test   %eax,-0x33bf7ef(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260f8ef: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1553)

  0x000000011260f8f0: mov    $0xffffffff,%eax
  0x000000011260f8f5: add    $0x30,%rsp
  0x000000011260f8f9: pop    %rbp
  0x000000011260f8fa: test   %eax,-0x33bf800(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260f900: retq   
  0x000000011260f901: mov    %rax,0x8(%rsp)
  0x000000011260f906: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260f90e: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1534)
                                                ;   {runtime_call}
  0x000000011260f913: jmpq   0x000000011260f6fe
  0x000000011260f918: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1534)
                                                ;   {runtime_call}
  0x000000011260f91d: mov    %rcx,(%rsp)
  0x000000011260f921: callq  0x0000000112606c00  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1547)
                                                ;   {runtime_call}
  0x000000011260f926: mov    %rsi,0x8(%rsp)
  0x000000011260f92b: movq   $0x3a,(%rsp)
  0x000000011260f933: callq  0x000000011260aea0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)
                                                ;   {runtime_call}
  0x000000011260f938: jmpq   0x000000011260f855
  0x000000011260f93d: nop
  0x000000011260f93e: nop
  0x000000011260f93f: mov    0x2a8(%r15),%rax
  0x000000011260f946: movabs $0x0,%r10
  0x000000011260f950: mov    %r10,0x2a8(%r15)
  0x000000011260f957: movabs $0x0,%r10
  0x000000011260f961: mov    %r10,0x2b0(%r15)
  0x000000011260f968: add    $0x30,%rsp
  0x000000011260f96c: pop    %rbp
  0x000000011260f96d: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011260f972: hlt    
  0x000000011260f973: hlt    
  0x000000011260f974: hlt    
  0x000000011260f975: hlt    
  0x000000011260f976: hlt    
  0x000000011260f977: hlt    
  0x000000011260f978: hlt    
  0x000000011260f979: hlt    
  0x000000011260f97a: hlt    
  0x000000011260f97b: hlt    
  0x000000011260f97c: hlt    
  0x000000011260f97d: hlt    
  0x000000011260f97e: hlt    
  0x000000011260f97f: hlt    
[Stub Code]
  0x000000011260f980: nop                       ;   {no_reloc}
  0x000000011260f981: nop
  0x000000011260f982: nop
  0x000000011260f983: nop
  0x000000011260f984: nop
  0x000000011260f985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011260f98f: jmpq   0x000000011260f98f  ;   {runtime_call}
[Exception Handler]
  0x000000011260f994: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011260f999: mov    %rsp,-0x28(%rsp)
  0x000000011260f99e: sub    $0x80,%rsp
  0x000000011260f9a5: mov    %rax,0x78(%rsp)
  0x000000011260f9aa: mov    %rcx,0x70(%rsp)
  0x000000011260f9af: mov    %rdx,0x68(%rsp)
  0x000000011260f9b4: mov    %rbx,0x60(%rsp)
  0x000000011260f9b9: mov    %rbp,0x50(%rsp)
  0x000000011260f9be: mov    %rsi,0x48(%rsp)
  0x000000011260f9c3: mov    %rdi,0x40(%rsp)
  0x000000011260f9c8: mov    %r8,0x38(%rsp)
  0x000000011260f9cd: mov    %r9,0x30(%rsp)
  0x000000011260f9d2: mov    %r10,0x28(%rsp)
  0x000000011260f9d7: mov    %r11,0x20(%rsp)
  0x000000011260f9dc: mov    %r12,0x18(%rsp)
  0x000000011260f9e1: mov    %r13,0x10(%rsp)
  0x000000011260f9e6: mov    %r14,0x8(%rsp)
  0x000000011260f9eb: mov    %r15,(%rsp)
  0x000000011260f9ef: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260f9f9: movabs $0x11260f999,%rsi  ;   {internal_word}
  0x000000011260fa03: mov    %rsp,%rdx
  0x000000011260fa06: and    $0xfffffffffffffff0,%rsp
  0x000000011260fa0a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260fa0f: hlt    
[Deopt Handler Code]
  0x000000011260fa10: movabs $0x11260fa10,%r10  ;   {section_word}
  0x000000011260fa1a: push   %r10
  0x000000011260fa1c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260fa21: hlt    
  0x000000011260fa22: hlt    
  0x000000011260fa23: hlt    
  0x000000011260fa24: hlt    
  0x000000011260fa25: hlt    
  0x000000011260fa26: hlt    
  0x000000011260fa27: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x000000011260f6a0' size='1848' address='0x000000011260f510' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='437' backedge_count='17693' iicount='437' stamp='0.116'/>
<writer thread='7171'/>
<task_queued compile_id='7' method='java/lang/String length ()I' bytes='6' count='896' iicount='896' level='3' stamp='0.116' comment='tiered' hot_count='896'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011260e910:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011260ea80: mov    0x8(%rsi),%r10d
  0x000000011260ea84: shl    $0x3,%r10
  0x000000011260ea88: cmp    %rax,%r10
  0x000000011260ea8b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260ea91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011260ea9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260eaa0: mov    %eax,-0x14000(%rsp)
  0x000000011260eaa7: push   %rbp
  0x000000011260eaa8: sub    $0x30,%rsp
  0x000000011260eaac: movabs $0x129ed91d8,%rax  ;   {metadata(method data for {method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260eab6: mov    0xdc(%rax),%edi
  0x000000011260eabc: add    $0x8,%edi
  0x000000011260eabf: mov    %edi,0xdc(%rax)
  0x000000011260eac5: movabs $0x129d10c30,%rax  ;   {metadata({method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260eacf: and    $0x1ff8,%edi
  0x000000011260ead5: cmp    $0x0,%edi
  0x000000011260ead8: je     0x000000011260eaf4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 611)

  0x000000011260eade: mov    0xc(%rsi),%eax
  0x000000011260eae1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)

  0x000000011260eae5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; implicit exception: dispatches to 0x000000011260eb08
  0x000000011260eae8: add    $0x30,%rsp
  0x000000011260eaec: pop    %rbp
  0x000000011260eaed: test   %eax,-0x33be9f3(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260eaf3: retq   
  0x000000011260eaf4: mov    %rax,0x8(%rsp)
  0x000000011260eaf9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260eb01: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)
                                                ;   {runtime_call}
  0x000000011260eb06: jmp    0x000000011260eade
  0x000000011260eb08: callq  0x00000001126072c0  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ;   {runtime_call}
  0x000000011260eb0d: nop
  0x000000011260eb0e: nop
  0x000000011260eb0f: mov    0x2a8(%r15),%rax
  0x000000011260eb16: movabs $0x0,%r10
  0x000000011260eb20: mov    %r10,0x2a8(%r15)
  0x000000011260eb27: movabs $0x0,%r10
  0x000000011260eb31: mov    %r10,0x2b0(%r15)
  0x000000011260eb38: add    $0x30,%rsp
  0x000000011260eb3c: pop    %rbp
  0x000000011260eb3d: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011260eb42: hlt    
  0x000000011260eb43: hlt    
  0x000000011260eb44: hlt    
  0x000000011260eb45: hlt    
  0x000000011260eb46: hlt    
  0x000000011260eb47: hlt    
  0x000000011260eb48: hlt    
  0x000000011260eb49: hlt    
  0x000000011260eb4a: hlt    
  0x000000011260eb4b: hlt    
  0x000000011260eb4c: hlt    
  0x000000011260eb4d: hlt    
  0x000000011260eb4e: hlt    
  0x000000011260eb4f: hlt    
  0x000000011260eb50: hlt    
  0x000000011260eb51: hlt    
  0x000000011260eb52: hlt    
  0x000000011260eb53: hlt    
  0x000000011260eb54: hlt    
  0x000000011260eb55: hlt    
  0x000000011260eb56: hlt    
  0x000000011260eb57: hlt    
  0x000000011260eb58: hlt    
  0x000000011260eb59: hlt    
  0x000000011260eb5a: hlt    
  0x000000011260eb5b: hlt    
  0x000000011260eb5c: hlt    
  0x000000011260eb5d: hlt    
  0x000000011260eb5e: hlt    
  0x000000011260eb5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011260eb60: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011260eb65: mov    %rsp,-0x28(%rsp)
  0x000000011260eb6a: sub    $0x80,%rsp
  0x000000011260eb71: mov    %rax,0x78(%rsp)
  0x000000011260eb76: mov    %rcx,0x70(%rsp)
  0x000000011260eb7b: mov    %rdx,0x68(%rsp)
  0x000000011260eb80: mov    %rbx,0x60(%rsp)
  0x000000011260eb85: mov    %rbp,0x50(%rsp)
  0x000000011260eb8a: mov    %rsi,0x48(%rsp)
  0x000000011260eb8f: mov    %rdi,0x40(%rsp)
  0x000000011260eb94: mov    %r8,0x38(%rsp)
  0x000000011260eb99: mov    %r9,0x30(%rsp)
  0x000000011260eb9e: mov    %r10,0x28(%rsp)
  0x000000011260eba3: mov    %r11,0x20(%rsp)
  0x000000011260eba8: mov    %r12,0x18(%rsp)
  0x000000011260ebad: mov    %r13,0x10(%rsp)
  0x000000011260ebb2: mov    %r14,0x8(%rsp)
  0x000000011260ebb7: mov    %r15,(%rsp)
  0x000000011260ebbb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260ebc5: movabs $0x11260eb65,%rsi  ;   {internal_word}
  0x000000011260ebcf: mov    %rsp,%rdx
  0x000000011260ebd2: and    $0xfffffffffffffff0,%rsp
  0x000000011260ebd6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260ebdb: hlt    
[Deopt Handler Code]
  0x000000011260ebdc: movabs $0x11260ebdc,%r10  ;   {section_word}
  0x000000011260ebe6: push   %r10
  0x000000011260ebe8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260ebed: hlt    
  0x000000011260ebee: hlt    
  0x000000011260ebef: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x000000011260ea80' size='920' address='0x000000011260e910' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='941' iicount='941' stamp='0.117'/>
<writer thread='7171'/>
<task_queued compile_id='8' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='256' iicount='256' level='3' stamp='0.117' comment='tiered' hot_count='256'/>
<task_queued compile_id='9' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.117' comment='tiered' hot_count='256'/>
<task_queued compile_id='10' method='java/lang/Math min (II)I' bytes='11' count='1280' iicount='1280' level='3' stamp='0.117' comment='tiered' hot_count='1280'/>
<task_queued compile_id='11' method='java/lang/String lastIndexOf (II)I' bytes='52' count='171' backedge_count='7168' iicount='171' level='3' stamp='0.117' comment='tiered' hot_count='171'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011260e550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011260e6c0: mov    %eax,-0x14000(%rsp)
  0x000000011260e6c7: push   %rbp
  0x000000011260e6c8: sub    $0x30,%rsp
  0x000000011260e6cc: movabs $0x129ecff78,%rax  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e6d6: mov    0xdc(%rax),%edi
  0x000000011260e6dc: add    $0x8,%edi
  0x000000011260e6df: mov    %edi,0xdc(%rax)
  0x000000011260e6e5: movabs $0x129de28e0,%rax  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e6ef: and    $0x1ff8,%edi
  0x000000011260e6f5: cmp    $0x0,%edi
  0x000000011260e6f8: je     0x000000011260e75d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000011260e6fe: cmp    %edx,%esi
  0x000000011260e700: movabs $0x129ecff78,%rax  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e70a: movabs $0x108,%rdi
  0x000000011260e714: jg     0x000000011260e724
  0x000000011260e71a: movabs $0x118,%rdi
  0x000000011260e724: mov    (%rax,%rdi,1),%rbx
  0x000000011260e728: lea    0x1(%rbx),%rbx
  0x000000011260e72c: mov    %rbx,(%rax,%rdi,1)
  0x000000011260e730: jg     0x000000011260e74b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000011260e736: movabs $0x129ecff78,%rax  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e740: incl   0x128(%rax)
  0x000000011260e746: jmpq   0x000000011260e74e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000011260e74b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000011260e74e: mov    %rsi,%rax
  0x000000011260e751: add    $0x30,%rsp
  0x000000011260e755: pop    %rbp
  0x000000011260e756: test   %eax,-0x33be65c(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260e75c: retq   
  0x000000011260e75d: mov    %rax,0x8(%rsp)
  0x000000011260e762: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260e76a: callq  0x000000011260aea0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000011260e76f: jmp    0x000000011260e6fe
  0x000000011260e771: nop
  0x000000011260e772: nop
  0x000000011260e773: mov    0x2a8(%r15),%rax
  0x000000011260e77a: movabs $0x0,%r10
  0x000000011260e784: mov    %r10,0x2a8(%r15)
  0x000000011260e78b: movabs $0x0,%r10
  0x000000011260e795: mov    %r10,0x2b0(%r15)
  0x000000011260e79c: add    $0x30,%rsp
  0x000000011260e7a0: pop    %rbp
  0x000000011260e7a1: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011260e7a6: hlt    
  0x000000011260e7a7: hlt    
  0x000000011260e7a8: hlt    
  0x000000011260e7a9: hlt    
  0x000000011260e7aa: hlt    
  0x000000011260e7ab: hlt    
  0x000000011260e7ac: hlt    
  0x000000011260e7ad: hlt    
  0x000000011260e7ae: hlt    
  0x000000011260e7af: hlt    
  0x000000011260e7b0: hlt    
  0x000000011260e7b1: hlt    
  0x000000011260e7b2: hlt    
  0x000000011260e7b3: hlt    
  0x000000011260e7b4: hlt    
  0x000000011260e7b5: hlt    
  0x000000011260e7b6: hlt    
  0x000000011260e7b7: hlt    
  0x000000011260e7b8: hlt    
  0x000000011260e7b9: hlt    
  0x000000011260e7ba: hlt    
  0x000000011260e7bb: hlt    
  0x000000011260e7bc: hlt    
  0x000000011260e7bd: hlt    
  0x000000011260e7be: hlt    
  0x000000011260e7bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011260e7c0: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011260e7c5: mov    %rsp,-0x28(%rsp)
  0x000000011260e7ca: sub    $0x80,%rsp
  0x000000011260e7d1: mov    %rax,0x78(%rsp)
  0x000000011260e7d6: mov    %rcx,0x70(%rsp)
  0x000000011260e7db: mov    %rdx,0x68(%rsp)
  0x000000011260e7e0: mov    %rbx,0x60(%rsp)
  0x000000011260e7e5: mov    %rbp,0x50(%rsp)
  0x000000011260e7ea: mov    %rsi,0x48(%rsp)
  0x000000011260e7ef: mov    %rdi,0x40(%rsp)
  0x000000011260e7f4: mov    %r8,0x38(%rsp)
  0x000000011260e7f9: mov    %r9,0x30(%rsp)
  0x000000011260e7fe: mov    %r10,0x28(%rsp)
  0x000000011260e803: mov    %r11,0x20(%rsp)
  0x000000011260e808: mov    %r12,0x18(%rsp)
  0x000000011260e80d: mov    %r13,0x10(%rsp)
  0x000000011260e812: mov    %r14,0x8(%rsp)
  0x000000011260e817: mov    %r15,(%rsp)
  0x000000011260e81b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260e825: movabs $0x11260e7c5,%rsi  ;   {internal_word}
  0x000000011260e82f: mov    %rsp,%rdx
  0x000000011260e832: and    $0xfffffffffffffff0,%rsp
  0x000000011260e836: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260e83b: hlt    
[Deopt Handler Code]
  0x000000011260e83c: movabs $0x11260e83c,%r10  ;   {section_word}
  0x000000011260e846: push   %r10
  0x000000011260e848: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260e84d: hlt    
  0x000000011260e84e: hlt    
  0x000000011260e84f: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x000000011260e6c0' size='936' address='0x000000011260e550' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='1305' iicount='1305' stamp='0.118'/>
<writer thread='7171'/>
<task_queued compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='512' iicount='512' level='3' stamp='0.118' comment='tiered' hot_count='512'/>
<task_queued compile_id='13' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='384' iicount='384' level='3' stamp='0.118' comment='tiered' hot_count='384'/>
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x000000011260ddd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011260df60: mov    0x8(%rsi),%r10d
  0x000000011260df64: shl    $0x3,%r10
  0x000000011260df68: cmp    %rax,%r10
  0x000000011260df6b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260df71: data32 data32 nopw 
<writer thread='7171'/>
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
0x0(%rax,%rax,1)
  0x000000011260df7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260df80: mov    %eax,-0x14000(%rsp)
  0x000000011260df87: push   %rbp
  0x000000011260df88: sub    $0x40,%rsp
  0x000000011260df8c: movabs $0x129eff3d8,%rax  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260df96: mov    0xdc(%rax),%edi
  0x000000011260df9c: add    $0x8,%edi
  0x000000011260df9f: mov    %edi,0xdc(%rax)
  0x000000011260dfa5: movabs $0x129d12398,%rax  ;   {metadata({method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260dfaf: and    $0x1ff8,%edi
  0x000000011260dfb5: cmp    $0x0,%edi
  0x000000011260dfb8: je     0x000000011260e1b8  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1637)

  0x000000011260dfbe: cmp    $0x10000,%edx
  0x000000011260dfc4: movabs $0x129eff3d8,%rax  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260dfce: movabs $0x108,%rdi
  0x000000011260dfd8: jge    0x000000011260dfe8
  0x000000011260dfde: movabs $0x118,%rdi
  0x000000011260dfe8: mov    (%rax,%rdi,1),%rbx
  0x000000011260dfec: lea    0x1(%rbx),%rbx
  0x000000011260dff0: mov    %rbx,(%rax,%rdi,1)
  0x000000011260dff4: jge    0x000000011260e191  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1637)

  0x000000011260dffa: mov    0xc(%rsi),%eax
  0x000000011260dffd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1640)

  0x000000011260e001: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1641)
                                                ; implicit exception: dispatches to 0x000000011260e1cf
  0x000000011260e004: dec    %esi
  0x000000011260e006: movabs $0x129eff3d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e010: addq   $0x1,0x128(%rdi)
  0x000000011260e018: movabs $0x129ecff78,%rdi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e022: mov    0xdc(%rdi),%ebx
  0x000000011260e028: add    $0x8,%ebx
  0x000000011260e02b: mov    %ebx,0xdc(%rdi)
  0x000000011260e031: movabs $0x129de28e0,%rdi  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e03b: and    $0x7ffff8,%ebx
  0x000000011260e041: cmp    $0x0,%ebx
  0x000000011260e044: je     0x000000011260e1d4
  0x000000011260e04a: cmp    %esi,%ecx
  0x000000011260e04c: movabs $0x129ecff78,%rdi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e056: movabs $0x108,%rbx
  0x000000011260e060: jg     0x000000011260e070
  0x000000011260e066: movabs $0x118,%rbx
  0x000000011260e070: mov    (%rdi,%rbx,1),%r8
  0x000000011260e074: lea    0x1(%r8),%r8
  0x000000011260e078: mov    %r8,(%rdi,%rbx,1)
  0x000000011260e07c: jg     0x000000011260e097  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x000000011260e082: movabs $0x129ecff78,%rsi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011260e08c: incl   0x128(%rsi)
  0x000000011260e092: jmpq   0x000000011260e133  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x000000011260e097: mov    %rsi,%rcx
  0x000000011260e09a: jmpq   0x000000011260e133  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x000000011260e09f: nop
  0x000000011260e0a0: movslq %ecx,%rsi
  0x000000011260e0a3: cmp    0xc(%rax),%ecx
  0x000000011260e0a6: jae    0x000000011260e1eb
  0x000000011260e0ac: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1643)

  0x000000011260e0b1: cmp    %edx,%esi
  0x000000011260e0b3: movabs $0x129eff3d8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e0bd: movabs $0x158,%rdi
  0x000000011260e0c7: jne    0x000000011260e0d7
  0x000000011260e0cd: movabs $0x168,%rdi
  0x000000011260e0d7: mov    (%rsi,%rdi,1),%rbx
  0x000000011260e0db: lea    0x1(%rbx),%rbx
  0x000000011260e0df: mov    %rbx,(%rsi,%rdi,1)
  0x000000011260e0e3: je     0x000000011260e171  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1643)

  0x000000011260e0e9: dec    %ecx
  0x000000011260e0eb: movabs $0x129eff3d8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e0f5: mov    0xe0(%rsi),%edi
  0x000000011260e0fb: add    $0x8,%edi
  0x000000011260e0fe: mov    %edi,0xe0(%rsi)
  0x000000011260e104: movabs $0x129d12398,%rsi  ;   {metadata({method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e10e: and    $0xfff8,%edi
  0x000000011260e114: cmp    $0x0,%edi
  0x000000011260e117: je     0x000000011260e1f4  ; OopMap{rax=Oop off=445}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)

  0x000000011260e11d: test   %eax,-0x33be023(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011260e123: movabs $0x129eff3d8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e12d: incl   0x178(%rsi)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)

  0x000000011260e133: cmp    $0x0,%ecx
  0x000000011260e136: movabs $0x129eff3d8,%rsi  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e140: movabs $0x138,%rdi
  0x000000011260e14a: jl     0x000000011260e15a
  0x000000011260e150: movabs $0x148,%rdi
  0x000000011260e15a: mov    (%rsi,%rdi,1),%rbx
  0x000000011260e15e: lea    0x1(%rbx),%rbx
  0x000000011260e162: mov    %rbx,(%rsi,%rdi,1)
  0x000000011260e166: jl     0x000000011260e180
  0x000000011260e16c: jmpq   0x000000011260e0a0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1642)

  0x000000011260e171: mov    %rcx,%rax
  0x000000011260e174: add    $0x40,%rsp
  0x000000011260e178: pop    %rbp
  0x000000011260e179: test   %eax,-0x33be07f(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260e17f: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1644)

  0x000000011260e180: mov    $0xffffffff,%eax
  0x000000011260e185: add    $0x40,%rsp
  0x000000011260e189: pop    %rbp
  0x000000011260e18a: test   %eax,-0x33be090(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260e190: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1647)

  0x000000011260e191: mov    %rsi,%rdi
  0x000000011260e194: movabs $0x129eff3d8,%rbx  ;   {metadata(method data for {method} {0x0000000129d12398} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011260e19e: addq   $0x1,0x190(%rbx)
  0x000000011260e1a6: nop
  0x000000011260e1a7: callq  0x0000000112553020  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1649)
                                                ;   {optimized virtual_call}
  0x000000011260e1ac: add    $0x40,%rsp
  0x000000011260e1b0: pop    %rbp
  0x000000011260e1b1: test   %eax,-0x33be0b7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260e1b7: retq   
  0x000000011260e1b8: mov    %rax,0x8(%rsp)
  0x000000011260e1bd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260e1c5: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1637)
                                                ;   {runtime_call}
  0x000000011260e1ca: jmpq   0x000000011260dfbe
  0x000000011260e1cf: callq  0x00000001126072c0  ; OopMap{rax=Oop off=628}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1641)
                                                ;   {runtime_call}
  0x000000011260e1d4: mov    %rdi,0x8(%rsp)
  0x000000011260e1d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260e1e1: callq  0x000000011260aea0  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)
                                                ;   {runtime_call}
  0x000000011260e1e6: jmpq   0x000000011260e04a
  0x000000011260e1eb: mov    %rcx,(%rsp)
  0x000000011260e1ef: callq  0x0000000112606c00  ; OopMap{rax=Oop off=660}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1643)
                                                ;   {runtime_call}
  0x000000011260e1f4: mov    %rsi,0x8(%rsp)
  0x000000011260e1f9: movq   $0x28,(%rsp)
  0x000000011260e201: callq  0x000000011260aea0  ; OopMap{rax=Oop off=678}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)
                                                ;   {runtime_call}
  0x000000011260e206: jmpq   0x000000011260e11d
  0x000000011260e20b: nop
  0x000000011260e20c: nop
  0x000000011260e20d: mov    0x2a8(%r15),%rax
  0x000000011260e214: movabs $0x0,%r10
  0x000000011260e21e: mov    %r10,0x2a8(%r15)
  0x000000011260e225: movabs $0x0,%r10
  0x000000011260e22f: mov    %r10,0x2b0(%r15)
  0x000000011260e236: add    $0x40,%rsp
  0x000000011260e23a: pop    %rbp
  0x000000011260e23b: jmpq   0x0000000112606860  ;   {runtime_call}
[Stub Code]
  0x000000011260e240: nop                       ;   {no_reloc}
  0x000000011260e241: nop
  0x000000011260e242: nop
  0x000000011260e243: nop
  0x000000011260e244: nop
  0x000000011260e245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011260e24f: jmpq   0x000000011260e24f  ;   {runtime_call}
[Exception Handler]
  0x000000011260e254: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011260e259: mov    %rsp,-0x28(%rsp)
  0x000000011260e25e: sub    $0x80,%rsp
  0x000000011260e265: mov    %rax,0x78(%rsp)
  0x000000011260e26a: mov    %rcx,0x70(%rsp)
  0x000000011260e26f: mov    %rdx,0x68(%rsp)
  0x000000011260e274: mov    %rbx,0x60(%rsp)
  0x000000011260e279: mov    %rbp,0x50(%rsp)
  0x000000011260e27e: mov    %rsi,0x48(%rsp)
  0x000000011260e283: mov    %rdi,0x40(%rsp)
  0x000000011260e288: mov    %r8,0x38(%rsp)
  0x000000011260e28d: mov    %r9,0x30(%rsp)
  0x000000011260e292: mov    %r10,0x28(%rsp)
  0x000000011260e297: mov    %r11,0x20(%rsp)
  0x000000011260e29c: mov    %r12,0x18(%rsp)
  0x000000011260e2a1: mov    %r13,0x10(%rsp)
  0x000000011260e2a6: mov    %r14,0x8(%rsp)
  0x000000011260e2ab: mov    %r15,(%rsp)
  0x000000011260e2af: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260e2b9: movabs $0x11260e259,%rsi  ;   {internal_word}
  0x000000011260e2c3: mov    %rsp,%rdx
  0x000000011260e2c6: and    $0xfffffffffffffff0,%rsp
  0x000000011260e2ca: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260e2cf: hlt    
[Deopt Handler Code]
  0x000000011260e2d0: movabs $0x11260e2d0,%r10  ;   {section_word}
  0x000000011260e2da: push   %r10
  0x000000011260e2dc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260e2e1: hlt    
  0x000000011260e2e2: hlt    
  0x000000011260e2e3: hlt    
  0x000000011260e2e4: hlt    
  0x000000011260e2e5: hlt    
  0x000000011260e2e6: hlt    
  0x000000011260e2e7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x000000011260df60' size='1880' address='0x000000011260ddd0' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1320' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String lastIndexOf (II)I' bytes='52' count='178' backedge_count='7561' iicount='178' stamp='0.121'/>
<writer thread='7171'/>
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x000000011260d910:
Code:
[Entry Point]
[Constants]
  # 
<writer thread='7171'/>
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
{method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011260da80: mov    0x8(%rsi),%r10d
  0x000000011260da84: shl    $0x3,%r10
  0x000000011260da88: cmp    %rax,%r10
  0x000000011260da8b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011260da91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011260da9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011260daa0: mov    %eax,-0x14000(%rsp)
  0x000000011260daa7: push   %rbp
  0x000000011260daa8: sub    $0x30,%rsp
  0x000000011260daac: movabs $0x129f03ac8,%rdi  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011260dab6: mov    0xdc(%rdi),%ebx
  0x000000011260dabc: add    $0x8,%ebx
  0x000000011260dabf: mov    %ebx,0xdc(%rdi)
  0x000000011260dac5: movabs $0x129d81178,%rdi  ;   {metadata({method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011260dacf: and    $0x1ff8,%ebx
  0x000000011260dad5: cmp    $0x0,%ebx
  0x000000011260dad8: je     0x000000011260dbc8  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 120)

  0x000000011260dade: mov    0x10(%rsi),%edi
  0x000000011260dae1: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x000000011260dae5: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; implicit exception: dispatches to 0x000000011260dbdf
  0x000000011260dae8: mov    %rdx,%rbx
  0x000000011260daeb: sub    %edi,%ebx
  0x000000011260daed: cmp    $0x0,%ebx
  0x000000011260daf0: movabs $0x129f03ac8,%rdi  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011260dafa: movabs $0x108,%rbx
  0x000000011260db04: jle    0x000000011260db14
  0x000000011260db0a: movabs $0x118,%rbx
  0x000000011260db14: mov    (%rdi,%rbx,1),%rax
  0x000000011260db18: lea    0x1(%rax),%rax
  0x000000011260db1c: mov    %rax,(%rdi,%rbx,1)
  0x000000011260db20: jle    0x000000011260dbbc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)

  0x000000011260db26: mov    %rsi,%rdi
  0x000000011260db29: movabs $0x129f03ac8,%rbx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011260db33: mov    0x8(%rdi),%edi
  0x000000011260db36: shl    $0x3,%rdi
  0x000000011260db3a: cmp    0x130(%rbx),%rdi
  0x000000011260db41: jne    0x000000011260db50
  0x000000011260db43: addq   $0x1,0x138(%rbx)
  0x000000011260db4b: jmpq   0x000000011260dbb6
  0x000000011260db50: cmp    0x140(%rbx),%rdi
  0x000000011260db57: jne    0x000000011260db66
  0x000000011260db59: addq   $0x1,0x148(%rbx)
  0x000000011260db61: jmpq   0x000000011260dbb6
  0x000000011260db66: cmpq   $0x0,0x130(%rbx)
  0x000000011260db71: jne    0x000000011260db8a
  0x000000011260db73: mov    %rdi,0x130(%rbx)
  0x000000011260db7a: movq   $0x1,0x138(%rbx)
  0x000000011260db85: jmpq   0x000000011260dbb6
  0x000000011260db8a: cmpq   $0x0,0x140(%rbx)
  0x000000011260db95: jne    0x000000011260dbae
  0x000000011260db97: mov    %rdi,0x140(%rbx)
  0x000000011260db9e: movq   $0x1,0x148(%rbx)
  0x000000011260dba9: jmpq   0x000000011260dbb6
  0x000000011260dbae: addq   $0x1,0x128(%rbx)
  0x000000011260dbb6: nop
  0x000000011260dbb7: callq  0x0000000112553020  ; OopMap{off=316}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {optimized virtual_call}
  0x000000011260dbbc: add    $0x30,%rsp
  0x000000011260dbc0: pop    %rbp
  0x000000011260dbc1: test   %eax,-0x33bdac7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011260dbc7: retq   
  0x000000011260dbc8: mov    %rdi,0x8(%rsp)
  0x000000011260dbcd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011260dbd5: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=346}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ;   {runtime_call}
  0x000000011260dbda: jmpq   0x000000011260dade
  0x000000011260dbdf: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=356}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ;   {runtime_call}
  0x000000011260dbe4: nop
  0x000000011260dbe5: nop
  0x000000011260dbe6: mov    0x2a8(%r15),%rax
  0x000000011260dbed: movabs $0x0,%r10
  0x000000011260dbf7: mov    %r10,0x2a8(%r15)
  0x000000011260dbfe: movabs $0x0,%r10
  0x000000011260dc08: mov    %r10,0x2b0(%r15)
  0x000000011260dc0f: add    $0x30,%rsp
  0x000000011260dc13: pop    %rbp
  0x000000011260dc14: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011260dc19: hlt    
  0x000000011260dc1a: hlt    
  0x000000011260dc1b: hlt    
  0x000000011260dc1c: hlt    
  0x000000011260dc1d: hlt    
  0x000000011260dc1e: hlt    
  0x000000011260dc1f: hlt    
[Stub Code]
  0x000000011260dc20: nop                       ;   {no_reloc}
  0x000000011260dc21: nop
  0x000000011260dc22: nop
  0x000000011260dc23: nop
  0x000000011260dc24: nop
  0x000000011260dc25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011260dc2f: jmpq   0x000000011260dc2f  ;   {runtime_call}
[Exception Handler]
  0x000000011260dc34: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011260dc39: mov    %rsp,-0x28(%rsp)
  0x000000011260dc3e: sub    $0x80,%rsp
  0x000000011260dc45: mov    %rax,0x78(%rsp)
  0x000000011260dc4a: mov    %rcx,0x70(%rsp)
  0x000000011260dc4f: mov    %rdx,0x68(%rsp)
  0x000000011260dc54: mov    %rbx,0x60(%rsp)
  0x000000011260dc59: mov    %rbp,0x50(%rsp)
  0x000000011260dc5e: mov    %rsi,0x48(%rsp)
  0x000000011260dc63: mov    %rdi,0x40(%rsp)
  0x000000011260dc68: mov    %r8,0x38(%rsp)
  0x000000011260dc6d: mov    %r9,0x30(%rsp)
  0x000000011260dc72: mov    %r10,0x28(%rsp)
  0x000000011260dc77: mov    %r11,0x20(%rsp)
  0x000000011260dc7c: mov    %r12,0x18(%rsp)
  0x000000011260dc81: mov    %r13,0x10(%rsp)
  0x000000011260dc86: mov    %r14,0x8(%rsp)
  0x000000011260dc8b: mov    %r15,(%rsp)
  0x000000011260dc8f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011260dc99: movabs $0x11260dc39,%rsi  ;   {internal_word}
  0x000000011260dca3: mov    %rsp,%rdx
  0x000000011260dca6: and    $0xfffffffffffffff0,%rsp
  0x000000011260dcaa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011260dcaf: hlt    
[Deopt Handler Code]
  0x000000011260dcb0: movabs $0x11260dcb0,%r10  ;   {section_word}
  0x000000011260dcba: push   %r10
  0x000000011260dcbc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011260dcc1: hlt    
  0x000000011260dcc2: hlt    
  0x000000011260dcc3: hlt    
  0x000000011260dcc4: hlt    
  0x000000011260dcc5: hlt    
  0x000000011260dcc6: hlt    
  0x000000011260dcc7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x000000011260da80' size='1192' address='0x000000011260d910' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='968' scopes_pcs_offset='1024' dependencies_offset='1168' nul_chk_table_offset='1176' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='401' iicount='401' stamp='0.122'/>
<writer thread='7171'/>
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112619f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x000000011261a100: mov    0x8(%rsi),%r10d
  0x000000011261a104: shl    $0x3,%r10
  0x000000011261a108: cmp    %rax,%r10
  0x000000011261a10b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011261a111: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011261a11c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011261a120: mov    %eax,-0x14000(%rsp)
  0x000000011261a127: push   %rbp
  0x000000011261a128: sub    $0x70,%rsp
  0x000000011261a12c: mov    %rsi,0x48(%rsp)
  0x000000011261a131: movabs $0x129f05d10,%rdi  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a13b: mov    0xdc(%rdi),%ebx
  0x000000011261a141: add    $0x8,%ebx
  0x000000011261a144: mov    %ebx,0xdc(%rdi)
  0x000000011261a14a: movabs $0x129d81a28,%rdi  ;   {metadata({method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a154: and    $0x1ff8,%ebx
  0x000000011261a15a: cmp    $0x0,%ebx
  0x000000011261a15d: je     0x000000011261a4b0  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 418)

  0x000000011261a163: cmp    $0x0,%rdx
  0x000000011261a167: movabs $0x129f05d10,%rdi  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a171: movabs $0x108,%rbx
  0x000000011261a17b: jne    0x000000011261a18b
  0x000000011261a181: movabs $0x118,%rbx
  0x000000011261a18b: mov    (%rdi,%rbx,1),%rax
  0x000000011261a18f: lea    0x1(%rax),%rax
  0x000000011261a193: mov    %rax,(%rdi,%rbx,1)
  0x000000011261a197: je     0x000000011261a48a  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 418)

  0x000000011261a19d: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x000000011261a4c7
  0x000000011261a1a0: mov    %rdx,%rdi
  0x000000011261a1a3: movabs $0x129f05d10,%rbx  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a1ad: mov    0x8(%rdi),%edi
  0x000000011261a1b0: shl    $0x3,%rdi
  0x000000011261a1b4: cmp    0x140(%rbx),%rdi
  0x000000011261a1bb: jne    0x000000011261a1ca
  0x000000011261a1bd: addq   $0x1,0x148(%rbx)
  0x000000011261a1c5: jmpq   0x000000011261a230
  0x000000011261a1ca: cmp    0x150(%rbx),%rdi
  0x000000011261a1d1: jne    0x000000011261a1e0
  0x000000011261a1d3: addq   $0x1,0x158(%rbx)
  0x000000011261a1db: jmpq   0x000000011261a230
  0x000000011261a1e0: cmpq   $0x0,0x140(%rbx)
  0x000000011261a1eb: jne    0x000000011261a204
  0x000000011261a1ed: mov    %rdi,0x140(%rbx)
  0x000000011261a1f4: movq   $0x1,0x148(%rbx)
  0x000000011261a1ff: jmpq   0x000000011261a230
  0x000000011261a204: cmpq   $0x0,0x150(%rbx)
  0x000000011261a20f: jne    0x000000011261a228
  0x000000011261a211: mov    %rdi,0x150(%rbx)
  0x000000011261a218: movq   $0x1,0x158(%rbx)
  0x000000011261a223: jmpq   0x000000011261a230
  0x000000011261a228: addq   $0x1,0x138(%rbx)
  0x000000011261a230: movabs $0x129ed91d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011261a23a: mov    0xdc(%rdi),%ebx
  0x000000011261a240: add    $0x8,%ebx
  0x000000011261a243: mov    %ebx,0xdc(%rdi)
  0x000000011261a249: movabs $0x129d10c30,%rdi  ;   {metadata({method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011261a253: and    $0x7ffff8,%ebx
  0x000000011261a259: cmp    $0x0,%ebx
  0x000000011261a25c: je     0x000000011261a4cc
  0x000000011261a262: mov    0xc(%rdx),%edi
  0x000000011261a265: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)

  0x000000011261a269: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x000000011261a4e3
  0x000000011261a26c: mov    %edi,0x58(%rsp)
  0x000000011261a270: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 421)

  0x000000011261a273: add    %edi,%ebx
  0x000000011261a275: mov    %rsi,%rax
  0x000000011261a278: movabs $0x129f05d10,%rcx  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a282: addq   $0x1,0x168(%rcx)
  0x000000011261a28a: movabs $0x129f03ac8,%rax  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a294: mov    0xdc(%rax),%ecx
  0x000000011261a29a: add    $0x8,%ecx
  0x000000011261a29d: mov    %ecx,0xdc(%rax)
  0x000000011261a2a3: movabs $0x129d81178,%rax  ;   {metadata({method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a2ad: and    $0x7ffff8,%ecx
  0x000000011261a2b3: cmp    $0x0,%ecx
  0x000000011261a2b6: je     0x000000011261a4e8
  0x000000011261a2bc: mov    0x10(%rsi),%eax
  0x000000011261a2bf: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x000000011261a2c3: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ; implicit exception: dispatches to 0x000000011261a4ff
  0x000000011261a2c6: mov    %rbx,%rcx
  0x000000011261a2c9: sub    %eax,%ecx
  0x000000011261a2cb: cmp    $0x0,%ecx
  0x000000011261a2ce: movabs $0x129f03ac8,%rax  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a2d8: movabs $0x108,%rcx
  0x000000011261a2e2: jle    0x000000011261a2f2
  0x000000011261a2e8: movabs $0x118,%rcx
  0x000000011261a2f2: mov    (%rax,%rcx,1),%r8
  0x000000011261a2f6: lea    0x1(%r8),%r8
  0x000000011261a2fa: mov    %r8,(%rax,%rcx,1)
  0x000000011261a2fe: mov    %rdx,0x50(%rsp)
  0x000000011261a303: jle    0x000000011261a3ac  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x000000011261a309: mov    %rsi,%rax
  0x000000011261a30c: movabs $0x129f03ac8,%rcx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a316: mov    0x8(%rax),%eax
  0x000000011261a319: shl    $0x3,%rax
  0x000000011261a31d: cmp    0x130(%rcx),%rax
  0x000000011261a324: jne    0x000000011261a333
  0x000000011261a326: addq   $0x1,0x138(%rcx)
  0x000000011261a32e: jmpq   0x000000011261a399
  0x000000011261a333: cmp    0x140(%rcx),%rax
  0x000000011261a33a: jne    0x000000011261a349
  0x000000011261a33c: addq   $0x1,0x148(%rcx)
  0x000000011261a344: jmpq   0x000000011261a399
  0x000000011261a349: cmpq   $0x0,0x130(%rcx)
  0x000000011261a354: jne    0x000000011261a36d
  0x000000011261a356: mov    %rax,0x130(%rcx)
  0x000000011261a35d: movq   $0x1,0x138(%rcx)
  0x000000011261a368: jmpq   0x000000011261a399
  0x000000011261a36d: cmpq   $0x0,0x140(%rcx)
  0x000000011261a378: jne    0x000000011261a391
  0x000000011261a37a: mov    %rax,0x140(%rcx)
  0x000000011261a381: movq   $0x1,0x148(%rcx)
  0x000000011261a38c: jmpq   0x000000011261a399
  0x000000011261a391: addq   $0x1,0x128(%rcx)
  0x000000011261a399: mov    %rbx,%rdx
  0x000000011261a39c: mov    %rsi,%rbx
  0x000000011261a39f: mov    %rbx,%rsi          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x000000011261a3a2: nop
  0x000000011261a3a3: nop
  0x000000011261a3a4: nop
  0x000000011261a3a5: nop
  0x000000011261a3a6: nop
  0x000000011261a3a7: callq  0x0000000112553020  ; OopMap{[72]=Oop [80]=Oop off=684}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {optimized virtual_call}
  0x000000011261a3ac: mov    0x58(%rsp),%ebx
  0x000000011261a3b0: mov    0x50(%rsp),%rdi
  0x000000011261a3b5: mov    0x48(%rsp),%rsi
  0x000000011261a3ba: mov    0x10(%rsi),%r8d
  0x000000011261a3be: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 422)

  0x000000011261a3c2: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 422)

  0x000000011261a3c6: mov    %rdi,%rdx
  0x000000011261a3c9: movabs $0x129f05d10,%rcx  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a3d3: mov    0x8(%rdx),%edx
  0x000000011261a3d6: shl    $0x3,%rdx
  0x000000011261a3da: cmp    0x180(%rcx),%rdx
  0x000000011261a3e1: jne    0x000000011261a3f0
  0x000000011261a3e3: addq   $0x1,0x188(%rcx)
  0x000000011261a3eb: jmpq   0x000000011261a456
  0x000000011261a3f0: cmp    0x190(%rcx),%rdx
  0x000000011261a3f7: jne    0x000000011261a406
  0x000000011261a3f9: addq   $0x1,0x198(%rcx)
  0x000000011261a401: jmpq   0x000000011261a456
  0x000000011261a406: cmpq   $0x0,0x180(%rcx)
  0x000000011261a411: jne    0x000000011261a42a
  0x000000011261a413: mov    %rdx,0x180(%rcx)
  0x000000011261a41a: movq   $0x1,0x188(%rcx)
  0x000000011261a425: jmpq   0x000000011261a456
  0x000000011261a42a: cmpq   $0x0,0x190(%rcx)
  0x000000011261a435: jne    0x000000011261a44e
  0x000000011261a437: mov    %rdx,0x190(%rcx)
  0x000000011261a43e: movq   $0x1,0x198(%rcx)
  0x000000011261a449: jmpq   0x000000011261a456
  0x000000011261a44e: addq   $0x1,0x178(%rcx)
  0x000000011261a456: mov    $0x0,%edx
  0x000000011261a45b: mov    %rbx,%rcx
  0x000000011261a45e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)

  0x000000011261a461: nop
  0x000000011261a462: nop
  0x000000011261a463: nop
  0x000000011261a464: nop
  0x000000011261a465: nop
  0x000000011261a466: nop
  0x000000011261a467: callq  0x0000000112553020  ; OopMap{[72]=Oop off=876}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)
                                                ;   {optimized virtual_call}
  0x000000011261a46c: mov    0x48(%rsp),%rsi
  0x000000011261a471: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 423)

  0x000000011261a474: add    0x58(%rsp),%eax
  0x000000011261a478: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 423)

  0x000000011261a47b: mov    %rsi,%rax
  0x000000011261a47e: add    $0x70,%rsp
  0x000000011261a482: pop    %rbp
  0x000000011261a483: test   %eax,-0x33ca389(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261a489: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 424)

  0x000000011261a48a: mov    %rsi,%rdi
  0x000000011261a48d: movabs $0x129f05d10,%rbx  ;   {metadata(method data for {method} {0x0000000129d81a28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261a497: addq   $0x1,0x128(%rbx)
  0x000000011261a49f: callq  0x0000000112553020  ; OopMap{off=932}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 419)
                                                ;   {optimized virtual_call}
  0x000000011261a4a4: add    $0x70,%rsp
  0x000000011261a4a8: pop    %rbp
  0x000000011261a4a9: test   %eax,-0x33ca3af(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261a4af: retq   
  0x000000011261a4b0: mov    %rdi,0x8(%rsp)
  0x000000011261a4b5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261a4bd: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 418)
                                                ;   {runtime_call}
  0x000000011261a4c2: jmpq   0x000000011261a163
  0x000000011261a4c7: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=972}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x000000011261a4cc: mov    %rdi,0x8(%rsp)
  0x000000011261a4d1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261a4d9: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=990}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x000000011261a4de: jmpq   0x000000011261a262
  0x000000011261a4e3: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=1000}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x000000011261a4e8: mov    %rax,0x8(%rsp)
  0x000000011261a4ed: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261a4f5: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=1018}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x000000011261a4fa: jmpq   0x000000011261a2bc
  0x000000011261a4ff: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop off=1028}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x000000011261a504: nop
  0x000000011261a505: nop
  0x000000011261a506: mov    0x2a8(%r15),%rax
  0x000000011261a50d: movabs $0x0,%r10
  0x000000011261a517: mov    %r10,0x2a8(%r15)
  0x000000011261a51e: movabs $0x0,%r10
  0x000000011261a528: mov    %r10,0x2b0(%r15)
  0x000000011261a52f: add    $0x70,%rsp
  0x000000011261a533: pop    %rbp
  0x000000011261a534: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011261a539: hlt    
  0x000000011261a53a: hlt    
  0x000000011261a53b: hlt    
  0x000000011261a53c: hlt    
  0x000000011261a53d: hlt    
  0x000000011261a53e: hlt    
  0x000000011261a53f: hlt    
[Stub Code]
  0x000000011261a540: nop                       ;   {no_reloc}
  0x000000011261a541: nop
  0x000000011261a542: nop
  0x000000011261a543: nop
  0x000000011261a544: nop
  0x000000011261a545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261a54f: jmpq   0x000000011261a54f  ;   {runtime_call}
  0x000000011261a554: nop
  0x000000011261a555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261a55f: jmpq   0x000000011261a55f  ;   {runtime_call}
  0x000000011261a564: nop
  0x000000011261a565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261a56f: jmpq   0x000000011261a56f  ;   {runtime_call}
[Exception Handler]
  0x000000011261a574: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011261a579: mov    %rsp,-0x28(%rsp)
  0x000000011261a57e: sub    $0x80,%rsp
  0x000000011261a585: mov    %rax,0x78(%rsp)
  0x000000011261a58a: mov    %rcx,0x70(%rsp)
  0x000000011261a58f: mov    %rdx,0x68(%rsp)
  0x000000011261a594: mov    %rbx,0x60(%rsp)
  0x000000011261a599: mov    %rbp,0x50(%rsp)
  0x000000011261a59e: mov    %rsi,0x48(%rsp)
  0x000000011261a5a3: mov    %rdi,0x40(%rsp)
  0x000000011261a5a8: mov    %r8,0x38(%rsp)
  0x000000011261a5ad: mov    %r9,0x30(%rsp)
  0x000000011261a5b2: mov    %r10,0x28(%rsp)
  0x000000011261a5b7: mov    %r11,0x20(%rsp)
  0x000000011261a5bc: mov    %r12,0x18(%rsp)
  0x000000011261a5c1: mov    %r13,0x10(%rsp)
  0x000000011261a5c6: mov    %r14,0x8(%rsp)
  0x000000011261a5cb: mov    %r15,(%rsp)
  0x000000011261a5cf: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011261a5d9: movabs $0x11261a579,%rsi  ;   {internal_word}
  0x000000011261a5e3: mov    %rsp,%rdx
  0x000000011261a5e6: and    $0xfffffffffffffff0,%rsp
  0x000000011261a5ea: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261a5ef: hlt    
[Deopt Handler Code]
  0x000000011261a5f0: movabs $0x11261a5f0,%r10  ;   {section_word}
  0x000000011261a5fa: push   %r10
  0x000000011261a5fc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011261a601: hlt    
  0x000000011261a602: hlt    
  0x000000011261a603: hlt    
  0x000000011261a604: hlt    
  0x000000011261a605: hlt    
  0x000000011261a606: hlt    
  0x000000011261a607: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x000000011261a100' size='2472' address='0x0000000112619f50' relocation_offset='296' insts_offset='432' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2000' dependencies_offset='2432' nul_chk_table_offset='2440' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='299' iicount='299' stamp='0.127'/>
<writer thread='7171'/>
<task_queued compile_id='14' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.128' comment='tiered' hot_count='256'/>
<task_queued compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='512' iicount='512' level='3' stamp='0.128' comment='tiered' hot_count='512'/>
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x000000011261a910:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011261ab20: mov    %eax,-0x14000(%rsp)
  0x000000011261ab27: push   %rbp
  0x000000011261ab28: sub    $0xa0,%rsp
  0x000000011261ab2f: mov    %rsi,%r8
  0x000000011261ab32: mov    %rdx,%r9
  0x000000011261ab35: movabs $0x129eff160,%rbx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261ab3f: mov    0xdc(%rbx),%edx
  0x000000011261ab45: add    $0x8,%edx
  0x000000011261ab48: mov    %edx,0xdc(%rbx)
  0x000000011261ab4e: movabs $0x129e22738,%rbx  ;   {metadata({method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261ab58: and    $0x1ff8,%edx
  0x000000011261ab5e: cmp    $0x0,%edx
  0x000000011261ab61: je     0x000000011261b3c1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000011261ab67: mov    %rcx,%r11
  0x000000011261ab6a: sub    %r9d,%r11d
  0x000000011261ab6d: cmp    $0x0,%r11d
  0x000000011261ab71: movabs $0x129eff160,%rbx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261ab7b: movabs $0x108,%rdx
  0x000000011261ab85: jge    0x000000011261ab95
  0x000000011261ab8b: movabs $0x118,%rdx
  0x000000011261ab95: mov    (%rbx,%rdx,1),%rsi
  0x000000011261ab99: lea    0x1(%rsi),%rsi
  0x000000011261ab9d: mov    %rsi,(%rbx,%rdx,1)
  0x000000011261aba1: jl     0x000000011261ad64  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000011261aba7: mov    %r11,%rbx
  0x000000011261abaa: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261abb4: movslq %ebx,%rbx
  0x000000011261abb7: mov    %rbx,%rdi
  0x000000011261abba: cmp    $0xffffff,%rbx
  0x000000011261abc1: ja     0x000000011261b3d8
  0x000000011261abc7: movabs $0x17,%rsi
  0x000000011261abd1: lea    (%rsi,%rbx,2),%rsi
  0x000000011261abd5: and    $0xfffffffffffffff8,%rsi
  0x000000011261abd9: mov    0x60(%r15),%rax
  0x000000011261abdd: lea    (%rax,%rsi,1),%rsi
  0x000000011261abe1: cmp    0x70(%r15),%rsi
  0x000000011261abe5: ja     0x000000011261b3d8
  0x000000011261abeb: mov    %rsi,0x60(%r15)
  0x000000011261abef: sub    %rax,%rsi
  0x000000011261abf2: movq   $0x1,(%rax)
  0x000000011261abf9: mov    %rdx,%rcx
  0x000000011261abfc: shr    $0x3,%rcx
  0x000000011261ac00: mov    %ecx,0x8(%rax)
  0x000000011261ac03: mov    %ebx,0xc(%rax)
  0x000000011261ac06: sub    $0x10,%rsi
  0x000000011261ac0a: je     0x000000011261ac21
  0x000000011261ac10: xor    %rbx,%rbx
  0x000000011261ac13: shr    $0x3,%rsi
  0x000000011261ac17: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261ac1c: dec    %rsi
  0x000000011261ac1f: jne    0x000000011261ac17  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000011261ac21: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000011261b3e2
  0x000000011261ac25: sub    %r9d,%esi
  0x000000011261ac28: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261ac32: addq   $0x1,0x208(%rdx)
  0x000000011261ac3a: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011261ac44: mov    0xdc(%rdx),%ecx
  0x000000011261ac4a: add    $0x8,%ecx
  0x000000011261ac4d: mov    %ecx,0xdc(%rdx)
  0x000000011261ac53: movabs $0x129de28e0,%rdx  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011261ac5d: and    $0x7ffff8,%ecx
  0x000000011261ac63: cmp    $0x0,%ecx
  0x000000011261ac66: je     0x000000011261b3e7
  0x000000011261ac6c: cmp    %r11d,%esi
  0x000000011261ac6f: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011261ac79: movabs $0x108,%rcx
  0x000000011261ac83: jg     0x000000011261ac93
  0x000000011261ac89: movabs $0x118,%rcx
  0x000000011261ac93: mov    (%rdx,%rcx,1),%rdi
  0x000000011261ac97: lea    0x1(%rdi),%rdi
  0x000000011261ac9b: mov    %rdi,(%rdx,%rcx,1)
  0x000000011261ac9f: jg     0x000000011261acbd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011261aca5: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011261acaf: incl   0x128(%rdx)
  0x000000011261acb5: mov    %rsi,%rdi
  0x000000011261acb8: jmpq   0x000000011261acc0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011261acbd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011261acc0: movabs $0x129eff160,%rsi  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261acca: addq   $0x1,0x218(%rsi)
  0x000000011261acd2: mov    %r8,%rsi
  0x000000011261acd5: mov    %r9,%rdx
  0x000000011261acd8: mov    %rax,%rcx
  0x000000011261acdb: mov    $0x0,%r8d
  0x000000011261ace1: mov    %rdi,%r9
  0x000000011261ace4: mov    %rax,0x70(%rsp)
  0x000000011261ace9: test   %edx,%edx
  0x000000011261aceb: jl     0x000000011261b3fe
  0x000000011261acf1: lea    (%rdx,%r9,1),%rdi
  0x000000011261acf5: cmp    0xc(%rsi),%edi
  0x000000011261acf8: ja     0x000000011261b3fe
  0x000000011261acfe: lea    (%r8,%r9,1),%rdi
  0x000000011261ad02: cmp    0xc(%rcx),%edi
  0x000000011261ad05: ja     0x000000011261b3fe
  0x000000011261ad0b: test   %r9d,%r9d
  0x000000011261ad0e: jl     0x000000011261b3fe
  0x000000011261ad14: je     0x000000011261ad50
  0x000000011261ad1a: movslq %edx,%rdx
  0x000000011261ad1d: movslq %r8d,%r8
  0x000000011261ad20: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011261ad25: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011261ad2a: mov    %r9,%rdx
  0x000000011261ad2d: test   $0xf,%esp
  0x000000011261ad33: je     0x000000011261ad4b
  0x000000011261ad39: sub    $0x8,%rsp
  0x000000011261ad3d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011261ad42: add    $0x8,%rsp
  0x000000011261ad46: jmpq   0x000000011261ad50
  0x000000011261ad4b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000011261ad50: mov    0x70(%rsp),%rax
  0x000000011261ad55: add    $0xa0,%rsp
  0x000000011261ad5c: pop    %rbp
  0x000000011261ad5d: test   %eax,-0x33cac63(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261ad63: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000011261ad64: mov    %ecx,0x80(%rsp)
  0x000000011261ad6b: nopl   0x0(%rax,%rax,1)
  0x000000011261ad70: jmpq   0x000000011261b418  ;   {no_reloc}
  0x000000011261ad75: add    %al,(%rax)
  0x000000011261ad77: add    %al,(%rax)
  0x000000011261ad79: add    %cl,-0x75(%rcx)
  0x000000011261ad7c: rex.RXB (bad) 
  0x000000011261ad7e: lea    0x20(%rax),%rdi
  0x000000011261ad82: cmp    0x70(%r15),%rdi
  0x000000011261ad86: ja     0x000000011261b422
  0x000000011261ad8c: mov    %rdi,0x60(%r15)
  0x000000011261ad90: mov    0xa8(%rdx),%rcx
  0x000000011261ad97: mov    %rcx,(%rax)
  0x000000011261ad9a: mov    %rdx,%rcx
  0x000000011261ad9d: shr    $0x3,%rcx
  0x000000011261ada1: mov    %ecx,0x8(%rax)
  0x000000011261ada4: xor    %rcx,%rcx
  0x000000011261ada7: mov    %ecx,0xc(%rax)
  0x000000011261adaa: xor    %rcx,%rcx
  0x000000011261adad: mov    %rcx,0x10(%rax)
  0x000000011261adb1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000011261adb5: data32 xchg %ax,%ax
  0x000000011261adb8: jmpq   0x000000011261b43e  ;   {no_reloc}
  0x000000011261adbd: add    %al,(%rax)
  0x000000011261adbf: add    %al,(%rax)
  0x000000011261adc1: add    %cl,-0x77(%rax)
  0x000000011261adc4: test   %ah,(%rax,%rcx,4)
  0x000000011261adc7: add    %al,(%rax)
  0x000000011261adc9: add    %cl,-0x75(%rcx)
  0x000000011261adcc: rex.RXB (bad) 
  0x000000011261adce: lea    0x18(%rax),%rdi
  0x000000011261add2: cmp    0x70(%r15),%rdi
  0x000000011261add6: ja     0x000000011261b448
  0x000000011261addc: mov    %rdi,0x60(%r15)
  0x000000011261ade0: mov    0xa8(%rdx),%rcx
  0x000000011261ade7: mov    %rcx,(%rax)
  0x000000011261adea: mov    %rdx,%rcx
  0x000000011261aded: shr    $0x3,%rcx
  0x000000011261adf1: mov    %ecx,0x8(%rax)
  0x000000011261adf4: xor    %rcx,%rcx
  0x000000011261adf7: mov    %ecx,0xc(%rax)
  0x000000011261adfa: xor    %rcx,%rcx
  0x000000011261adfd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000011261ae01: mov    %rax,%rbx
  0x000000011261ae04: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261ae0e: addq   $0x1,0x128(%rdx)
  0x000000011261ae16: movabs $0x129f07058,%rbx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261ae20: mov    0xdc(%rbx),%edx
  0x000000011261ae26: add    $0x8,%edx
  0x000000011261ae29: mov    %edx,0xdc(%rbx)
  0x000000011261ae2f: movabs $0x129d84b20,%rbx  ;   {metadata({method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261ae39: and    $0x7ffff8,%edx
  0x000000011261ae3f: cmp    $0x0,%edx
  0x000000011261ae42: je     0x000000011261b455
  0x000000011261ae48: mov    %rax,%rbx
  0x000000011261ae4b: movabs $0x129f07058,%rdx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261ae55: addq   $0x1,0x108(%rdx)
  0x000000011261ae5d: movabs $0x129f071a8,%rbx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261ae67: mov    0xdc(%rbx),%edx
  0x000000011261ae6d: add    $0x8,%edx
  0x000000011261ae70: mov    %edx,0xdc(%rbx)
  0x000000011261ae76: movabs $0x129d80f08,%rbx  ;   {metadata({method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261ae80: and    $0x7ffff8,%edx
  0x000000011261ae86: cmp    $0x0,%edx
  0x000000011261ae89: je     0x000000011261b46c
  0x000000011261ae8f: mov    %rax,%rbx
  0x000000011261ae92: movabs $0x129f071a8,%rdx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261ae9c: addq   $0x1,0x108(%rdx)
  0x000000011261aea4: movabs $0x129e7d930,%rbx  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261aeae: mov    0xdc(%rbx),%edx
  0x000000011261aeb4: add    $0x8,%edx
  0x000000011261aeb7: mov    %edx,0xdc(%rbx)
  0x000000011261aebd: movabs $0x129d0d488,%rbx  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261aec7: and    $0x7ffff8,%edx
  0x000000011261aecd: cmp    $0x0,%edx
  0x000000011261aed0: je     0x000000011261b483
  0x000000011261aed6: mov    $0x10,%ebx
  0x000000011261aedb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261aee5: mov    %rax,%r13
  0x000000011261aee8: movslq %ebx,%rbx
  0x000000011261aeeb: mov    %rbx,%rdi
  0x000000011261aeee: cmp    $0xffffff,%rbx
  0x000000011261aef5: ja     0x000000011261b49a
  0x000000011261aefb: movabs $0x17,%rsi
  0x000000011261af05: lea    (%rsi,%rbx,2),%rsi
  0x000000011261af09: and    $0xfffffffffffffff8,%rsi
  0x000000011261af0d: mov    0x60(%r15),%rax
  0x000000011261af11: lea    (%rax,%rsi,1),%rsi
  0x000000011261af15: cmp    0x70(%r15),%rsi
  0x000000011261af19: ja     0x000000011261b49a
  0x000000011261af1f: mov    %rsi,0x60(%r15)
  0x000000011261af23: sub    %rax,%rsi
  0x000000011261af26: movq   $0x1,(%rax)
  0x000000011261af2d: mov    %rdx,%rcx
  0x000000011261af30: shr    $0x3,%rcx
  0x000000011261af34: mov    %ecx,0x8(%rax)
  0x000000011261af37: mov    %ebx,0xc(%rax)
  0x000000011261af3a: sub    $0x10,%rsi
  0x000000011261af3e: je     0x000000011261af55
  0x000000011261af44: xor    %rbx,%rbx
  0x000000011261af47: shr    $0x3,%rsi
  0x000000011261af4b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261af50: dec    %rsi
  0x000000011261af53: jne    0x000000011261af4b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011261af55: mov    %rax,%r10
  0x000000011261af58: shr    $0x3,%r10
  0x000000011261af5c: mov    %r10d,0x10(%r13)
  0x000000011261af60: mov    %r13,%rax
  0x000000011261af63: shr    $0x9,%rax
  0x000000011261af67: movabs $0x10e129000,%rdx
  0x000000011261af71: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011261af75: mov    %r13,%rax
  0x000000011261af78: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261af82: mov    0x8(%rax),%eax
  0x000000011261af85: shl    $0x3,%rax
  0x000000011261af89: cmp    0x140(%rdx),%rax
  0x000000011261af90: jne    0x000000011261af9f
  0x000000011261af92: addq   $0x1,0x148(%rdx)
  0x000000011261af9a: jmpq   0x000000011261b005
  0x000000011261af9f: cmp    0x150(%rdx),%rax
  0x000000011261afa6: jne    0x000000011261afb5
  0x000000011261afa8: addq   $0x1,0x158(%rdx)
  0x000000011261afb0: jmpq   0x000000011261b005
  0x000000011261afb5: cmpq   $0x0,0x140(%rdx)
  0x000000011261afc0: jne    0x000000011261afd9
  0x000000011261afc2: mov    %rax,0x140(%rdx)
  0x000000011261afc9: movq   $0x1,0x148(%rdx)
  0x000000011261afd4: jmpq   0x000000011261b005
  0x000000011261afd9: cmpq   $0x0,0x150(%rdx)
  0x000000011261afe4: jne    0x000000011261affd
  0x000000011261afe6: mov    %rax,0x150(%rdx)
  0x000000011261afed: movq   $0x1,0x158(%rdx)
  0x000000011261aff8: jmpq   0x000000011261b005
  0x000000011261affd: addq   $0x1,0x138(%rdx)
  0x000000011261b005: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b00f: mov    0xdc(%rdx),%esi
  0x000000011261b015: add    $0x8,%esi
  0x000000011261b018: mov    %esi,0xdc(%rdx)
  0x000000011261b01e: movabs $0x129d852f8,%rdx  ;   {metadata({method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b028: and    $0x7ffff8,%esi
  0x000000011261b02e: cmp    $0x0,%esi
  0x000000011261b031: je     0x000000011261b4a4
  0x000000011261b037: mov    %r13,%rax
  0x000000011261b03a: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b044: addq   $0x1,0x108(%rdx)
  0x000000011261b04c: mov    %r9,%rdx
  0x000000011261b04f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000011261b052: mov    %r13,0x78(%rsp)
  0x000000011261b057: callq  0x0000000112553020  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011261b05c: mov    0x78(%rsp),%rax
  0x000000011261b061: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261b06b: mov    0x8(%rax),%eax
  0x000000011261b06e: shl    $0x3,%rax
  0x000000011261b072: cmp    0x170(%rdx),%rax
  0x000000011261b079: jne    0x000000011261b088
  0x000000011261b07b: addq   $0x1,0x178(%rdx)
  0x000000011261b083: jmpq   0x000000011261b0ee
  0x000000011261b088: cmp    0x180(%rdx),%rax
  0x000000011261b08f: jne    0x000000011261b09e
  0x000000011261b091: addq   $0x1,0x188(%rdx)
  0x000000011261b099: jmpq   0x000000011261b0ee
  0x000000011261b09e: cmpq   $0x0,0x170(%rdx)
  0x000000011261b0a9: jne    0x000000011261b0c2
  0x000000011261b0ab: mov    %rax,0x170(%rdx)
  0x000000011261b0b2: movq   $0x1,0x178(%rdx)
  0x000000011261b0bd: jmpq   0x000000011261b0ee
  0x000000011261b0c2: cmpq   $0x0,0x180(%rdx)
  0x000000011261b0cd: jne    0x000000011261b0e6
  0x000000011261b0cf: mov    %rax,0x180(%rdx)
  0x000000011261b0d6: movq   $0x1,0x188(%rdx)
  0x000000011261b0e1: jmpq   0x000000011261b0ee
  0x000000011261b0e6: addq   $0x1,0x168(%rdx)
  0x000000011261b0ee: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b0f8: mov    0xdc(%rdx),%esi
  0x000000011261b0fe: add    $0x8,%esi
  0x000000011261b101: mov    %esi,0xdc(%rdx)
  0x000000011261b107: movabs $0x129d84e38,%rdx  ;   {metadata({method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b111: and    $0x7ffff8,%esi
  0x000000011261b117: cmp    $0x0,%esi
  0x000000011261b11a: je     0x000000011261b4bb
  0x000000011261b120: mov    0x78(%rsp),%rax
  0x000000011261b125: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b12f: addq   $0x1,0x108(%rdx)
  0x000000011261b137: movabs $0x76ad8f680,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x000000011261b141: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000011261b146: nop
  0x000000011261b147: callq  0x0000000112553020  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011261b14c: mov    0x78(%rsp),%rax
  0x000000011261b151: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261b15b: mov    0x8(%rax),%eax
  0x000000011261b15e: shl    $0x3,%rax
  0x000000011261b162: cmp    0x1a0(%rdx),%rax
  0x000000011261b169: jne    0x000000011261b178
  0x000000011261b16b: addq   $0x1,0x1a8(%rdx)
  0x000000011261b173: jmpq   0x000000011261b1de
  0x000000011261b178: cmp    0x1b0(%rdx),%rax
  0x000000011261b17f: jne    0x000000011261b18e
  0x000000011261b181: addq   $0x1,0x1b8(%rdx)
  0x000000011261b189: jmpq   0x000000011261b1de
  0x000000011261b18e: cmpq   $0x0,0x1a0(%rdx)
  0x000000011261b199: jne    0x000000011261b1b2
  0x000000011261b19b: mov    %rax,0x1a0(%rdx)
  0x000000011261b1a2: movq   $0x1,0x1a8(%rdx)
  0x000000011261b1ad: jmpq   0x000000011261b1de
  0x000000011261b1b2: cmpq   $0x0,0x1b0(%rdx)
  0x000000011261b1bd: jne    0x000000011261b1d6
  0x000000011261b1bf: mov    %rax,0x1b0(%rdx)
  0x000000011261b1c6: movq   $0x1,0x1b8(%rdx)
  0x000000011261b1d1: jmpq   0x000000011261b1de
  0x000000011261b1d6: addq   $0x1,0x198(%rdx)
  0x000000011261b1de: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b1e8: mov    0xdc(%rdx),%esi
  0x000000011261b1ee: add    $0x8,%esi
  0x000000011261b1f1: mov    %esi,0xdc(%rdx)
  0x000000011261b1f7: movabs $0x129d852f8,%rdx  ;   {metadata({method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b201: and    $0x7ffff8,%esi
  0x000000011261b207: cmp    $0x0,%esi
  0x000000011261b20a: je     0x000000011261b4d2
  0x000000011261b210: mov    0x78(%rsp),%rax
  0x000000011261b215: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b21f: addq   $0x1,0x108(%rdx)
  0x000000011261b227: mov    0x80(%rsp),%edx
  0x000000011261b22e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000011261b233: nop
  0x000000011261b234: nop
  0x000000011261b235: nop
  0x000000011261b236: nop
  0x000000011261b237: callq  0x0000000112553020  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011261b23c: mov    0x78(%rsp),%rax
  0x000000011261b241: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261b24b: mov    0x8(%rax),%eax
  0x000000011261b24e: shl    $0x3,%rax
  0x000000011261b252: cmp    0x1d0(%rdx),%rax
  0x000000011261b259: jne    0x000000011261b268
  0x000000011261b25b: addq   $0x1,0x1d8(%rdx)
  0x000000011261b263: jmpq   0x000000011261b2ce
  0x000000011261b268: cmp    0x1e0(%rdx),%rax
  0x000000011261b26f: jne    0x000000011261b27e
  0x000000011261b271: addq   $0x1,0x1e8(%rdx)
  0x000000011261b279: jmpq   0x000000011261b2ce
  0x000000011261b27e: cmpq   $0x0,0x1d0(%rdx)
  0x000000011261b289: jne    0x000000011261b2a2
  0x000000011261b28b: mov    %rax,0x1d0(%rdx)
  0x000000011261b292: movq   $0x1,0x1d8(%rdx)
  0x000000011261b29d: jmpq   0x000000011261b2ce
  0x000000011261b2a2: cmpq   $0x0,0x1e0(%rdx)
  0x000000011261b2ad: jne    0x000000011261b2c6
  0x000000011261b2af: mov    %rax,0x1e0(%rdx)
  0x000000011261b2b6: movq   $0x1,0x1e8(%rdx)
  0x000000011261b2c1: jmpq   0x000000011261b2ce
  0x000000011261b2c6: addq   $0x1,0x1c8(%rdx)
  0x000000011261b2ce: movabs $0x129f07ec0,%rdx  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b2d8: mov    0xdc(%rdx),%esi
  0x000000011261b2de: add    $0x8,%esi
  0x000000011261b2e1: mov    %esi,0xdc(%rdx)
  0x000000011261b2e7: movabs $0x129d861e8,%rdx  ;   {metadata({method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b2f1: and    $0x7ffff8,%esi
  0x000000011261b2f7: cmp    $0x0,%esi
  0x000000011261b2fa: je     0x000000011261b4e9
  0x000000011261b300: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011261b30a: mov    0x60(%r15),%rax
  0x000000011261b30e: lea    0x18(%rax),%rdi
  0x000000011261b312: cmp    0x70(%r15),%rdi
  0x000000011261b316: ja     0x000000011261b500
  0x000000011261b31c: mov    %rdi,0x60(%r15)
  0x000000011261b320: mov    0xa8(%rdx),%rcx
  0x000000011261b327: mov    %rcx,(%rax)
  0x000000011261b32a: mov    %rdx,%rcx
  0x000000011261b32d: shr    $0x3,%rcx
  0x000000011261b331: mov    %ecx,0x8(%rax)
  0x000000011261b334: xor    %rcx,%rcx
  0x000000011261b337: mov    %ecx,0xc(%rax)
  0x000000011261b33a: xor    %rcx,%rcx
  0x000000011261b33d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011261b341: mov    0x78(%rsp),%rdx
  0x000000011261b346: mov    0x10(%rdx),%ecx
  0x000000011261b349: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011261b34d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011261b351: mov    %rax,%rdx
  0x000000011261b354: movabs $0x129f07ec0,%rsi  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261b35e: addq   $0x1,0x108(%rsi)
  0x000000011261b366: mov    %rcx,%rdx
  0x000000011261b369: mov    $0x0,%ecx
  0x000000011261b36e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011261b371: mov    %rax,0x90(%rsp)
  0x000000011261b379: nop
  0x000000011261b37a: nop
  0x000000011261b37b: nop
  0x000000011261b37c: nop
  0x000000011261b37d: nop
  0x000000011261b37e: nop
  0x000000011261b37f: callq  0x0000000112553020  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011261b384: mov    0x88(%rsp),%rax
  0x000000011261b38c: movabs $0x129eff160,%rdx  ;   {metadata(method data for {method} {0x0000000129e22738} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011261b396: addq   $0x1,0x1f8(%rdx)
  0x000000011261b39e: mov    0x90(%rsp),%rdx
  0x000000011261b3a6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000011261b3ae: nop
  0x000000011261b3af: callq  0x0000000112553020  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011261b3b4: mov    0x88(%rsp),%rax
  0x000000011261b3bc: jmpq   0x000000011261b538
  0x000000011261b3c1: mov    %rbx,0x8(%rsp)
  0x000000011261b3c6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b3ce: callq  0x000000011260aea0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000011261b3d3: jmpq   0x000000011261ab67
  0x000000011261b3d8: callq  0x0000000112609820  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000011261b3dd: jmpq   0x000000011261ac21
  0x000000011261b3e2: callq  0x00000001126072c0  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000011261b3e7: mov    %rdx,0x8(%rsp)
  0x000000011261b3ec: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b3f4: callq  0x000000011260aea0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000011261b3f9: jmpq   0x000000011261ac6c
  0x000000011261b3fe: nop
  0x000000011261b3ff: callq  0x0000000112553420  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000011261b404: jmpq   0x000000011261ad50
  0x000000011261b409: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261b413: mov    $0xa050f00,%eax
  0x000000011261b418: callq  0x00000001126082e0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b41d: jmpq   0x000000011261ad70
  0x000000011261b422: mov    %rdx,%rdx
  0x000000011261b425: callq  0x0000000112607a20  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b42a: jmpq   0x000000011261adb5
  0x000000011261b42f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261b439: mov    $0xa050f00,%eax
  0x000000011261b43e: callq  0x00000001126082e0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b443: jmpq   0x000000011261adb8
  0x000000011261b448: mov    %rdx,%rdx
  0x000000011261b44b: callq  0x0000000112607a20  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b450: jmpq   0x000000011261ae01
  0x000000011261b455: mov    %rbx,0x8(%rsp)
  0x000000011261b45a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b462: callq  0x000000011260aea0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b467: jmpq   0x000000011261ae48
  0x000000011261b46c: mov    %rbx,0x8(%rsp)
  0x000000011261b471: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b479: callq  0x000000011260aea0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b47e: jmpq   0x000000011261ae8f
  0x000000011261b483: mov    %rbx,0x8(%rsp)
  0x000000011261b488: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b490: callq  0x000000011260aea0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b495: jmpq   0x000000011261aed6
  0x000000011261b49a: callq  0x0000000112609820  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b49f: jmpq   0x000000011261af55
  0x000000011261b4a4: mov    %rdx,0x8(%rsp)
  0x000000011261b4a9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b4b1: callq  0x000000011260aea0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b4b6: jmpq   0x000000011261b037
  0x000000011261b4bb: mov    %rdx,0x8(%rsp)
  0x000000011261b4c0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b4c8: callq  0x000000011260aea0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b4cd: jmpq   0x000000011261b120
  0x000000011261b4d2: mov    %rdx,0x8(%rsp)
  0x000000011261b4d7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b4df: callq  0x000000011260aea0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b4e4: jmpq   0x000000011261b210
  0x000000011261b4e9: mov    %rdx,0x8(%rsp)
  0x000000011261b4ee: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261b4f6: callq  0x000000011260aea0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b4fb: jmpq   0x000000011261b300
  0x000000011261b500: mov    %rdx,%rdx
  0x000000011261b503: callq  0x0000000112607a20  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011261b508: jmpq   0x000000011261b341
  0x000000011261b50d: nop
  0x000000011261b50e: nop
  0x000000011261b50f: mov    0x2a8(%r15),%rax
  0x000000011261b516: movabs $0x0,%r10
  0x000000011261b520: mov    %r10,0x2a8(%r15)
  0x000000011261b527: movabs $0x0,%r10
  0x000000011261b531: mov    %r10,0x2b0(%r15)
  0x000000011261b538: add    $0xa0,%rsp
  0x000000011261b53f: pop    %rbp
  0x000000011261b540: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011261b545: hlt    
  0x000000011261b546: hlt    
  0x000000011261b547: hlt    
  0x000000011261b548: hlt    
  0x000000011261b549: hlt    
  0x000000011261b54a: hlt    
  0x000000011261b54b: hlt    
  0x000000011261b54c: hlt    
  0x000000011261b54d: hlt    
  0x000000011261b54e: hlt    
  0x000000011261b54f: hlt    
  0x000000011261b550: hlt    
  0x000000011261b551: hlt    
  0x000000011261b552: hlt    
  0x000000011261b553: hlt    
  0x000000011261b554: hlt    
  0x000000011261b555: hlt    
  0x000000011261b556: hlt    
  0x000000011261b557: hlt    
  0x000000011261b558: hlt    
  0x000000011261b559: hlt    
  0x000000011261b55a: hlt    
  0x000000011261b55b: hlt    
  0x000000011261b55c: hlt    
  0x000000011261b55d: hlt    
  0x000000011261b55e: hlt    
  0x000000011261b55f: hlt    
[Stub Code]
  0x000000011261b560: nop                       ;   {no_reloc}
  0x000000011261b561: nop
  0x000000011261b562: nop
  0x000000011261b563: nop
  0x000000011261b564: nop
  0x000000011261b565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b56f: jmpq   0x000000011261b56f  ;   {runtime_call}
  0x000000011261b574: nop
  0x000000011261b575: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b57f: jmpq   0x000000011261b57f  ;   {runtime_call}
  0x000000011261b584: nop
  0x000000011261b585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b58f: jmpq   0x000000011261b58f  ;   {runtime_call}
  0x000000011261b594: nop
  0x000000011261b595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b59f: jmpq   0x000000011261b59f  ;   {runtime_call}
  0x000000011261b5a4: nop
  0x000000011261b5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b5af: jmpq   0x000000011261b5af  ;   {runtime_call}
  0x000000011261b5b4: nop
  0x000000011261b5b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261b5bf: jmpq   0x000000011261b5bf  ;   {runtime_call}
[Exception Handler]
  0x000000011261b5c4: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011261b5c9: mov    %rsp,-0x28(%rsp)
  0x000000011261b5ce: sub    $0x80,%rsp
  0x000000011261b5d5: mov    %rax,0x78(%rsp)
  0x000000011261b5da: mov    %rcx,0x70(%rsp)
  0x000000011261b5df: mov    %rdx,0x68(%rsp)
  0x000000011261b5e4: mov    %rbx,0x60(%rsp)
  0x000000011261b5e9: mov    %rbp,0x50(%rsp)
  0x000000011261b5ee: mov    %rsi,0x48(%rsp)
  0x000000011261b5f3: mov    %rdi,0x40(%rsp)
  0x000000011261b5f8: mov    %r8,0x38(%rsp)
  0x000000011261b5fd: mov    %r9,0x30(%rsp)
  0x000000011261b602: mov    %r10,0x28(%rsp)
  0x000000011261b607: mov    %r11,0x20(%rsp)
  0x000000011261b60c: mov    %r12,0x18(%rsp)
  0x000000011261b611: mov    %r13,0x10(%rsp)
  0x000000011261b616: mov    %r14,0x8(%rsp)
  0x000000011261b61b: mov    %r15,(%rsp)
  0x000000011261b61f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011261b629: movabs $0x11261b5c9,%rsi  ;   {internal_word}
  0x000000011261b633: mov    %rsp,%rdx
  0x000000011261b636: and    $0xfffffffffffffff0,%rsp
  0x000000011261b63a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261b63f: hlt    
[Deopt Handler Code]
  0x000000011261b640: movabs $0x11261b640,%r10  ;   {section_word}
  0x000000011261b64a: push   %r10
  0x000000011261b64c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011261b651: hlt    
  0x000000011261b652: hlt    
  0x000000011261b653: hlt    
  0x000000011261b654: hlt    
  0x000000011261b655: hlt    
  0x000000011261b656: hlt    
  0x000000011261b657: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x000000011261ab20' size='4856' address='0x000000011261a910' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='524' iicount='524' stamp='0.136'/>
<writer thread='7171'/>
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112619650:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000112619800: mov    0x8(%rsi),%r10d
  0x0000000112619804: shl    $0x3,%r10
  0x0000000112619808: cmp    %rax,%r10
  0x000000011261980b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112619811: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011261981c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112619820: mov    %eax,-0x14000(%rsp)
  0x0000000112619827: push   %rbp
  0x0000000112619828: sub    $0x60,%rsp
  0x000000011261982c: mov    %rdx,%rdi
<writer thread='7171'/>
[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>

  0x000000011261982f: movabs $0x129f06030,%rdx  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000112619839: mov    0xdc(%rdx),%ebx
  0x000000011261983f: add    $0x8,%ebx
  0x0000000112619842: mov    %ebx,0xdc(%rdx)
  0x0000000112619848: movabs $0x129d111d8,%rdx  ;   {metadata({method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000112619852: and    $0x1ff8,%ebx
  0x0000000112619858: cmp    $0x0,%ebx
  0x000000011261985b: je     0x0000000112619a86  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 805)

  0x0000000112619861: cmp    $0x0,%edi
  0x0000000112619864: movabs $0x129f06030,%rdx  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261986e: movabs $0x108,%rbx
  0x0000000112619878: jge    0x0000000112619888
  0x000000011261987e: movabs $0x118,%rbx
  0x0000000112619888: mov    (%rdx,%rbx,1),%rax
  0x000000011261988c: lea    0x1(%rax),%rax
  0x0000000112619890: mov    %rax,(%rdx,%rbx,1)
  0x0000000112619894: jl     0x0000000112619a46  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 805)

  0x000000011261989a: mov    0xc(%rsi),%esi
  0x000000011261989d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 808)

  0x00000001126198a1: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 808)
                                                ; implicit exception: dispatches to 0x0000000112619a9d
  0x00000001126198a4: cmp    %edx,%ecx
  0x00000001126198a6: movabs $0x129f06030,%rdx  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001126198b0: movabs $0x138,%rbx
  0x00000001126198ba: jle    0x00000001126198ca
  0x00000001126198c0: movabs $0x148,%rbx
  0x00000001126198ca: mov    (%rdx,%rbx,1),%rax
  0x00000001126198ce: lea    0x1(%rax),%rax
  0x00000001126198d2: mov    %rax,(%rdx,%rbx,1)
  0x00000001126198d6: jg     0x0000000112619a06  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 808)

  0x00000001126198dc: cmp    %ecx,%edi
  0x00000001126198de: movabs $0x129f06030,%rdx  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001126198e8: movabs $0x168,%rbx
  0x00000001126198f2: jle    0x0000000112619902
  0x00000001126198f8: movabs $0x178,%rbx
  0x0000000112619902: mov    (%rdx,%rbx,1),%rax
  0x0000000112619906: lea    0x1(%rax),%rax
  0x000000011261990a: mov    %rax,(%rdx,%rbx,1)
  0x000000011261990e: jg     0x00000001126199bc  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 811)

  0x0000000112619914: movabs $0x129f06030,%rdx  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261991e: addq   $0x1,0x198(%rdx)
  0x0000000112619926: mov    %rcx,%rbx
  0x0000000112619929: sub    %edi,%ebx
  0x000000011261992b: mov    %rdi,%rdx
  0x000000011261992e: mov    %r8,%rcx
  0x0000000112619931: mov    %r9,%r8
  0x0000000112619934: mov    %rbx,%r9
  0x0000000112619937: test   %rcx,%rcx
  0x000000011261993a: je     0x0000000112619aa2
  0x0000000112619940: test   %edx,%edx
  0x0000000112619942: jl     0x0000000112619aa2
  0x0000000112619948: test   %r8d,%r8d
  0x000000011261994b: jl     0x0000000112619aa2
  0x0000000112619951: lea    (%rdx,%r9,1),%rdi
  0x0000000112619955: cmp    0xc(%rsi),%edi
  0x0000000112619958: ja     0x0000000112619aa2
  0x000000011261995e: lea    (%r8,%r9,1),%rdi
  0x0000000112619962: cmp    0xc(%rcx),%edi
  0x0000000112619965: ja     0x0000000112619aa2
  0x000000011261996b: test   %r9d,%r9d
  0x000000011261996e: jl     0x0000000112619aa2
  0x0000000112619974: je     0x00000001126199b0
  0x000000011261997a: movslq %edx,%rdx
  0x000000011261997d: movslq %r8d,%r8
  0x0000000112619980: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000112619985: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011261998a: mov    %r9,%rdx
  0x000000011261998d: test   $0xf,%esp
  0x0000000112619993: je     0x00000001126199ab
  0x0000000112619999: sub    $0x8,%rsp
  0x000000011261999d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000001126199a2: add    $0x8,%rsp
  0x00000001126199a6: jmpq   0x00000001126199b0
  0x00000001126199ab: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 814)
                                                ;   {runtime_call}
  0x00000001126199b0: add    $0x60,%rsp
  0x00000001126199b4: pop    %rbp
  0x00000001126199b5: test   %eax,-0x33c98bb(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126199bb: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 815)

  0x00000001126199bc: nopl   0x0(%rax)
  0x00000001126199c0: jmpq   0x0000000112619ac0  ;   {no_reloc}
  0x00000001126199c5: add    %al,(%rax)
  0x00000001126199c7: add    %al,(%rax)
  0x00000001126199c9: add    %ch,%cl
  0x00000001126199cb: sti    
  0x00000001126199cc: add    %al,(%rax)
  0x00000001126199ce: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 812)

  0x00000001126199d1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000001126199d4: xor    %ah,-0x10(%rax)
  0x00000001126199d7: sub    %eax,(%rcx)
  0x00000001126199d9: add    %al,(%rax)
  0x00000001126199db: add    %cl,-0x7d(%rax)
  0x00000001126199de: xchg   %cl,0x1000001(%rax)
  0x00000001126199e4: sub    %edi,%ecx
  0x00000001126199e6: mov    %rcx,%rdx
  0x00000001126199e9: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 812)

  0x00000001126199ec: mov    %rax,0x38(%rsp)
  0x00000001126199f1: nop
  0x00000001126199f2: nop
  0x00000001126199f3: nop
  0x00000001126199f4: nop
  0x00000001126199f5: nop
  0x00000001126199f6: nop
  0x00000001126199f7: callq  0x0000000112553020  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 812)
                                                ;   {optimized virtual_call}
  0x00000001126199fc: mov    0x38(%rsp),%rax
  0x0000000112619a01: jmpq   0x0000000112619b4e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 812)

  0x0000000112619a06: xchg   %ax,%ax
  0x0000000112619a08: jmpq   0x0000000112619ae6  ;   {no_reloc}
  0x0000000112619a0d: add    %al,(%rax)
  0x0000000112619a0f: add    %al,(%rax)
  0x0000000112619a11: add    %ch,%cl
  0x0000000112619a13: flds   (%rax)
  0x0000000112619a15: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 809)

  0x0000000112619a17: mov    %rax,%rdx
  0x0000000112619a1a: movabs $0x129f06030,%rsi  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000112619a24: addq   $0x1,0x158(%rsi)
  0x0000000112619a2c: mov    %rcx,%rdx
  0x0000000112619a2f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 809)

  0x0000000112619a32: mov    %rax,0x40(%rsp)
  0x0000000112619a37: callq  0x0000000112553020  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 809)
                                                ;   {optimized virtual_call}
  0x0000000112619a3c: mov    0x40(%rsp),%rax
  0x0000000112619a41: jmpq   0x0000000112619b4e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 809)

  0x0000000112619a46: xchg   %ax,%ax
  0x0000000112619a48: jmpq   0x0000000112619b0c  ;   {no_reloc}
  0x0000000112619a4d: add    %al,(%rax)
  0x0000000112619a4f: add    %al,(%rax)
  0x0000000112619a51: add    %ch,%cl
  0x0000000112619a53: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 806)

  0x0000000112619a58: mov    %eax,%edx
  0x0000000112619a5a: movabs $0x129f06030,%rsi  ;   {metadata(method data for {method} {0x0000000129d111d8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000112619a64: addq   $0x1,0x128(%rsi)
  0x0000000112619a6c: mov    %rdi,%rdx
  0x0000000112619a6f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 806)

  0x0000000112619a72: mov    %rax,0x48(%rsp)
  0x0000000112619a77: callq  0x0000000112553020  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 806)
                                                ;   {optimized virtual_call}
  0x0000000112619a7c: mov    0x48(%rsp),%rax
  0x0000000112619a81: jmpq   0x0000000112619b4e
  0x0000000112619a86: mov    %rdx,0x8(%rsp)
  0x0000000112619a8b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112619a93: callq  0x000000011260aea0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 805)
                                                ;   {runtime_call}
  0x0000000112619a98: jmpq   0x0000000112619861
  0x0000000112619a9d: callq  0x00000001126072c0  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 808)
                                                ;   {runtime_call}
  0x0000000112619aa2: nop
  0x0000000112619aa3: nop
  0x0000000112619aa4: nop
  0x0000000112619aa5: nop
  0x0000000112619aa6: nop
  0x0000000112619aa7: callq  0x0000000112553420  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 814)
                                                ;   {static_call}
  0x0000000112619aac: jmpq   0x00000001126199b0
  0x0000000112619ab1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112619abb: mov    $0xa050f00,%eax
  0x0000000112619ac0: callq  0x00000001126082e0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 812)
                                                ;   {runtime_call}
  0x0000000112619ac5: jmpq   0x00000001126199c0
  0x0000000112619aca: mov    %rdx,%rdx
  0x0000000112619acd: callq  0x0000000112607760  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 812)
                                                ;   {runtime_call}
  0x0000000112619ad2: jmpq   0x00000001126199cf
  0x0000000112619ad7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112619ae1: mov    $0xa050f00,%eax
  0x0000000112619ae6: callq  0x00000001126082e0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 809)
                                                ;   {runtime_call}
  0x0000000112619aeb: jmpq   0x0000000112619a08
  0x0000000112619af0: mov    %rdx,%rdx
  0x0000000112619af3: callq  0x0000000112607760  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 809)
                                                ;   {runtime_call}
  0x0000000112619af8: jmpq   0x0000000112619a17
  0x0000000112619afd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112619b07: mov    $0xa050f00,%eax
  0x0000000112619b0c: callq  0x00000001126082e0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 806)
                                                ;   {runtime_call}
  0x0000000112619b11: jmpq   0x0000000112619a48
  0x0000000112619b16: mov    %rdx,%rdx
  0x0000000112619b19: callq  0x0000000112607760  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 806)
                                                ;   {runtime_call}
  0x0000000112619b1e: jmpq   0x0000000112619a57
  0x0000000112619b23: nop
  0x0000000112619b24: nop
  0x0000000112619b25: mov    0x2a8(%r15),%rax
  0x0000000112619b2c: movabs $0x0,%r10
  0x0000000112619b36: mov    %r10,0x2a8(%r15)
  0x0000000112619b3d: movabs $0x0,%r10
  0x0000000112619b47: mov    %r10,0x2b0(%r15)
  0x0000000112619b4e: add    $0x60,%rsp
  0x0000000112619b52: pop    %rbp
  0x0000000112619b53: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112619b58: hlt    
  0x0000000112619b59: hlt    
  0x0000000112619b5a: hlt    
  0x0000000112619b5b: hlt    
  0x0000000112619b5c: hlt    
  0x0000000112619b5d: hlt    
  0x0000000112619b5e: hlt    
  0x0000000112619b5f: hlt    
[Stub Code]
  0x0000000112619b60: nop                       ;   {no_reloc}
  0x0000000112619b61: nop
  0x0000000112619b62: nop
  0x0000000112619b63: nop
  0x0000000112619b64: nop
  0x0000000112619b65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112619b6f: jmpq   0x0000000112619b6f  ;   {runtime_call}
  0x0000000112619b74: nop
  0x0000000112619b75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112619b7f: jmpq   0x0000000112619b7f  ;   {runtime_call}
  0x0000000112619b84: nop
  0x0000000112619b85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112619b8f: jmpq   0x0000000112619b8f  ;   {runtime_call}
  0x0000000112619b94: nop
  0x0000000112619b95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112619b9f: jmpq   0x0000000112619b9f  ;   {runtime_call}
[Exception Handler]
  0x0000000112619ba4: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112619ba9: mov    %rsp,-0x28(%rsp)
  0x0000000112619bae: sub    $0x80,%rsp
  0x0000000112619bb5: mov    %rax,0x78(%rsp)
  0x0000000112619bba: mov    %rcx,0x70(%rsp)
  0x0000000112619bbf: mov    %rdx,0x68(%rsp)
  0x0000000112619bc4: mov    %rbx,0x60(%rsp)
  0x0000000112619bc9: mov    %rbp,0x50(%rsp)
  0x0000000112619bce: mov    %rsi,0x48(%rsp)
  0x0000000112619bd3: mov    %rdi,0x40(%rsp)
  0x0000000112619bd8: mov    %r8,0x38(%rsp)
  0x0000000112619bdd: mov    %r9,0x30(%rsp)
  0x0000000112619be2: mov    %r10,0x28(%rsp)
  0x0000000112619be7: mov    %r11,0x20(%rsp)
  0x0000000112619bec: mov    %r12,0x18(%rsp)
  0x0000000112619bf1: mov    %r13,0x10(%rsp)
  0x0000000112619bf6: mov    %r14,0x8(%rsp)
  0x0000000112619bfb: mov    %r15,(%rsp)
  0x0000000112619bff: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112619c09: movabs $0x112619ba9,%rsi  ;   {internal_word}
  0x0000000112619c13: mov    %rsp,%rdx
  0x0000000112619c16: and    $0xfffffffffffffff0,%rsp
  0x0000000112619c1a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112619c1f: hlt    
[Deopt Handler Code]
  0x0000000112619c20: movabs $0x112619c20,%r10  ;   {section_word}
  0x0000000112619c2a: push   %r10
  0x0000000112619c2c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112619c31: hlt    
  0x0000000112619c32: hlt    
  0x0000000112619c33: hlt    
  0x0000000112619c34: hlt    
  0x0000000112619c35: hlt    
  0x0000000112619c36: hlt    
  0x0000000112619c37: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000112619800' size='2256' address='0x0000000112619650' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='308' iicount='308' stamp='0.139'/>
<writer thread='7171'/>
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x000000011261bc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d10188} &apos;&lt;init
<writer thread='7171'/>
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000011261be00: mov    0x8(%rsi),%r10d
  0x000000011261be04: shl    $0x3,%r10
  0x000000011261be08: cmp    %rax,%r10
  0x000000011261be0b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011261be11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011261be1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011261be20: mov    %eax,-0x14000(%rsp)
  0x000000011261be27: push   %rbp
  0x000000011261be28: sub    $0x60,%rsp
  0x000000011261be2c: movabs $0x129f072e0,%rdi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261be36: mov    0xdc(%rdi),%ebx
  0x000000011261be3c: add    $0x8,%ebx
  0x000000011261be3f: mov    %ebx,0xdc(%rdi)
  0x000000011261be45: movabs $0x129d10188,%rdi  ;   {metadata({method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261be4f: and    $0x1ff8,%ebx
  0x000000011261be55: cmp    $0x0,%ebx
  0x000000011261be58: je     0x000000011261c07e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000011261be5e: mov    %rsi,%rdi
  0x000000011261be61: movabs $0x129f072e0,%rbx  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261be6b: addq   $0x1,0x108(%rbx)
  0x000000011261be73: movabs $0x129e7d930,%rdi  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261be7d: mov    0xdc(%rdi),%ebx
  0x000000011261be83: add    $0x8,%ebx
  0x000000011261be86: mov    %ebx,0xdc(%rdi)
  0x000000011261be8c: movabs $0x129d0d488,%rdi  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261be96: and    $0x7ffff8,%ebx
  0x000000011261be9c: cmp    $0x0,%ebx
  0x000000011261be9f: je     0x000000011261c095
  0x000000011261bea5: cmp    $0x0,%ecx
  0x000000011261bea8: movabs $0x129f072e0,%rdi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261beb2: movabs $0x118,%rbx
  0x000000011261bebc: jge    0x000000011261becc
  0x000000011261bec2: movabs $0x128,%rbx
  0x000000011261becc: mov    (%rdi,%rbx,1),%rax
  0x000000011261bed0: lea    0x1(%rax),%rax
  0x000000011261bed4: mov    %rax,(%rdi,%rbx,1)
  0x000000011261bed8: jl     0x000000011261c03e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000000011261bede: cmp    $0x0,%r8d
  0x000000011261bee2: movabs $0x129f072e0,%rdi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261beec: movabs $0x148,%rbx
  0x000000011261bef6: jge    0x000000011261bf06
  0x000000011261befc: movabs $0x158,%rbx
  0x000000011261bf06: mov    (%rdi,%rbx,1),%rax
  0x000000011261bf0a: lea    0x1(%rax),%rax
  0x000000011261bf0e: mov    %rax,(%rdi,%rbx,1)
  0x000000011261bf12: jl     0x000000011261bffe  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000000011261bf18: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@32 (line 198)
                                                ; implicit exception: dispatches to 0x000000011261c0ac
  0x000000011261bf1b: sub    %r8d,%edi
  0x000000011261bf1e: cmp    %edi,%ecx
  0x000000011261bf20: movabs $0x129f072e0,%rdi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261bf2a: movabs $0x178,%rbx
  0x000000011261bf34: jle    0x000000011261bf44
  0x000000011261bf3a: movabs $0x188,%rbx
  0x000000011261bf44: mov    (%rdi,%rbx,1),%rax
  0x000000011261bf48: lea    0x1(%rax),%rax
  0x000000011261bf4c: mov    %rax,(%rdi,%rbx,1)
  0x000000011261bf50: jg     0x000000011261bfb2  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@35 (line 198)

  0x000000011261bf56: mov    %rsi,0x38(%rsp)
  0x000000011261bf5b: movabs $0x129f072e0,%rdi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261bf65: addq   $0x1,0x1a8(%rdi)
  0x000000011261bf6d: add    %ecx,%r8d
  0x000000011261bf70: mov    %rdx,%rsi
  0x000000011261bf73: mov    %rcx,%rdx
  0x000000011261bf76: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@55 (line 201)

  0x000000011261bf79: nop
  0x000000011261bf7a: nop
  0x000000011261bf7b: nop
  0x000000011261bf7c: nop
  0x000000011261bf7d: nop
  0x000000011261bf7e: nop
  0x000000011261bf7f: callq  0x0000000112553420  ; OopMap{[56]=Oop off=388}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@55 (line 201)
                                                ;   {static_call}
  0x000000011261bf84: mov    0x38(%rsp),%rsi
  0x000000011261bf89: mov    %rax,%r10
  0x000000011261bf8c: shr    $0x3,%r10
  0x000000011261bf90: mov    %r10d,0xc(%rsi)
  0x000000011261bf94: shr    $0x9,%rsi
  0x000000011261bf98: movabs $0x10e129000,%rdx
  0x000000011261bfa2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@58 (line 201)

  0x000000011261bfa6: add    $0x60,%rsp
  0x000000011261bfaa: pop    %rbp
  0x000000011261bfab: test   %eax,-0x33cbeb1(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261bfb1: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@61 (line 202)

  0x000000011261bfb2: nopw   0x0(%rax,%rax,1)
  0x000000011261bfb8: jmpq   0x000000011261c0c0  ;   {no_reloc}
  0x000000011261bfbd: add    %al,(%rax)
  0x000000011261bfbf: add    %al,(%rax)
  0x000000011261bfc1: add    %ch,%cl
  0x000000011261bfc3: add    (%rcx),%eax
  0x000000011261bfc5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)

  0x000000011261bfc7: mov    %rax,%rdx
  0x000000011261bfca: movabs $0x129f072e0,%rsi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261bfd4: addq   $0x1,0x198(%rsi)
  0x000000011261bfdc: add    %ecx,%r8d
  0x000000011261bfdf: mov    %r8,%rdx
  0x000000011261bfe2: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@45 (line 199)

  0x000000011261bfe5: mov    %rax,0x40(%rsp)
  0x000000011261bfea: nop
  0x000000011261bfeb: nop
  0x000000011261bfec: nop
  0x000000011261bfed: nop
  0x000000011261bfee: nop
  0x000000011261bfef: callq  0x0000000112553020  ; OopMap{[64]=Oop off=500}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@45 (line 199)
                                                ;   {optimized virtual_call}
  0x000000011261bff4: mov    0x40(%rsp),%rax
  0x000000011261bff9: jmpq   0x000000011261c14e  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@48 (line 199)

  0x000000011261bffe: xchg   %ax,%ax
  0x000000011261c000: jmpq   0x000000011261c0e6  ;   {no_reloc}
  0x000000011261c005: add    %al,(%rax)
  0x000000011261c007: add    %al,(%rax)
  0x000000011261c009: add    %ch,%cl
  0x000000011261c00b: loope  0x000000011261c00d
  0x000000011261c00d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)

  0x000000011261c00f: mov    %rax,%rdx
  0x000000011261c012: movabs $0x129f072e0,%rsi  ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261c01c: addq   $0x1,0x168(%rsi)
  0x000000011261c024: mov    %r8,%rdx
  0x000000011261c027: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@26 (line 195)

  0x000000011261c02a: mov    %rax,0x48(%rsp)
  0x000000011261c02f: callq  0x0000000112553020  ; OopMap{[72]=Oop off=564}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@26 (line 195)
                                                ;   {optimized virtual_call}
  0x000000011261c034: mov    0x48(%rsp),%rax
  0x000000011261c039: jmpq   0x000000011261c14e  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@29 (line 195)

  0x000000011261c03e: xchg   %ax,%ax
  0x000000011261c040: jmpq   0x000000011261c10c  ;   {no_reloc}
  0x000000011261c045: add    %al,(%rax)
  0x000000011261c047: add    %al,(%rax)
  0x000000011261c049: add    %ch,%cl
  0x000000011261c04b: movl   $0x8b480000,(%rax)  ;*new
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000011261c051: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000129d10188} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011261c054: loopne 0x000000011261c0c8
  0x000000011261c056: lock sub %eax,(%rcx)
  0x000000011261c059: add    %al,(%rax)
  0x000000011261c05b: add    %cl,-0x7d(%rax)
  0x000000011261c05e: xchg   %bh,(%rax)
  0x000000011261c060: add    %eax,(%rax)
  0x000000011261c062: add    %al,(%rcx)
  0x000000011261c064: mov    %rcx,%rdx
  0x000000011261c067: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000011261c06a: mov    %rax,0x50(%rsp)
  0x000000011261c06f: callq  0x0000000112553020  ; OopMap{[80]=Oop off=628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011261c074: mov    0x50(%rsp),%rax
  0x000000011261c079: jmpq   0x000000011261c14e
  0x000000011261c07e: mov    %rdi,0x8(%rsp)
  0x000000011261c083: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261c08b: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=656}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000000011261c090: jmpq   0x000000011261be5e
  0x000000011261c095: mov    %rdi,0x8(%rsp)
  0x000000011261c09a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261c0a2: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=679}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x000000011261c0a7: jmpq   0x000000011261bea5
  0x000000011261c0ac: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdx=Oop off=689}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@32 (line 198)
                                                ;   {runtime_call}
  0x000000011261c0b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261c0bb: mov    $0xa050f00,%eax
  0x000000011261c0c0: callq  0x00000001126082e0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)
                                                ;   {runtime_call}
  0x000000011261c0c5: jmpq   0x000000011261bfb8
  0x000000011261c0ca: mov    %rdx,%rdx
  0x000000011261c0cd: callq  0x0000000112607760  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)
                                                ;   {runtime_call}
  0x000000011261c0d2: jmpq   0x000000011261bfc7
  0x000000011261c0d7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261c0e1: mov    $0xa050f00,%eax
  0x000000011261c0e6: callq  0x00000001126082e0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)
                                                ;   {runtime_call}
  0x000000011261c0eb: jmpq   0x000000011261c000
  0x000000011261c0f0: mov    %rdx,%rdx
  0x000000011261c0f3: callq  0x0000000112607760  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)
                                                ;   {runtime_call}
  0x000000011261c0f8: jmpq   0x000000011261c00f
  0x000000011261c0fd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261c107: mov    $0xa050f00,%eax
  0x000000011261c10c: callq  0x00000001126082e0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011261c111: jmpq   0x000000011261c040
  0x000000011261c116: mov    %rdx,%rdx
  0x000000011261c119: callq  0x0000000112607760  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011261c11e: jmpq   0x000000011261c04f
  0x000000011261c123: nop
  0x000000011261c124: nop
  0x000000011261c125: mov    0x2a8(%r15),%rax
  0x000000011261c12c: movabs $0x0,%r10
  0x000000011261c136: mov    %r10,0x2a8(%r15)
  0x000000011261c13d: movabs $0x0,%r10
  0x000000011261c147: mov    %r10,0x2b0(%r15)
  0x000000011261c14e: add    $0x60,%rsp
  0x000000011261c152: pop    %rbp
  0x000000011261c153: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011261c158: hlt    
  0x000000011261c159: hlt    
  0x000000011261c15a: hlt    
  0x000000011261c15b: hlt    
  0x000000011261c15c: hlt    
  0x000000011261c15d: hlt    
  0x000000011261c15e: hlt    
  0x000000011261c15f: hlt    
[Stub Code]
  0x000000011261c160: nop                       ;   {no_reloc}
  0x000000011261c161: nop
  0x000000011261c162: nop
  0x000000011261c163: nop
  0x000000011261c164: nop
  0x000000011261c165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261c16f: jmpq   0x000000011261c16f  ;   {runtime_call}
  0x000000011261c174: nop
  0x000000011261c175: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261c17f: jmpq   0x000000011261c17f  ;   {runtime_call}
  0x000000011261c184: nop
  0x000000011261c185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261c18f: jmpq   0x000000011261c18f  ;   {runtime_call}
  0x000000011261c194: nop
  0x000000011261c195: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261c19f: jmpq   0x000000011261c19f  ;   {runtime_call}
[Exception Handler]
  0x000000011261c1a4: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011261c1a9: mov    %rsp,-0x28(%rsp)
  0x000000011261c1ae: sub    $0x80,%rsp
  0x000000011261c1b5: mov    %rax,0x78(%rsp)
  0x000000011261c1ba: mov    %rcx,0x70(%rsp)
  0x000000011261c1bf: mov    %rdx,0x68(%rsp)
  0x000000011261c1c4: mov    %rbx,0x60(%rsp)
  0x000000011261c1c9: mov    %rbp,0x50(%rsp)
  0x000000011261c1ce: mov    %rsi,0x48(%rsp)
  0x000000011261c1d3: mov    %rdi,0x40(%rsp)
  0x000000011261c1d8: mov    %r8,0x38(%rsp)
  0x000000011261c1dd: mov    %r9,0x30(%rsp)
  0x000000011261c1e2: mov    %r10,0x28(%rsp)
  0x000000011261c1e7: mov    %r11,0x20(%rsp)
  0x000000011261c1ec: mov    %r12,0x18(%rsp)
  0x000000011261c1f1: mov    %r13,0x10(%rsp)
  0x000000011261c1f6: mov    %r14,0x8(%rsp)
  0x000000011261c1fb: mov    %r15,(%rsp)
  0x000000011261c1ff: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011261c209: movabs $0x11261c1a9,%rsi  ;   {internal_word}
  0x000000011261c213: mov    %rsp,%rdx
  0x000000011261c216: and    $0xfffffffffffffff0,%rsp
  0x000000011261c21a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261c21f: hlt    
[Deopt Handler Code]
  0x000000011261c220: movabs $0x11261c220,%r10  ;   {section_word}
  0x000000011261c22a: push   %r10
  0x000000011261c22c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011261c231: hlt    
  0x000000011261c232: hlt    
  0x000000011261c233: hlt    
  0x000000011261c234: hlt    
  0x000000011261c235: hlt    
  0x000000011261c236: hlt    
  0x000000011261c237: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x000000011261be00' size='2288' address='0x000000011261bc50' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1528' scopes_pcs_offset='1768' dependencies_offset='2264' nul_chk_table_offset='2272' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='514' iicount='514' stamp='0.143'/>
Decoding compiled method 0x0000000112619310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129d26690} &apos;
<writer thread='7171'/>
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112619460: mov    %eax,-0x14000(%rsp)
  0x0000000112619467: push   %rbp
  0x0000000112619468: sub    $0x30,%rsp
  0x000000011261946c: movabs $0x129f14aa8,%rax  ;   {metadata(method data for {method} {0x0000000129d26690} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000112619476: mov    0xdc(%rax),%esi
  0x000000011261947c: add    $0x8,%esi
  0x000000011261947f: mov    %esi,0xdc(%rax)
  0x0000000112619485: movabs $0x129d26690,%rax  ;   {metadata({method} {0x0000000129d26690} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000011261948f: and    $0x1ff8,%esi
  0x0000000112619495: cmp    $0x0,%esi
  0x0000000112619498: je     0x00000001126194bb
  0x000000011261949e: movabs $0x76ab00c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000001126194a8: mov    0x74(%rax),%eax
  0x00000001126194ab: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00000001126194af: add    $0x30,%rsp
  0x00000001126194b3: pop    %rbp
  0x00000001126194b4: test   %eax,-0x33c93ba(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126194ba: retq   
  0x00000001126194bb: mov    %rax,0x8(%rsp)
  0x00000001126194c0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126194c8: callq  0x000000011260aea0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00000001126194cd: jmp    0x000000011261949e
  0x00000001126194cf: nop
  0x00000001126194d0: nop
  0x00000001126194d1: mov    0x2a8(%r15),%rax
  0x00000001126194d8: movabs $0x0,%r10
  0x00000001126194e2: mov    %r10,0x2a8(%r15)
  0x00000001126194e9: movabs $0x0,%r10
  0x00000001126194f3: mov    %r10,0x2b0(%r15)
  0x00000001126194fa: add    $0x30,%rsp
  0x00000001126194fe: pop    %rbp
  0x00000001126194ff: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112619504: hlt    
  0x0000000112619505: hlt    
  0x0000000112619506: hlt    
  0x0000000112619507: hlt    
  0x0000000112619508: hlt    
  0x0000000112619509: hlt    
  0x000000011261950a: hlt    
  0x000000011261950b: hlt    
  0x000000011261950c: hlt    
  0x000000011261950d: hlt    
  0x000000011261950e: hlt    
  0x000000011261950f: hlt    
  0x0000000112619510: hlt    
  0x0000000112619511: hlt    
  0x0000000112619512: hlt    
  0x0000000112619513: hlt    
  0x0000000112619514: hlt    
  0x0000000112619515: hlt    
  0x0000000112619516: hlt    
  0x0000000112619517: hlt    
  0x0000000112619518: hlt    
  0x0000000112619519: hlt    
  0x000000011261951a: hlt    
  0x000000011261951b: hlt    
  0x000000011261951c: hlt    
  0x000000011261951d: hlt    
  0x000000011261951e: hlt    
  0x000000011261951f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112619520: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112619525: mov    %rsp,-0x28(%rsp)
  0x000000011261952a: sub    $0x80,%rsp
  0x0000000112619531: mov    %rax,0x78(%rsp)
  0x0000000112619536: mov    %rcx,0x70(%rsp)
  0x000000011261953b: mov    %rdx,0x68(%rsp)
  0x0000000112619540: mov    %rbx,0x60(%rsp)
  0x0000000112619545: mov    %rbp,0x50(%rsp)
  0x000000011261954a: mov    %rsi,0x48(%rsp)
  0x000000011261954f: mov    %rdi,0x40(%rsp)
  0x0000000112619554: mov    %r8,0x38(%rsp)
  0x0000000112619559: mov    %r9,0x30(%rsp)
  0x000000011261955e: mov    %r10,0x28(%rsp)
  0x0000000112619563: mov    %r11,0x20(%rsp)
  0x0000000112619568: mov    %r12,0x18(%rsp)
  0x000000011261956d: mov    %r13,0x10(%rsp)
  0x0000000112619572: mov    %r14,0x8(%rsp)
  0x0000000112619577: mov    %r15,(%rsp)
  0x000000011261957b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112619585: movabs $0x112619525,%rsi  ;   {internal_word}
  0x000000011261958f: mov    %rsp,%rdx
  0x0000000112619592: and    $0xfffffffffffffff0,%rsp
  0x0000000112619596: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261959b: hlt    
[Deopt Handler Code]
  0x000000011261959c: movabs $0x11261959c,%r10  ;   {section_word}
  0x00000001126195a6: push   %r10
  0x00000001126195a8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126195ad: hlt    
  0x00000001126195ae: hlt    
  0x00000001126195af: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000112619460' size='768' address='0x0000000112619310' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='269' iicount='269' stamp='0.144'/>
<writer thread='7171'/>
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Date from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.CalendarSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.AbstractCalendar from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.BaseCalendar from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.Gregorian from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TimeZone from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.ZoneInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.ZoneInfoFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.ZoneInfoFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInput from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='16' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='256' iicount='256' level='3' stamp='0.147' comment='tiered' hot_count='256'/>
<task_queued compile_id='17' method='java/io/BufferedInputStream read ()I' bytes='49' count='256' iicount='256' level='3' stamp='0.147' comment='tiered' hot_count='256'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011261d790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011261d900: mov    0x8(%rsi),%r10d
  0x000000011261d904: shl    $0x3,%r10
  0x000000011261d908: cmp    %rax,%r10
  0x000000011261d90b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011261d911: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011261d91c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011261d920: mov    %eax,-0x14000(%rsp)
  0x000000011261d927: push   %rbp
  0x000000011261d928: sub    $0x30,%rsp
  0x000000011261d92c: movabs $0x129f3c340,%rax  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261d936: mov    0xdc(%rax),%edx
  0x000000011261d93c: add    $0x8,%edx
  0x000000011261d93f: mov    %edx,0xdc(%rax)
  0x000000011261d945: movabs $0x129e46ef8,%rax  ;   {metadata({method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261d94f: and    $0x1ff8,%edx
  0x000000011261d955: cmp    $0x0,%edx
  0x000000011261d958: je     0x000000011261d9f6  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x000000011261d95e: mov    0x20(%rsi),%eax
  0x000000011261d961: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000011261d965: cmp    $0x0,%rax
  0x000000011261d969: movabs $0x129f3c340,%rdx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261d973: movabs $0x108,%rsi
  0x000000011261d97d: jne    0x000000011261d98d
  0x000000011261d983: movabs $0x118,%rsi
  0x000000011261d98d: mov    (%rdx,%rsi,1),%rdi
  0x000000011261d991: lea    0x1(%rdi),%rdi
  0x000000011261d995: mov    %rdi,(%rdx,%rsi,1)
  0x000000011261d999: je     0x000000011261d9ab  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000011261d99f: add    $0x30,%rsp
  0x000000011261d9a3: pop    %rbp
  0x000000011261d9a4: test   %eax,-0x33cd8aa(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261d9aa: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x000000011261d9ab: nopl   0x0(%rax,%rax,1)
  0x000000011261d9b0: jmpq   0x000000011261da1c  ;   {no_reloc}
  0x000000011261d9b5: add    %al,(%rax)
  0x000000011261d9b7: add    %al,(%rax)
  0x000000011261d9b9: add    %ch,%cl
  0x000000011261d9bb: add    %al,(%eax)
  0x000000011261d9be: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x000000011261d9c1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261d9c4: rex retq 
  0x000000011261d9c6: repz sub %eax,(%rcx)
  0x000000011261d9c9: add    %al,(%rax)
  0x000000011261d9cb: add    %cl,-0x7d(%rax)
  0x000000011261d9ce: xchg   %ch,(%rax)
  0x000000011261d9d0: add    %eax,(%rax)
  0x000000011261d9d2: add    %al,(%rcx)
  0x000000011261d9d4: movabs $0x76ad8f6b0,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011261d9de: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x000000011261d9e1: mov    %rax,0x20(%rsp)
  0x000000011261d9e6: nop
  0x000000011261d9e7: callq  0x0000000112553020  ; OopMap{[32]=Oop off=236}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x000000011261d9ec: mov    0x20(%rsp),%rax
  0x000000011261d9f1: jmpq   0x000000011261da5b
  0x000000011261d9f6: mov    %rax,0x8(%rsp)
  0x000000011261d9fb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261da03: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=264}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x000000011261da08: jmpq   0x000000011261d95e
  0x000000011261da0d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261da17: mov    $0xa050f00,%eax
  0x000000011261da1c: callq  0x00000001126082e0  ; OopMap{off=289}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000011261da21: jmp    0x000000011261d9b0
  0x000000011261da23: nop
  0x000000011261da24: nop
  0x000000011261da25: nop
  0x000000011261da26: mov    %rdx,%rdx
  0x000000011261da29: callq  0x0000000112607760  ; OopMap{off=302}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000011261da2e: jmp    0x000000011261d9bf
  0x000000011261da30: nop
  0x000000011261da31: nop
  0x000000011261da32: mov    0x2a8(%r15),%rax
  0x000000011261da39: movabs $0x0,%r10
  0x000000011261da43: mov    %r10,0x2a8(%r15)
  0x000000011261da4a: movabs $0x0,%r10
  0x000000011261da54: mov    %r10,0x2b0(%r15)
  0x000000011261da5b: add    $0x30,%rsp
  0x000000011261da5f: pop    %rbp
  0x000000011261da60: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011261da65: hlt    
  0x000000011261da66: hlt    
  0x000000011261da67: hlt    
  0x000000011261da68: hlt    
  0x000000011261da69: hlt    
  0x000000011261da6a: hlt    
  0x000000011261da6b: hlt    
  0x000000011261da6c: hlt    
  0x000000011261da6d: hlt    
  0x000000011261da6e: hlt    
  0x000000011261da6f: hlt    
  0x000000011261da70: hlt    
  0x000000011261da71: hlt    
  0x000000011261da72: hlt    
  0x000000011261da73: hlt    
  0x000000011261da74: hlt    
  0x000000011261da75: hlt    
  0x000000011261da76: hlt    
  0x000000011261da77: hlt    
  0x000000011261da78: hlt    
  0x000000011261da79: hlt    
  0x000000011261da7a: hlt    
  0x000000011261da7b: hlt    
  0x000000011261da7c: hlt    
  0x000000011261da7d: hlt    
  0x000000011261da7e: hlt    
  0x000000011261da7f: hlt    
[Stub Code]
  0x000000011261da80: nop                       ;   {no_reloc}
  0x000000011261da81: nop
  0x000000011261da82: nop
  0x000000011261da83: nop
  0x000000011261da84: nop
  0x000000011261da85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261da8f: jmpq   0x000000011261da8f  ;   {runtime_call}
[Exception Handler]
  0x000000011261da94: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011261da99: mov    %rsp,-0x28(%rsp)
  0x000000011261da9e: sub    $0x80,%rsp
  0x000000011261daa5: mov    %rax,0x78(%rsp)
  0x000000011261daaa: mov    %rcx,0x70(%rsp)
  0x000000011261daaf: mov    %rdx,0x68(%rsp)
  0x000000011261dab4: mov    %rbx,0x60(%rsp)
  0x000000011261dab9: mov    %rbp,0x50(%rsp)
  0x000000011261dabe: mov    %rsi,0x48(%rsp)
  0x000000011261dac3: mov    %rdi,0x40(%rsp)
  0x000000011261dac8: mov    %r8,0x38(%rsp)
  0x000000011261dacd: mov    %r9,0x30(%rsp)
  0x000000011261dad2: mov    %r10,0x28(%rsp)
  0x000000011261dad7: mov    %r11,0x20(%rsp)
  0x000000011261dadc: mov    %r12,0x18(%rsp)
  0x000000011261dae1: mov    %r13,0x10(%rsp)
  0x000000011261dae6: mov    %r14,0x8(%rsp)
  0x000000011261daeb: mov    %r15,(%rsp)
  0x000000011261daef: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011261daf9: movabs $0x11261da99,%rsi  ;   {internal_word}
  0x000000011261db03: mov    %rsp,%rdx
  0x000000011261db06: and    $0xfffffffffffffff0,%rsp
  0x000000011261db0a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261db0f: hlt    
[Deopt Handler Code]
  0x000000011261db10: movabs $0x11261db10,%r10  ;   {section_word}
  0x000000011261db1a: push   %r10
  0x000000011261db1c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011261db21: hlt    
  0x000000011261db22: hlt    
  0x000000011261db23: hlt    
  0x000000011261db24: hlt    
  0x000000011261db25: hlt    
  0x000000011261db26: hlt    
  0x000000011261db27: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x000000011261d900' size='1200' address='0x000000011261d790' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='1000' dependencies_offset='1192' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='738' iicount='738' stamp='0.149'/>
<writer thread='7171'/>
<task_queued compile_id='18' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='183' backedge_count='3072' iicount='183' level='3' stamp='0.149' comment='tiered' hot_count='183'/>
<task_queued compile_id='19' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='3' stamp='0.149' comment='tiered' hot_count='256'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011261dc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011261de00: mov    0x8(%rsi),%r10d
  0x000000011261de04: shl    $0x3,%r10
  0x000000011261de08: cmp    %rax,%r10
  0x000000011261de0b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011261de11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011261de1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011261de20: mov    %eax,-0x14000(%rsp)
  0x000000011261de27: push   %rbp
  0x000000011261de28: sub    $0x80,%rsp
  0x000000011261de2f: mov    %rsi,0x50(%rsp)
  0x000000011261de34: lea    0x60(%rsp),%rdi
  0x000000011261de39: mov    %rsi,0x8(%rdi)
  0x000000011261de3d: mov    (%rsi),%rax
  0x000000011261de40: mov    %rax,%rbx
  0x000000011261de43: and    $0x7,%rbx
  0x000000011261de47: cmp    $0x5,%rbx
  0x000000011261de4b: jne    0x000000011261ded2
  0x000000011261de51: mov    0x8(%rsi),%ebx
  0x000000011261de54: shl    $0x3,%rbx
  0x000000011261de58: mov    0xa8(%rbx),%rbx
  0x000000011261de5f: or     %r15,%rbx
  0x000000011261de62: xor    %rax,%rbx
  0x000000011261de65: and    $0xffffffffffffff87,%rbx
  0x000000011261de69: je     0x000000011261defa
  0x000000011261de6f: test   $0x7,%rbx
  0x000000011261de76: jne    0x000000011261debf
  0x000000011261de78: test   $0x300,%rbx
  0x000000011261de7f: jne    0x000000011261de9e
  0x000000011261de81: and    $0x37f,%rax
  0x000000011261de88: mov    %rax,%rbx
  0x000000011261de8b: or     %r15,%rbx
  0x000000011261de8e: lock cmpxchg %rbx,(%rsi)
  0x000000011261de93: jne    0x000000011261e14e
  0x000000011261de99: jmpq   0x000000011261defa
  0x000000011261de9e: mov    0x8(%rsi),%ebx
  0x000000011261dea1: shl    $0x3,%rbx
  0x000000011261dea5: mov    0xa8(%rbx),%rbx
  0x000000011261deac: or     %r15,%rbx
  0x000000011261deaf: lock cmpxchg %rbx,(%rsi)
  0x000000011261deb4: jne    0x000000011261e14e
  0x000000011261deba: jmpq   0x000000011261defa
  0x000000011261debf: mov    0x8(%rsi),%ebx
  0x000000011261dec2: shl    $0x3,%rbx
  0x000000011261dec6: mov    0xa8(%rbx),%rbx
  0x000000011261decd: lock cmpxchg %rbx,(%rsi)
  0x000000011261ded2: mov    (%rsi),%rax
  0x000000011261ded5: or     $0x1,%rax
  0x000000011261ded9: mov    %rax,(%rdi)
  0x000000011261dedc: lock cmpxchg %rdi,(%rsi)
  0x000000011261dee1: je     0x000000011261defa
  0x000000011261dee7: sub    %rsp,%rax
  0x000000011261deea: and    $0xfffffffffffff007,%rax
  0x000000011261def1: mov    %rax,(%rdi)
  0x000000011261def4: jne    0x000000011261e14e
  0x000000011261defa: movabs $0x129f3c490,%rdi  ;   {metadata(method data for {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261df04: mov    0xdc(%rdi),%ebx
  0x000000011261df0a: add    $0x8,%ebx
  0x000000011261df0d: mov    %ebx,0xdc(%rdi)
  0x000000011261df13: movabs $0x129e472a8,%rdi  ;   {metadata({method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261df1d: and    $0x1ff8,%ebx
  0x000000011261df23: cmp    $0x0,%ebx
  0x000000011261df26: je     0x000000011261e161  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x000000011261df2c: mov    0x14(%rsi),%edi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x000000011261df2f: mov    0x10(%rsi),%ebx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x000000011261df32: cmp    %ebx,%edi
  0x000000011261df34: movabs $0x129f3c490,%rdi  ;   {metadata(method data for {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261df3e: movabs $0x108,%rbx
  0x000000011261df48: jl     0x000000011261df58
  0x000000011261df4e: movabs $0x118,%rbx
  0x000000011261df58: mov    (%rdi,%rbx,1),%rax
  0x000000011261df5c: lea    0x1(%rax),%rax
  0x000000011261df60: mov    %rax,(%rdi,%rbx,1)
  0x000000011261df64: jl     0x000000011261dfcf  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x000000011261df6a: mov    %rsi,%rdi
  0x000000011261df6d: movabs $0x129f3c490,%rbx  ;   {metadata(method data for {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261df77: addq   $0x1,0x128(%rbx)
  0x000000011261df7f: mov    %rsi,%rdi
  0x000000011261df82: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x000000011261df85: nop
  0x000000011261df86: nop
  0x000000011261df87: callq  0x0000000112553020  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x000000011261df8c: mov    0x50(%rsp),%rsi
  0x000000011261df91: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x000000011261df94: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x000000011261df97: cmp    %edx,%eax
  0x000000011261df99: movabs $0x129f3c490,%rax  ;   {metadata(method data for {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261dfa3: movabs $0x138,%rdx
  0x000000011261dfad: jl     0x000000011261dfbd
  0x000000011261dfb3: movabs $0x148,%rdx
  0x000000011261dfbd: mov    (%rax,%rdx,1),%rdi
  0x000000011261dfc1: lea    0x1(%rdi),%rdi
  0x000000011261dfc5: mov    %rdi,(%rax,%rdx,1)
  0x000000011261dfc9: jge    0x000000011261e0bc  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x000000011261dfcf: mov    %rsi,%rax
  0x000000011261dfd2: movabs $0x129f3c490,%rdx  ;   {metadata(method data for {method} {0x0000000129e472a8} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261dfdc: addq   $0x1,0x158(%rdx)
  0x000000011261dfe4: movabs $0x129f3c340,%rax  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261dfee: mov    0xdc(%rax),%edx
  0x000000011261dff4: add    $0x8,%edx
  0x000000011261dff7: mov    %edx,0xdc(%rax)
  0x000000011261dffd: movabs $0x129e46ef8,%rax  ;   {metadata({method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261e007: and    $0x7ffff8,%edx
  0x000000011261e00d: cmp    $0x0,%edx
  0x000000011261e010: je     0x000000011261e178
  0x000000011261e016: mov    0x20(%rsi),%eax
  0x000000011261e019: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011261e01d: cmp    $0x0,%rax
  0x000000011261e021: movabs $0x129f3c340,%rdx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261e02b: movabs $0x108,%rdi
  0x000000011261e035: jne    0x000000011261e045
  0x000000011261e03b: movabs $0x118,%rdi
  0x000000011261e045: mov    (%rdx,%rdi,1),%rbx
  0x000000011261e049: lea    0x1(%rbx),%rbx
  0x000000011261e04d: mov    %rbx,(%rdx,%rdi,1)
  0x000000011261e051: je     0x000000011261e101  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011261e057: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x000000011261e05a: mov    %rdx,%rdi
  0x000000011261e05d: inc    %edi
  0x000000011261e05f: mov    %edi,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x000000011261e062: movslq %edx,%rsi
  0x000000011261e065: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011261e18f
  0x000000011261e068: jae    0x000000011261e199
  0x000000011261e06e: movsbl 0x10(%rax,%rsi,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x000000011261e073: lea    0x60(%rsp),%rax
  0x000000011261e078: mov    0x8(%rax),%rdi
  0x000000011261e07c: mov    (%rdi),%rsi
  0x000000011261e07f: and    $0x7,%rsi
  0x000000011261e083: cmp    $0x5,%rsi
  0x000000011261e087: je     0x000000011261e0a4
  0x000000011261e08d: mov    (%rax),%rsi
  0x000000011261e090: test   %rsi,%rsi
  0x000000011261e093: je     0x000000011261e0a4
  0x000000011261e099: lock cmpxchg %rsi,(%rdi)
  0x000000011261e09e: jne    0x000000011261e1a2
  0x000000011261e0a4: and    $0xff,%edx
  0x000000011261e0aa: mov    %rdx,%rax
  0x000000011261e0ad: add    $0x80,%rsp
  0x000000011261e0b4: pop    %rbp
  0x000000011261e0b5: test   %eax,-0x33cdfbb(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261e0bb: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000011261e0bc: lea    0x60(%rsp),%rax
  0x000000011261e0c1: mov    0x8(%rax),%rsi
  0x000000011261e0c5: mov    (%rsi),%rdx
  0x000000011261e0c8: and    $0x7,%rdx
  0x000000011261e0cc: cmp    $0x5,%rdx
  0x000000011261e0d0: je     0x000000011261e0ed
  0x000000011261e0d6: mov    (%rax),%rdx
  0x000000011261e0d9: test   %rdx,%rdx
  0x000000011261e0dc: je     0x000000011261e0ed
  0x000000011261e0e2: lock cmpxchg %rdx,(%rsi)
  0x000000011261e0e7: jne    0x000000011261e1b5
  0x000000011261e0ed: mov    $0xffffffff,%eax
  0x000000011261e0f2: add    $0x80,%rsp
  0x000000011261e0f9: pop    %rbp
  0x000000011261e0fa: test   %eax,-0x33ce000(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261e100: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000011261e101: nopl   0x0(%rax)
  0x000000011261e108: jmpq   0x000000011261e1d7  ;   {no_reloc}
  0x000000011261e10d: add    %al,(%rax)
  0x000000011261e10f: add    %al,(%rax)
  0x000000011261e111: add    %ch,%cl
  0x000000011261e113: lret   $0x0
  0x000000011261e116: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011261e119: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011261e11c: rex retq 
  0x000000011261e11e: repz sub %eax,(%rcx)
  0x000000011261e121: add    %al,(%rax)
  0x000000011261e123: add    %cl,-0x7d(%rax)
  0x000000011261e126: xchg   %ebp,(%rax)
  0x000000011261e128: add    %eax,(%rax)
  0x000000011261e12a: add    %al,(%rcx)
  0x000000011261e12c: movabs $0x76ad8f6b0,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011261e136: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011261e139: mov    %rax,0x58(%rsp)
  0x000000011261e13e: nop
  0x000000011261e13f: callq  0x0000000112553020  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=836}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x000000011261e144: mov    0x58(%rsp),%rax
  0x000000011261e149: jmpq   0x000000011261e219
  0x000000011261e14e: mov    %rsi,0x8(%rsp)
  0x000000011261e153: mov    %rdi,(%rsp)
  0x000000011261e157: callq  0x0000000112609120  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=860}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000011261e15c: jmpq   0x000000011261defa
  0x000000011261e161: mov    %rdi,0x8(%rsp)
  0x000000011261e166: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261e16e: callq  0x000000011260aea0  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=883}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000011261e173: jmpq   0x000000011261df2c
  0x000000011261e178: mov    %rax,0x8(%rsp)
  0x000000011261e17d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011261e185: callq  0x000000011260aea0  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=906}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011261e18a: jmpq   0x000000011261e016
  0x000000011261e18f: callq  0x00000001126072c0  ; OopMap{rax=Oop [104]=Oop off=916}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011261e194: callq  0x00000001126072c0  ; OopMap{rax=Oop [104]=Oop off=921}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011261e199: mov    %rdx,(%rsp)
  0x000000011261e19d: callq  0x0000000112606c00  ; OopMap{rax=Oop [104]=Oop off=930}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011261e1a2: lea    0x60(%rsp),%rax
  0x000000011261e1a7: mov    %rax,(%rsp)
  0x000000011261e1ab: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011261e1b0: jmpq   0x000000011261e0a4
  0x000000011261e1b5: lea    0x60(%rsp),%rax
  0x000000011261e1ba: mov    %rax,(%rsp)
  0x000000011261e1be: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011261e1c3: jmpq   0x000000011261e0ed
  0x000000011261e1c8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011261e1d2: mov    $0xa050f00,%eax
  0x000000011261e1d7: callq  0x00000001126082e0  ; OopMap{[80]=Oop [104]=Oop off=988}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011261e1dc: jmpq   0x000000011261e108
  0x000000011261e1e1: mov    %rdx,%rdx
  0x000000011261e1e4: callq  0x0000000112607760  ; OopMap{[80]=Oop [104]=Oop off=1001}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011261e1e9: jmpq   0x000000011261e117
  0x000000011261e1ee: nop
  0x000000011261e1ef: nop
  0x000000011261e1f0: mov    0x2a8(%r15),%rax
  0x000000011261e1f7: movabs $0x0,%r10
  0x000000011261e201: mov    %r10,0x2a8(%r15)
  0x000000011261e208: movabs $0x0,%r10
  0x000000011261e212: mov    %r10,0x2b0(%r15)
  0x000000011261e219: mov    %rax,%rbx
  0x000000011261e21c: lea    0x60(%rsp),%rax
  0x000000011261e221: mov    0x8(%rax),%rsi
  0x000000011261e225: mov    (%rsi),%rdi
  0x000000011261e228: and    $0x7,%rdi
  0x000000011261e22c: cmp    $0x5,%rdi
  0x000000011261e230: je     0x000000011261e24d
  0x000000011261e236: mov    (%rax),%rdi
  0x000000011261e239: test   %rdi,%rdi
  0x000000011261e23c: je     0x000000011261e24d
  0x000000011261e242: lock cmpxchg %rdi,(%rsi)
  0x000000011261e247: jne    0x000000011261e25d
  0x000000011261e24d: mov    %rbx,%rax
  0x000000011261e250: add    $0x80,%rsp
  0x000000011261e257: pop    %rbp
  0x000000011261e258: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011261e25d: lea    0x60(%rsp),%rax
  0x000000011261e262: mov    %rax,(%rsp)
  0x000000011261e266: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011261e26b: jmp    0x000000011261e24d
  0x000000011261e26d: hlt    
  0x000000011261e26e: hlt    
  0x000000011261e26f: hlt    
  0x000000011261e270: hlt    
  0x000000011261e271: hlt    
  0x000000011261e272: hlt    
  0x000000011261e273: hlt    
  0x000000011261e274: hlt    
  0x000000011261e275: hlt    
  0x000000011261e276: hlt    
  0x000000011261e277: hlt    
  0x000000011261e278: hlt    
  0x000000011261e279: hlt    
  0x000000011261e27a: hlt    
  0x000000011261e27b: hlt    
  0x000000011261e27c: hlt    
  0x000000011261e27d: hlt    
  0x000000011261e27e: hlt    
  0x000000011261e27f: hlt    
[Stub Code]
  0x000000011261e280: nop                       ;   {no_reloc}
  0x000000011261e281: nop
  0x000000011261e282: nop
  0x000000011261e283: nop
  0x000000011261e284: nop
  0x000000011261e285: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261e28f: jmpq   0x000000011261e28f  ;   {runtime_call}
  0x000000011261e294: nop
  0x000000011261e295: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011261e29f: jmpq   0x000000011261e29f  ;   {runtime_call}
[Exception Handler]
  0x000000011261e2a4: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011261e2a9: mov    %rsp,-0x28(%rsp)
  0x000000011261e2ae: sub    $0x80,%rsp
  0x000000011261e2b5: mov    %rax,0x78(%rsp)
  0x000000011261e2ba: mov    %rcx,0x70(%rsp)
  0x000000011261e2bf: mov    %rdx,0x68(%rsp)
  0x000000011261e2c4: mov    %rbx,0x60(%rsp)
  0x000000011261e2c9: mov    %rbp,0x50(%rsp)
  0x000000011261e2ce: mov    %rsi,0x48(%rsp)
  0x000000011261e2d3: mov    %rdi,0x40(%rsp)
  0x000000011261e2d8: mov    %r8,0x38(%rsp)
  0x000000011261e2dd: mov    %r9,0x30(%rsp)
  0x000000011261e2e2: mov    %r10,0x28(%rsp)
  0x000000011261e2e7: mov    %r11,0x20(%rsp)
  0x000000011261e2ec: mov    %r12,0x18(%rsp)
  0x000000011261e2f1: mov    %r13,0x10(%rsp)
  0x000000011261e2f6: mov    %r14,0x8(%rsp)
  0x000000011261e2fb: mov    %r15,(%rsp)
  0x000000011261e2ff: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011261e309: movabs $0x11261e2a9,%rsi  ;   {internal_word}
  0x000000011261e313: mov    %rsp,%rdx
  0x000000011261e316: and    $0xfffffffffffffff0,%rsp
  0x000000011261e31a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011261e31f: hlt    
[Deopt Handler Code]
  0x000000011261e320: movabs $0x11261e320,%r10  ;   {section_word}
  0x000000011261e32a: push   %r10
  0x000000011261e32c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011261e331: hlt    
  0x000000011261e332: hlt    
  0x000000011261e333: hlt    
  0x000000011261e334: hlt    
  0x000000011261e335: hlt    
  0x000000011261e336: hlt    
  0x000000011261e337: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x000000011261de00' size='2480' address='0x000000011261dc50' relocation_offset='296' insts_offset='432' stub_offset='1584' scopes_data_offset='1792' scopes_pcs_offset='1984' dependencies_offset='2448' nul_chk_table_offset='2456' method='java/io/BufferedInputStream read ()I' bytes='49' count='771' iicount='771' stamp='0.153'/>
<writer thread='7171'/>
<task_queued compile_id='20' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='384' iicount='384' level='3' stamp='0.153' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='384' backedge_count='383' iicount='384' level='3' stamp='0.153' comment='tiered' hot_count='384'/>
<task_queued compile_id='22' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='384' iicount='384' level='3' stamp='0.153' comment='tiered' hot_count='384'/>
<task_queued compile_id='23' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='384' iicount='384' level='3' stamp='0.153' comment='tiered' hot_count='384'/>
<task_queued compile_id='24' method='java/io/DataInputStream readShort ()S' bytes='40' count='512' iicount='512' level='3' stamp='0.154' comment='tiered' hot_count='512'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011261e610:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rsi:rsi   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x000000011261ea00: mov    %eax,-0x14000(%rsp)
  0x000000011261ea07: push   %rbp
  0x000000011261ea08: sub    $0x100,%rsp
  0x000000011261ea0f: movabs $0x129f3c998,%rdi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ea19: mov    0xdc(%rdi),%ebx
  0x000000011261ea1f: add    $0x8,%ebx
  0x000000011261ea22: mov    %ebx,0xdc(%rdi)
  0x000000011261ea28: movabs $0x129f3bd08,%rdi  ;   {metadata({method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ea32: and    $0x1ff8,%ebx
  0x000000011261ea38: cmp    $0x0,%ebx
  0x000000011261ea3b: je     0x0000000112620591  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x000000011261ea41: cmp    $0x0,%rsi
  0x000000011261ea45: je     0x000000011261ea6b
  0x000000011261ea4b: movabs $0x7c0043480,%rdx  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011261ea55: mov    0x8(%rsi),%eax
  0x000000011261ea58: shl    $0x3,%rax
  0x000000011261ea5c: cmp    0x40(%rax),%rdx
  0x000000011261ea60: jne    0x00000001126205a8
  0x000000011261ea66: jmpq   0x000000011261ea6b
  0x000000011261ea6b: mov    %rsi,%rdi
  0x000000011261ea6e: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000001126205ad
  0x000000011261ea71: mov    %rsi,%rdi
  0x000000011261ea74: movabs $0x129f3c998,%rbx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ea7e: addq   $0x1,0x118(%rbx)
  0x000000011261ea86: mov    %rsi,%rdi
  0x000000011261ea89: mov    %rdi,%rsi          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x000000011261ea8c: mov    %rdi,0x68(%rsp)
  0x000000011261ea91: nop
  0x000000011261ea92: nop
  0x000000011261ea93: nop
  0x000000011261ea94: nop
  0x000000011261ea95: nop
  0x000000011261ea96: nop
  0x000000011261ea97: callq  0x0000000112553020  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x000000011261ea9c: mov    0x68(%rsp),%r9
  0x000000011261eaa1: cmp    $0x0,%r9
  0x000000011261eaa5: jne    0x000000011261eac0
  0x000000011261eaa7: movabs $0x129f3c998,%rsi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261eab1: orl    $0x100,0x130(%rsi)
  0x000000011261eabb: jmpq   0x000000011261eb82
  0x000000011261eac0: movabs $0x7c0043480,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011261eaca: mov    0x8(%r9),%edx
  0x000000011261eace: shl    $0x3,%rdx
  0x000000011261ead2: cmp    %rdx,%rdi
  0x000000011261ead5: jne    0x000000011261eb66
  0x000000011261eadb: movabs $0x129f3c998,%rsi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261eae5: mov    0x8(%r9),%edi
  0x000000011261eae9: shl    $0x3,%rdi
  0x000000011261eaed: cmp    0x140(%rsi),%rdi
  0x000000011261eaf4: jne    0x000000011261eb03
  0x000000011261eaf6: addq   $0x1,0x148(%rsi)
  0x000000011261eafe: jmpq   0x000000011261eb87
  0x000000011261eb03: cmp    0x150(%rsi),%rdi
  0x000000011261eb0a: jne    0x000000011261eb19
  0x000000011261eb0c: addq   $0x1,0x158(%rsi)
  0x000000011261eb14: jmpq   0x000000011261eb87
  0x000000011261eb19: cmpq   $0x0,0x140(%rsi)
  0x000000011261eb24: jne    0x000000011261eb3d
  0x000000011261eb26: mov    %rdi,0x140(%rsi)
  0x000000011261eb2d: movq   $0x1,0x148(%rsi)
  0x000000011261eb38: jmpq   0x000000011261eb87
  0x000000011261eb3d: cmpq   $0x0,0x150(%rsi)
  0x000000011261eb48: jne    0x000000011261eb61
  0x000000011261eb4a: mov    %rdi,0x150(%rsi)
  0x000000011261eb51: movq   $0x1,0x158(%rsi)
  0x000000011261eb5c: jmpq   0x000000011261eb87
  0x000000011261eb61: jmpq   0x000000011261eb87
  0x000000011261eb66: movabs $0x129f3c998,%rsi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261eb70: subq   $0x1,0x138(%rsi)
  0x000000011261eb78: jmpq   0x000000011261eb82
  0x000000011261eb7d: jmpq   0x000000011261eb87
  0x000000011261eb82: xor    %rbx,%rbx
  0x000000011261eb85: jmp    0x000000011261eb91
  0x000000011261eb87: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x000000011261eb91: cmp    $0x0,%ebx
  0x000000011261eb94: movabs $0x129f3c998,%rbx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261eb9e: movabs $0x168,%rdx
  0x000000011261eba8: je     0x000000011261ebb8
  0x000000011261ebae: movabs $0x178,%rdx
  0x000000011261ebb8: mov    (%rbx,%rdx,1),%rsi
  0x000000011261ebbc: lea    0x1(%rsi),%rsi
  0x000000011261ebc0: mov    %rsi,(%rbx,%rdx,1)
  0x000000011261ebc4: je     0x000000011261ee53  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x000000011261ebca: cmp    $0x0,%r9
  0x000000011261ebce: jne    0x000000011261ebe9
  0x000000011261ebd0: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ebda: orl    $0x100,0x180(%rdx)
  0x000000011261ebe4: jmpq   0x000000011261ecab
  0x000000011261ebe9: movabs $0x7c0043480,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011261ebf3: mov    0x8(%r9),%ebx
  0x000000011261ebf7: shl    $0x3,%rbx
  0x000000011261ebfb: cmp    %rbx,%rsi
  0x000000011261ebfe: jne    0x000000011261ec8f
  0x000000011261ec04: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ec0e: mov    0x8(%r9),%esi
  0x000000011261ec12: shl    $0x3,%rsi
  0x000000011261ec16: cmp    0x190(%rdx),%rsi
  0x000000011261ec1d: jne    0x000000011261ec2c
  0x000000011261ec1f: addq   $0x1,0x198(%rdx)
  0x000000011261ec27: jmpq   0x000000011261ecab
  0x000000011261ec2c: cmp    0x1a0(%rdx),%rsi
  0x000000011261ec33: jne    0x000000011261ec42
  0x000000011261ec35: addq   $0x1,0x1a8(%rdx)
  0x000000011261ec3d: jmpq   0x000000011261ecab
  0x000000011261ec42: cmpq   $0x0,0x190(%rdx)
  0x000000011261ec4d: jne    0x000000011261ec66
  0x000000011261ec4f: mov    %rsi,0x190(%rdx)
  0x000000011261ec56: movq   $0x1,0x198(%rdx)
  0x000000011261ec61: jmpq   0x000000011261ecab
  0x000000011261ec66: cmpq   $0x0,0x1a0(%rdx)
  0x000000011261ec71: jne    0x000000011261ec8a
  0x000000011261ec73: mov    %rsi,0x1a0(%rdx)
  0x000000011261ec7a: movq   $0x1,0x1a8(%rdx)
  0x000000011261ec85: jmpq   0x000000011261ecab
  0x000000011261ec8a: jmpq   0x000000011261ecab
  0x000000011261ec8f: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ec99: subq   $0x1,0x188(%rdx)
  0x000000011261eca1: jmpq   0x00000001126205b2
  0x000000011261eca6: jmpq   0x000000011261ecab
  0x000000011261ecab: mov    %r9,%r8            ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x000000011261ecae: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x00000001126205bb
  0x000000011261ecb2: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x000000011261ecb6: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x00000001126205c0
  0x000000011261ecb9: cmp    %eax,%ebx
  0x000000011261ecbb: movabs $0x129f3c998,%rbx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ecc5: movabs $0x1b8,%rdx
  0x000000011261eccf: jge    0x000000011261ecdf
  0x000000011261ecd5: movabs $0x1c8,%rdx
  0x000000011261ecdf: mov    (%rbx,%rdx,1),%rsi
  0x000000011261ece3: lea    0x1(%rsi),%rsi
  0x000000011261ece7: mov    %rsi,(%rbx,%rdx,1)
  0x000000011261eceb: jl     0x000000011261ecf9  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x000000011261ecf1: mov    %rax,%r13
  0x000000011261ecf4: jmpq   0x000000011261ee2e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x000000011261ecf9: mov    %rax,%r11
  0x000000011261ecfc: shl    %r11d
  0x000000011261ecff: mov    %r11,%rbx
  0x000000011261ed02: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000011261ed0c: mov    %rax,%r13
  0x000000011261ed0f: movslq %ebx,%rbx
  0x000000011261ed12: mov    %rbx,%rdi
  0x000000011261ed15: cmp    $0xffffff,%rbx
  0x000000011261ed1c: ja     0x00000001126205c5
  0x000000011261ed22: movabs $0x17,%rsi
  0x000000011261ed2c: lea    (%rsi,%rbx,1),%rsi
  0x000000011261ed30: and    $0xfffffffffffffff8,%rsi
  0x000000011261ed34: mov    0x60(%r15),%rax
  0x000000011261ed38: lea    (%rax,%rsi,1),%rsi
  0x000000011261ed3c: cmp    0x70(%r15),%rsi
  0x000000011261ed40: ja     0x00000001126205c5
  0x000000011261ed46: mov    %rsi,0x60(%r15)
  0x000000011261ed4a: sub    %rax,%rsi
  0x000000011261ed4d: movq   $0x1,(%rax)
  0x000000011261ed54: mov    %rdx,%rcx
  0x000000011261ed57: shr    $0x3,%rcx
  0x000000011261ed5b: mov    %ecx,0x8(%rax)
  0x000000011261ed5e: mov    %ebx,0xc(%rax)
  0x000000011261ed61: sub    $0x10,%rsi
  0x000000011261ed65: je     0x000000011261ed7c
  0x000000011261ed6b: xor    %rbx,%rbx
  0x000000011261ed6e: shr    $0x3,%rsi
  0x000000011261ed72: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261ed77: dec    %rsi
  0x000000011261ed7a: jne    0x000000011261ed72  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x000000011261ed7c: mov    %rax,%r10
  0x000000011261ed7f: shr    $0x3,%r10
  0x000000011261ed83: mov    %r10d,0x10(%r8)
  0x000000011261ed87: mov    %r8,%rbx
  0x000000011261ed8a: shr    $0x9,%rbx
  0x000000011261ed8e: movabs $0x10e129000,%r14
  0x000000011261ed98: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x000000011261ed9d: mov    %r11,%rbx
  0x000000011261eda0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261edaa: movslq %ebx,%rbx
  0x000000011261edad: mov    %rbx,%rdi
  0x000000011261edb0: cmp    $0xffffff,%rbx
  0x000000011261edb7: ja     0x00000001126205cf
  0x000000011261edbd: movabs $0x17,%rsi
  0x000000011261edc7: lea    (%rsi,%rbx,2),%rsi
  0x000000011261edcb: and    $0xfffffffffffffff8,%rsi
  0x000000011261edcf: mov    0x60(%r15),%rax
  0x000000011261edd3: lea    (%rax,%rsi,1),%rsi
  0x000000011261edd7: cmp    0x70(%r15),%rsi
  0x000000011261eddb: ja     0x00000001126205cf
  0x000000011261ede1: mov    %rsi,0x60(%r15)
  0x000000011261ede5: sub    %rax,%rsi
  0x000000011261ede8: movq   $0x1,(%rax)
  0x000000011261edef: mov    %rdx,%rcx
  0x000000011261edf2: shr    $0x3,%rcx
  0x000000011261edf6: mov    %ecx,0x8(%rax)
  0x000000011261edf9: mov    %ebx,0xc(%rax)
  0x000000011261edfc: sub    $0x10,%rsi
  0x000000011261ee00: je     0x000000011261ee17
  0x000000011261ee06: xor    %rbx,%rbx
  0x000000011261ee09: shr    $0x3,%rsi
  0x000000011261ee0d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261ee12: dec    %rsi
  0x000000011261ee15: jne    0x000000011261ee0d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x000000011261ee17: mov    %rax,%r10
  0x000000011261ee1a: shr    $0x3,%r10
  0x000000011261ee1e: mov    %r10d,0x14(%r8)
  0x000000011261ee22: mov    %r8,%rbx
  0x000000011261ee25: shr    $0x9,%rbx
  0x000000011261ee29: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x000000011261ee2e: mov    0x14(%r8),%ebx
  0x000000011261ee32: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x000000011261ee36: mov    0x10(%r8),%edx
  0x000000011261ee3a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x000000011261ee3e: movabs $0x129f3c998,%rsi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ee48: incl   0x1d8(%rsi)
  0x000000011261ee4e: jmpq   0x000000011261ef53  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x000000011261ee53: mov    %rax,%r13
  0x000000011261ee56: mov    %r13,%rbx
  0x000000011261ee59: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000011261ee63: movslq %ebx,%rbx
  0x000000011261ee66: mov    %rbx,%rdi
  0x000000011261ee69: cmp    $0xffffff,%rbx
  0x000000011261ee70: ja     0x00000001126205d9
  0x000000011261ee76: movabs $0x17,%rsi
  0x000000011261ee80: lea    (%rsi,%rbx,1),%rsi
  0x000000011261ee84: and    $0xfffffffffffffff8,%rsi
  0x000000011261ee88: mov    0x60(%r15),%rax
  0x000000011261ee8c: lea    (%rax,%rsi,1),%rsi
  0x000000011261ee90: cmp    0x70(%r15),%rsi
  0x000000011261ee94: ja     0x00000001126205d9
  0x000000011261ee9a: mov    %rsi,0x60(%r15)
  0x000000011261ee9e: sub    %rax,%rsi
  0x000000011261eea1: movq   $0x1,(%rax)
  0x000000011261eea8: mov    %rdx,%rcx
  0x000000011261eeab: shr    $0x3,%rcx
  0x000000011261eeaf: mov    %ecx,0x8(%rax)
  0x000000011261eeb2: mov    %ebx,0xc(%rax)
  0x000000011261eeb5: sub    $0x10,%rsi
  0x000000011261eeb9: je     0x000000011261eed0
  0x000000011261eebf: xor    %rbx,%rbx
  0x000000011261eec2: shr    $0x3,%rsi
  0x000000011261eec6: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261eecb: dec    %rsi
  0x000000011261eece: jne    0x000000011261eec6
  0x000000011261eed0: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x000000011261eed3: mov    %r13,%rbx
  0x000000011261eed6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261eee0: movslq %ebx,%rbx
  0x000000011261eee3: mov    %rbx,%rdi
  0x000000011261eee6: cmp    $0xffffff,%rbx
  0x000000011261eeed: ja     0x00000001126205e3
  0x000000011261eef3: movabs $0x17,%rsi
  0x000000011261eefd: lea    (%rsi,%rbx,2),%rsi
  0x000000011261ef01: and    $0xfffffffffffffff8,%rsi
  0x000000011261ef05: mov    0x60(%r15),%rax
  0x000000011261ef09: lea    (%rax,%rsi,1),%rsi
  0x000000011261ef0d: cmp    0x70(%r15),%rsi
  0x000000011261ef11: ja     0x00000001126205e3
  0x000000011261ef17: mov    %rsi,0x60(%r15)
  0x000000011261ef1b: sub    %rax,%rsi
  0x000000011261ef1e: movq   $0x1,(%rax)
  0x000000011261ef25: mov    %rdx,%rcx
  0x000000011261ef28: shr    $0x3,%rcx
  0x000000011261ef2c: mov    %ecx,0x8(%rax)
  0x000000011261ef2f: mov    %ebx,0xc(%rax)
  0x000000011261ef32: sub    $0x10,%rsi
  0x000000011261ef36: je     0x000000011261ef4d
  0x000000011261ef3c: xor    %rbx,%rbx
  0x000000011261ef3f: shr    $0x3,%rsi
  0x000000011261ef43: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261ef48: dec    %rsi
  0x000000011261ef4b: jne    0x000000011261ef43  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x000000011261ef4d: mov    %rax,%rbx
  0x000000011261ef50: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x000000011261ef53: mov    %rbx,0x80(%rsp)
  0x000000011261ef5b: cmp    $0x0,%r9
  0x000000011261ef5f: je     0x000000011261ef86
  0x000000011261ef65: movabs $0x7c0043480,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011261ef6f: mov    0x8(%r9),%esi
  0x000000011261ef73: shl    $0x3,%rsi
  0x000000011261ef77: cmp    0x40(%rsi),%rdi
  0x000000011261ef7b: jne    0x00000001126205ed
  0x000000011261ef81: jmpq   0x000000011261ef86
  0x000000011261ef86: mov    %r9,%rcx
  0x000000011261ef89: mov    %r9,%rsi
  0x000000011261ef8c: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ef96: addq   $0x1,0x200(%rcx)
  0x000000011261ef9e: mov    %rdx,%rdi
  0x000000011261efa1: mov    %rdi,%rdx
  0x000000011261efa4: mov    $0x0,%ecx
  0x000000011261efa9: mov    %r13,%r8
  0x000000011261efac: mov    %r9,%rsi           ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x000000011261efaf: mov    %rdi,0x78(%rsp)
  0x000000011261efb4: mov    %r13d,0x70(%rsp)
  0x000000011261efb9: nop
  0x000000011261efba: nop
  0x000000011261efbb: nop
  0x000000011261efbc: nop
  0x000000011261efbd: nop
  0x000000011261efbe: nop
  0x000000011261efbf: callq  0x0000000112553020  ; OopMap{[120]=Oop [128]=Oop off=1476}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x000000011261efc4: mov    $0x0,%edx
  0x000000011261efc9: mov    $0x0,%esi
  0x000000011261efce: mov    0x80(%rsp),%rbx
  0x000000011261efd6: mov    0x78(%rsp),%rdi
  0x000000011261efdb: mov    0x70(%rsp),%eax
  0x000000011261efdf: jmpq   0x000000011261f09d  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x000000011261efe4: nopl   0x0(%rax)
  0x000000011261efe8: movslq %esi,%rcx
  0x000000011261efeb: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000001126205f2
  0x000000011261efee: jae    0x00000001126205fc
  0x000000011261eff4: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x000000011261eff9: and    $0xff,%ecx
  0x000000011261efff: cmp    $0x7f,%ecx
  0x000000011261f002: movabs $0x129f3c998,%r8   ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f00c: movabs $0x240,%r9
  0x000000011261f016: jle    0x000000011261f026
  0x000000011261f01c: movabs $0x250,%r9
  0x000000011261f026: mov    (%r8,%r9,1),%r11
  0x000000011261f02a: lea    0x1(%r11),%r11
  0x000000011261f02e: mov    %r11,(%r8,%r9,1)
  0x000000011261f032: jg     0x000000011261f0dd  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x000000011261f038: inc    %esi
  0x000000011261f03a: mov    %rdx,%r8
  0x000000011261f03d: inc    %r8d
  0x000000011261f040: movslq %edx,%r9
  0x000000011261f043: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x0000000112620605
  0x000000011261f046: jae    0x000000011262060f
  0x000000011261f04c: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x000000011261f052: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f05c: mov    0xe0(%rdx),%ecx
  0x000000011261f062: add    $0x8,%ecx
  0x000000011261f065: mov    %ecx,0xe0(%rdx)
  0x000000011261f06b: movabs $0x129f3bd08,%rdx  ;   {metadata({method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f075: and    $0xfff8,%ecx
  0x000000011261f07b: cmp    $0x0,%ecx
  0x000000011261f07e: je     0x0000000112620618  ; OopMap{rbx=Oop rdi=Oop off=1668}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000011261f084: test   %eax,-0x33cef8a(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011261f08a: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f094: incl   0x278(%rdx)
  0x000000011261f09a: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000011261f09d: cmp    %eax,%esi
  0x000000011261f09f: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f0a9: movabs $0x220,%r8
  0x000000011261f0b3: jge    0x000000011261f0c3
  0x000000011261f0b9: movabs $0x230,%r8
  0x000000011261f0c3: mov    (%rcx,%r8,1),%r9
  0x000000011261f0c7: lea    0x1(%r9),%r9
  0x000000011261f0cb: mov    %r9,(%rcx,%r8,1)
  0x000000011261f0cf: jl     0x000000011261efe8  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x000000011261f0d5: mov    %rdx,%r8
  0x000000011261f0d8: jmpq   0x000000011261f0f0  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x000000011261f0dd: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f0e7: incl   0x260(%rcx)
  0x000000011261f0ed: mov    %rdx,%r8           ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x000000011261f0f0: cmp    %eax,%esi
  0x000000011261f0f2: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f0fc: movabs $0x290,%rcx
  0x000000011261f106: jge    0x000000011261f116
  0x000000011261f10c: movabs $0x2a0,%rcx
  0x000000011261f116: mov    (%rdx,%rcx,1),%r9
  0x000000011261f11a: lea    0x1(%r9),%r9
  0x000000011261f11e: mov    %r9,(%rdx,%rcx,1)
  0x000000011261f122: jge    0x000000011261f483  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x000000011261f128: movslq %esi,%rdx
  0x000000011261f12b: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000000011262062f
  0x000000011261f12e: jae    0x0000000112620639
  0x000000011261f134: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x000000011261f139: and    $0xff,%edx
  0x000000011261f13f: mov    %rdx,%rcx
  0x000000011261f142: sar    $0x4,%ecx
  0x000000011261f145: cmp    $0x0,%ecx
  0x000000011261f148: jl     0x000000011261f157
  0x000000011261f14e: cmp    $0x7,%ecx
  0x000000011261f151: jle    0x000000011261f408
  0x000000011261f157: cmp    $0xc,%ecx
  0x000000011261f15a: je     0x000000011261f177
  0x000000011261f160: cmp    $0xd,%ecx
  0x000000011261f163: je     0x000000011261f177
  0x000000011261f169: cmp    $0xe,%ecx
  0x000000011261f16c: je     0x000000011261f215
  0x000000011261f172: jmpq   0x000000011261f477  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x000000011261f177: add    $0x2,%esi
  0x000000011261f17a: cmp    %eax,%esi
  0x000000011261f17c: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f186: movabs $0x3d8,%r9
  0x000000011261f190: jle    0x000000011261f1a0
  0x000000011261f196: movabs $0x3e8,%r9
  0x000000011261f1a0: mov    (%rcx,%r9,1),%r11
  0x000000011261f1a4: lea    0x1(%r11),%r11
  0x000000011261f1a8: mov    %r11,(%rcx,%r9,1)
  0x000000011261f1ac: jg     0x0000000112620539  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x000000011261f1b2: mov    %rsi,%rcx
  0x000000011261f1b5: dec    %ecx
  0x000000011261f1b7: movslq %ecx,%r9
  0x000000011261f1ba: cmp    0xc(%rdi),%ecx
  0x000000011261f1bd: jae    0x0000000112620642
  0x000000011261f1c3: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x000000011261f1c9: mov    %rcx,%r9
  0x000000011261f1cc: and    $0xc0,%r9d
  0x000000011261f1d3: cmp    $0x80,%r9d
  0x000000011261f1da: movabs $0x129f3c998,%r9   ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f1e4: movabs $0x408,%r11
  0x000000011261f1ee: je     0x000000011261f1fe
  0x000000011261f1f4: movabs $0x418,%r11
  0x000000011261f1fe: mov    (%r9,%r11,1),%r13
  0x000000011261f202: lea    0x1(%r13),%r13
  0x000000011261f206: mov    %r13,(%r9,%r11,1)
  0x000000011261f20a: je     0x000000011261f394
  0x000000011261f210: jmpq   0x000000011261fff1  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x000000011261f215: add    $0x3,%esi
  0x000000011261f218: cmp    %eax,%esi
  0x000000011261f21a: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f224: movabs $0x4f0,%r9
  0x000000011261f22e: jle    0x000000011261f23e
  0x000000011261f234: movabs $0x500,%r9
  0x000000011261f23e: mov    (%rcx,%r9,1),%r11
  0x000000011261f242: lea    0x1(%r11),%r11
  0x000000011261f246: mov    %r11,(%rcx,%r9,1)
  0x000000011261f24a: jg     0x000000011261ff99  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x000000011261f250: mov    %rsi,%rcx
  0x000000011261f253: sub    $0x2,%ecx
  0x000000011261f256: movslq %ecx,%r9
  0x000000011261f259: cmp    0xc(%rdi),%ecx
  0x000000011261f25c: jae    0x000000011262064b
  0x000000011261f262: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x000000011261f268: mov    %rsi,%r9
  0x000000011261f26b: dec    %r9d
  0x000000011261f26e: mov    %r9d,0x74(%rsp)
  0x000000011261f273: movslq %r9d,%r11
  0x000000011261f276: cmp    0xc(%rdi),%r9d
  0x000000011261f27a: jae    0x0000000112620654
  0x000000011261f280: movsbl 0x10(%rdi,%r11,1),%r11d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x000000011261f286: mov    %rcx,%r13
  0x000000011261f289: and    $0xc0,%r13d
  0x000000011261f290: cmp    $0x80,%r13d
  0x000000011261f297: movabs $0x129f3c998,%r13  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f2a1: movabs $0x520,%r14
  0x000000011261f2ab: jne    0x000000011261f2bb
  0x000000011261f2b1: movabs $0x530,%r14
  0x000000011261f2bb: mov    0x0(%r13,%r14,1),%r9
  0x000000011261f2c0: lea    0x1(%r9),%r9
  0x000000011261f2c4: mov    %r9,0x0(%r13,%r14,1)
  0x000000011261f2c9: jne    0x000000011261fa51  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x000000011261f2cf: mov    %r11,%r9
  0x000000011261f2d2: and    $0xc0,%r9d
  0x000000011261f2d9: cmp    $0x80,%r9d
  0x000000011261f2e0: movabs $0x129f3c998,%r9   ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f2ea: movabs $0x540,%r13
  0x000000011261f2f4: je     0x000000011261f304
  0x000000011261f2fa: movabs $0x550,%r13
  0x000000011261f304: mov    (%r9,%r13,1),%r14
  0x000000011261f308: lea    0x1(%r14),%r14
  0x000000011261f30c: mov    %r14,(%r9,%r13,1)
  0x000000011261f310: jne    0x000000011261fa51  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x000000011261f316: mov    %r8,%r9
  0x000000011261f319: inc    %r9d
  0x000000011261f31c: and    $0xf,%edx
  0x000000011261f31f: shl    $0xc,%edx
  0x000000011261f322: and    $0x3f,%ecx
  0x000000011261f325: shl    $0x6,%ecx
  0x000000011261f328: or     %rcx,%rdx
  0x000000011261f32b: and    $0x3f,%r11d
  0x000000011261f32f: or     %r11,%rdx
  0x000000011261f332: movslq %r8d,%rcx
  0x000000011261f335: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000011262065d
  0x000000011261f339: jae    0x0000000112620667
  0x000000011261f33f: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x000000011261f344: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f34e: mov    0xe0(%rdx),%ecx
  0x000000011261f354: add    $0x8,%ecx
  0x000000011261f357: mov    %ecx,0xe0(%rdx)
  0x000000011261f35d: movabs $0x129f3bd08,%rdx  ;   {metadata({method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f367: and    $0xfff8,%ecx
  0x000000011261f36d: cmp    $0x0,%ecx
  0x000000011261f370: je     0x0000000112620670  ; OopMap{rbx=Oop rdi=Oop off=2422}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000011261f376: test   %eax,-0x33cf27c(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011261f37c: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f386: incl   0x610(%rdx)
  0x000000011261f38c: mov    %r9,%r8
  0x000000011261f38f: jmpq   0x000000011261f0f0  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000011261f394: mov    %r8,%r9
  0x000000011261f397: inc    %r9d
  0x000000011261f39a: and    $0x1f,%edx
  0x000000011261f39d: shl    $0x6,%edx
  0x000000011261f3a0: and    $0x3f,%ecx
  0x000000011261f3a3: or     %rcx,%rdx
  0x000000011261f3a6: movslq %r8d,%rcx
  0x000000011261f3a9: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x0000000112620687
  0x000000011261f3ad: jae    0x0000000112620691
  0x000000011261f3b3: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x000000011261f3b8: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f3c2: mov    0xe0(%rdx),%ecx
  0x000000011261f3c8: add    $0x8,%ecx
  0x000000011261f3cb: mov    %ecx,0xe0(%rdx)
  0x000000011261f3d1: movabs $0x129f3bd08,%rdx  ;   {metadata({method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f3db: and    $0xfff8,%ecx
  0x000000011261f3e1: cmp    $0x0,%ecx
  0x000000011261f3e4: je     0x000000011262069a  ; OopMap{rbx=Oop rdi=Oop off=2538}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000011261f3ea: test   %eax,-0x33cf2f0(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011261f3f0: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f3fa: incl   0x4d8(%rdx)
  0x000000011261f400: mov    %r9,%r8
  0x000000011261f403: jmpq   0x000000011261f0f0  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000011261f408: inc    %esi
  0x000000011261f40a: mov    %r8,%rcx
  0x000000011261f40d: inc    %ecx
  0x000000011261f40f: movslq %r8d,%r9
  0x000000011261f412: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x00000001126206b1
  0x000000011261f416: jae    0x00000001126206bb
  0x000000011261f41c: mov    %dx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x000000011261f422: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f42c: mov    0xe0(%rdx),%r8d
  0x000000011261f433: add    $0x8,%r8d
  0x000000011261f437: mov    %r8d,0xe0(%rdx)
  0x000000011261f43e: movabs $0x129f3bd08,%rdx  ;   {metadata({method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f448: and    $0xfff8,%r8d
  0x000000011261f44f: cmp    $0x0,%r8d
  0x000000011261f453: je     0x00000001126206c4  ; OopMap{rbx=Oop rdi=Oop off=2649}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000011261f459: test   %eax,-0x33cf35f(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011261f45f: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f469: incl   0x3c0(%rdx)
  0x000000011261f46f: mov    %rcx,%r8
  0x000000011261f472: jmpq   0x000000011261f0f0  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000011261f477: mov    %esi,0x98(%rsp)
  0x000000011261f47e: jmpq   0x000000011261f50b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000011261f483: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011261f48d: mov    0x60(%r15),%rax
  0x000000011261f491: lea    0x18(%rax),%rdi
  0x000000011261f495: cmp    0x70(%r15),%rdi
  0x000000011261f499: ja     0x00000001126206db
  0x000000011261f49f: mov    %rdi,0x60(%r15)
  0x000000011261f4a3: mov    0xa8(%rdx),%rcx
  0x000000011261f4aa: mov    %rcx,(%rax)
  0x000000011261f4ad: mov    %rdx,%rcx
  0x000000011261f4b0: shr    $0x3,%rcx
  0x000000011261f4b4: mov    %ecx,0x8(%rax)
  0x000000011261f4b7: xor    %rcx,%rcx
  0x000000011261f4ba: mov    %ecx,0xc(%rax)
  0x000000011261f4bd: xor    %rcx,%rcx
  0x000000011261f4c0: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x000000011261f4c4: mov    %rax,%rdx
  0x000000011261f4c7: movabs $0x129f3c998,%rcx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f4d1: addq   $0x1,0x6d8(%rcx)
  0x000000011261f4d9: mov    %rbx,%rdx
  0x000000011261f4dc: mov    $0x0,%ecx
  0x000000011261f4e1: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x000000011261f4e4: mov    %rax,0x88(%rsp)
  0x000000011261f4ec: nop
  0x000000011261f4ed: nop
  0x000000011261f4ee: nop
  0x000000011261f4ef: callq  0x0000000112553020  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x000000011261f4f4: mov    0x88(%rsp),%rax
  0x000000011261f4fc: add    $0x100,%rsp
  0x000000011261f503: pop    %rbp
  0x000000011261f504: test   %eax,-0x33cf40a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011261f50a: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x000000011261f50b: nopl   0x0(%rax,%rax,1)
  0x000000011261f510: jmpq   0x00000001126206f7  ;   {no_reloc}
  0x000000011261f515: add    %al,(%rax)
  0x000000011261f517: add    %al,(%rax)
  0x000000011261f519: add    %ch,%cl
  0x000000011261f51b: loop   0x000000011261f52e
  0x000000011261f51d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000011261f51f: nop
  0x000000011261f520: jmpq   0x000000011262071d  ;   {no_reloc}
  0x000000011261f525: add    %al,(%rax)
  0x000000011261f527: add    %al,(%rax)
  0x000000011261f529: add    %cl,-0x77(%rax)
  0x000000011261f52c: test   %ah,(%rax,%riz,4)
  0x000000011261f52f: add    %al,(%rax)
  0x000000011261f531: add    %cl,-0x75(%rcx)
  0x000000011261f534: rex.RXB (bad) 
  0x000000011261f536: lea    0x18(%rax),%rdi
  0x000000011261f53a: cmp    0x70(%r15),%rdi
  0x000000011261f53e: ja     0x0000000112620727
  0x000000011261f544: mov    %rdi,0x60(%r15)
  0x000000011261f548: mov    0xa8(%rdx),%rcx
  0x000000011261f54f: mov    %rcx,(%rax)
  0x000000011261f552: mov    %rdx,%rcx
  0x000000011261f555: shr    $0x3,%rcx
  0x000000011261f559: mov    %ecx,0x8(%rax)
  0x000000011261f55c: xor    %rcx,%rcx
  0x000000011261f55f: mov    %ecx,0xc(%rax)
  0x000000011261f562: xor    %rcx,%rcx
  0x000000011261f565: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x000000011261f569: mov    %rax,%rbx
  0x000000011261f56c: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f576: addq   $0x1,0x628(%rdx)
  0x000000011261f57e: movabs $0x129f07058,%rbx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f588: mov    0xdc(%rbx),%edx
  0x000000011261f58e: add    $0x8,%edx
  0x000000011261f591: mov    %edx,0xdc(%rbx)
  0x000000011261f597: movabs $0x129d84b20,%rbx  ;   {metadata({method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f5a1: and    $0x7ffff8,%edx
  0x000000011261f5a7: cmp    $0x0,%edx
  0x000000011261f5aa: je     0x0000000112620734
  0x000000011261f5b0: mov    %rax,%rbx
  0x000000011261f5b3: movabs $0x129f07058,%rdx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f5bd: addq   $0x1,0x108(%rdx)
  0x000000011261f5c5: movabs $0x129f071a8,%rbx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261f5cf: mov    0xdc(%rbx),%edx
  0x000000011261f5d5: add    $0x8,%edx
  0x000000011261f5d8: mov    %edx,0xdc(%rbx)
  0x000000011261f5de: movabs $0x129d80f08,%rbx  ;   {metadata({method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261f5e8: and    $0x7ffff8,%edx
  0x000000011261f5ee: cmp    $0x0,%edx
  0x000000011261f5f1: je     0x000000011262074b
  0x000000011261f5f7: mov    %rax,%rbx
  0x000000011261f5fa: movabs $0x129f071a8,%rdx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261f604: addq   $0x1,0x108(%rdx)
  0x000000011261f60c: movabs $0x129e7d930,%rbx  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261f616: mov    0xdc(%rbx),%edx
  0x000000011261f61c: add    $0x8,%edx
  0x000000011261f61f: mov    %edx,0xdc(%rbx)
  0x000000011261f625: movabs $0x129d0d488,%rbx  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261f62f: and    $0x7ffff8,%edx
  0x000000011261f635: cmp    $0x0,%edx
  0x000000011261f638: je     0x0000000112620762
  0x000000011261f63e: mov    $0x10,%ebx
  0x000000011261f643: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261f64d: mov    %rax,%r11
  0x000000011261f650: movslq %ebx,%rbx
  0x000000011261f653: mov    %rbx,%rdi
  0x000000011261f656: cmp    $0xffffff,%rbx
  0x000000011261f65d: ja     0x0000000112620779
  0x000000011261f663: movabs $0x17,%rsi
  0x000000011261f66d: lea    (%rsi,%rbx,2),%rsi
  0x000000011261f671: and    $0xfffffffffffffff8,%rsi
  0x000000011261f675: mov    0x60(%r15),%rax
  0x000000011261f679: lea    (%rax,%rsi,1),%rsi
  0x000000011261f67d: cmp    0x70(%r15),%rsi
  0x000000011261f681: ja     0x0000000112620779
  0x000000011261f687: mov    %rsi,0x60(%r15)
  0x000000011261f68b: sub    %rax,%rsi
  0x000000011261f68e: movq   $0x1,(%rax)
  0x000000011261f695: mov    %rdx,%rcx
  0x000000011261f698: shr    $0x3,%rcx
  0x000000011261f69c: mov    %ecx,0x8(%rax)
  0x000000011261f69f: mov    %ebx,0xc(%rax)
  0x000000011261f6a2: sub    $0x10,%rsi
  0x000000011261f6a6: je     0x000000011261f6bd
  0x000000011261f6ac: xor    %rbx,%rbx
  0x000000011261f6af: shr    $0x3,%rsi
  0x000000011261f6b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261f6b8: dec    %rsi
  0x000000011261f6bb: jne    0x000000011261f6b3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000011261f6bd: mov    %rax,%r10
  0x000000011261f6c0: shr    $0x3,%r10
  0x000000011261f6c4: mov    %r10d,0x10(%r11)
  0x000000011261f6c8: mov    %r11,%rax
  0x000000011261f6cb: shr    $0x9,%rax
  0x000000011261f6cf: movabs $0x10e129000,%rdx
  0x000000011261f6d9: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000011261f6dd: mov    %r11,%rax
  0x000000011261f6e0: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f6ea: mov    0x8(%rax),%eax
  0x000000011261f6ed: shl    $0x3,%rax
  0x000000011261f6f1: cmp    0x640(%rdx),%rax
  0x000000011261f6f8: jne    0x000000011261f707
  0x000000011261f6fa: addq   $0x1,0x648(%rdx)
  0x000000011261f702: jmpq   0x000000011261f76d
  0x000000011261f707: cmp    0x650(%rdx),%rax
  0x000000011261f70e: jne    0x000000011261f71d
  0x000000011261f710: addq   $0x1,0x658(%rdx)
  0x000000011261f718: jmpq   0x000000011261f76d
  0x000000011261f71d: cmpq   $0x0,0x640(%rdx)
  0x000000011261f728: jne    0x000000011261f741
  0x000000011261f72a: mov    %rax,0x640(%rdx)
  0x000000011261f731: movq   $0x1,0x648(%rdx)
  0x000000011261f73c: jmpq   0x000000011261f76d
  0x000000011261f741: cmpq   $0x0,0x650(%rdx)
  0x000000011261f74c: jne    0x000000011261f765
  0x000000011261f74e: mov    %rax,0x650(%rdx)
  0x000000011261f755: movq   $0x1,0x658(%rdx)
  0x000000011261f760: jmpq   0x000000011261f76d
  0x000000011261f765: addq   $0x1,0x638(%rdx)
  0x000000011261f76d: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f777: mov    0xdc(%rdx),%esi
  0x000000011261f77d: add    $0x8,%esi
  0x000000011261f780: mov    %esi,0xdc(%rdx)
  0x000000011261f786: movabs $0x129d84e38,%rdx  ;   {metadata({method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f790: and    $0x7ffff8,%esi
  0x000000011261f796: cmp    $0x0,%esi
  0x000000011261f799: je     0x0000000112620783
  0x000000011261f79f: mov    %r11,%rax
  0x000000011261f7a2: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f7ac: addq   $0x1,0x108(%rdx)
  0x000000011261f7b4: movabs $0x76ad8f778,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x000000011261f7be: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x000000011261f7c1: mov    %r11,0x90(%rsp)
  0x000000011261f7c9: nop
  0x000000011261f7ca: nop
  0x000000011261f7cb: nop
  0x000000011261f7cc: nop
  0x000000011261f7cd: nop
  0x000000011261f7ce: nop
  0x000000011261f7cf: callq  0x0000000112553020  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011261f7d4: mov    0x90(%rsp),%rax
  0x000000011261f7dc: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f7e6: mov    0x8(%rax),%eax
  0x000000011261f7e9: shl    $0x3,%rax
  0x000000011261f7ed: cmp    0x670(%rdx),%rax
  0x000000011261f7f4: jne    0x000000011261f803
  0x000000011261f7f6: addq   $0x1,0x678(%rdx)
  0x000000011261f7fe: jmpq   0x000000011261f869
  0x000000011261f803: cmp    0x680(%rdx),%rax
  0x000000011261f80a: jne    0x000000011261f819
  0x000000011261f80c: addq   $0x1,0x688(%rdx)
  0x000000011261f814: jmpq   0x000000011261f869
  0x000000011261f819: cmpq   $0x0,0x670(%rdx)
  0x000000011261f824: jne    0x000000011261f83d
  0x000000011261f826: mov    %rax,0x670(%rdx)
  0x000000011261f82d: movq   $0x1,0x678(%rdx)
  0x000000011261f838: jmpq   0x000000011261f869
  0x000000011261f83d: cmpq   $0x0,0x680(%rdx)
  0x000000011261f848: jne    0x000000011261f861
  0x000000011261f84a: mov    %rax,0x680(%rdx)
  0x000000011261f851: movq   $0x1,0x688(%rdx)
  0x000000011261f85c: jmpq   0x000000011261f869
  0x000000011261f861: addq   $0x1,0x668(%rdx)
  0x000000011261f869: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f873: mov    0xdc(%rdx),%esi
  0x000000011261f879: add    $0x8,%esi
  0x000000011261f87c: mov    %esi,0xdc(%rdx)
  0x000000011261f882: movabs $0x129d852f8,%rdx  ;   {metadata({method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f88c: and    $0x7ffff8,%esi
  0x000000011261f892: cmp    $0x0,%esi
  0x000000011261f895: je     0x000000011262079a
  0x000000011261f89b: mov    0x90(%rsp),%rax
  0x000000011261f8a3: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f8ad: addq   $0x1,0x108(%rdx)
  0x000000011261f8b5: mov    0x98(%rsp),%edx
  0x000000011261f8bc: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x000000011261f8c4: nop
  0x000000011261f8c5: nop
  0x000000011261f8c6: nop
  0x000000011261f8c7: callq  0x0000000112553020  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011261f8cc: mov    0x90(%rsp),%rax
  0x000000011261f8d4: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261f8de: mov    0x8(%rax),%eax
  0x000000011261f8e1: shl    $0x3,%rax
  0x000000011261f8e5: cmp    0x6a0(%rdx),%rax
  0x000000011261f8ec: jne    0x000000011261f8fb
  0x000000011261f8ee: addq   $0x1,0x6a8(%rdx)
  0x000000011261f8f6: jmpq   0x000000011261f961
  0x000000011261f8fb: cmp    0x6b0(%rdx),%rax
  0x000000011261f902: jne    0x000000011261f911
  0x000000011261f904: addq   $0x1,0x6b8(%rdx)
  0x000000011261f90c: jmpq   0x000000011261f961
  0x000000011261f911: cmpq   $0x0,0x6a0(%rdx)
  0x000000011261f91c: jne    0x000000011261f935
  0x000000011261f91e: mov    %rax,0x6a0(%rdx)
  0x000000011261f925: movq   $0x1,0x6a8(%rdx)
  0x000000011261f930: jmpq   0x000000011261f961
  0x000000011261f935: cmpq   $0x0,0x6b0(%rdx)
  0x000000011261f940: jne    0x000000011261f959
  0x000000011261f942: mov    %rax,0x6b0(%rdx)
  0x000000011261f949: movq   $0x1,0x6b8(%rdx)
  0x000000011261f954: jmpq   0x000000011261f961
  0x000000011261f959: addq   $0x1,0x698(%rdx)
  0x000000011261f961: movabs $0x129f07ec0,%rdx  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f96b: mov    0xdc(%rdx),%esi
  0x000000011261f971: add    $0x8,%esi
  0x000000011261f974: mov    %esi,0xdc(%rdx)
  0x000000011261f97a: movabs $0x129d861e8,%rdx  ;   {metadata({method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f984: and    $0x7ffff8,%esi
  0x000000011261f98a: cmp    $0x0,%esi
  0x000000011261f98d: je     0x00000001126207b1
  0x000000011261f993: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011261f99d: mov    0x60(%r15),%rax
  0x000000011261f9a1: lea    0x18(%rax),%rdi
  0x000000011261f9a5: cmp    0x70(%r15),%rdi
  0x000000011261f9a9: ja     0x00000001126207c8
  0x000000011261f9af: mov    %rdi,0x60(%r15)
  0x000000011261f9b3: mov    0xa8(%rdx),%rcx
  0x000000011261f9ba: mov    %rcx,(%rax)
  0x000000011261f9bd: mov    %rdx,%rcx
  0x000000011261f9c0: shr    $0x3,%rcx
  0x000000011261f9c4: mov    %ecx,0x8(%rax)
  0x000000011261f9c7: xor    %rcx,%rcx
  0x000000011261f9ca: mov    %ecx,0xc(%rax)
  0x000000011261f9cd: xor    %rcx,%rcx
  0x000000011261f9d0: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011261f9d4: mov    0x90(%rsp),%rdx
  0x000000011261f9dc: mov    0x10(%rdx),%ecx
  0x000000011261f9df: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011261f9e3: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011261f9e7: mov    %rax,%rdx
  0x000000011261f9ea: movabs $0x129f07ec0,%rsi  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261f9f4: addq   $0x1,0x108(%rsi)
  0x000000011261f9fc: mov    %rcx,%rdx
  0x000000011261f9ff: mov    $0x0,%ecx
  0x000000011261fa04: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011261fa07: mov    %rax,0xa8(%rsp)
  0x000000011261fa0f: callq  0x0000000112553020  ; OopMap{[160]=Oop [168]=Oop off=4116}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011261fa14: mov    0xa0(%rsp),%rax
  0x000000011261fa1c: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261fa26: addq   $0x1,0x6c8(%rdx)
  0x000000011261fa2e: mov    0xa8(%rsp),%rdx
  0x000000011261fa36: mov    0xa0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x000000011261fa3e: nop
  0x000000011261fa3f: callq  0x0000000112553020  ; OopMap{[160]=Oop off=4164}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011261fa44: mov    0xa0(%rsp),%rax
  0x000000011261fa4c: jmpq   0x0000000112620a26  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x000000011261fa51: mov    %esi,0x9c(%rsp)
  0x000000011261fa58: jmpq   0x00000001126207e4  ;   {no_reloc}
  0x000000011261fa5d: add    %al,(%rax)
  0x000000011261fa5f: add    %al,(%rax)
  0x000000011261fa61: add    %ch,%cl
  0x000000011261fa63: xchg   %ecx,-0x16700000(%rip)        # 0x00000000fbf1fa69
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x000000011261fa69: popfq  
  0x000000011261fa6a: or     $0x0,%eax
  0x000000011261fa6f: add    %al,(%rax)
  0x000000011261fa71: add    %cl,-0x77(%rax)
  0x000000011261fa74: test   %ah,(%rax,%rdi,4)
  0x000000011261fa77: add    %al,(%rax)
  0x000000011261fa79: add    %cl,-0x75(%rcx)
  0x000000011261fa7c: rex.RXB (bad) 
  0x000000011261fa7e: lea    0x18(%rax),%rdi
  0x000000011261fa82: cmp    0x70(%r15),%rdi
  0x000000011261fa86: ja     0x0000000112620814
  0x000000011261fa8c: mov    %rdi,0x60(%r15)
  0x000000011261fa90: mov    0xa8(%rdx),%rcx
  0x000000011261fa97: mov    %rcx,(%rax)
  0x000000011261fa9a: mov    %rdx,%rcx
  0x000000011261fa9d: shr    $0x3,%rcx
  0x000000011261faa1: mov    %ecx,0x8(%rax)
  0x000000011261faa4: xor    %rcx,%rcx
  0x000000011261faa7: mov    %ecx,0xc(%rax)
  0x000000011261faaa: xor    %rcx,%rcx
  0x000000011261faad: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x000000011261fab1: mov    %rax,%rbx
  0x000000011261fab4: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261fabe: addq   $0x1,0x560(%rdx)
  0x000000011261fac6: movabs $0x129f07058,%rbx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fad0: mov    0xdc(%rbx),%edx
  0x000000011261fad6: add    $0x8,%edx
  0x000000011261fad9: mov    %edx,0xdc(%rbx)
  0x000000011261fadf: movabs $0x129d84b20,%rbx  ;   {metadata({method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fae9: and    $0x7ffff8,%edx
  0x000000011261faef: cmp    $0x0,%edx
  0x000000011261faf2: je     0x0000000112620821
  0x000000011261faf8: mov    %rax,%rbx
  0x000000011261fafb: movabs $0x129f07058,%rdx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fb05: addq   $0x1,0x108(%rdx)
  0x000000011261fb0d: movabs $0x129f071a8,%rbx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261fb17: mov    0xdc(%rbx),%edx
  0x000000011261fb1d: add    $0x8,%edx
  0x000000011261fb20: mov    %edx,0xdc(%rbx)
  0x000000011261fb26: movabs $0x129d80f08,%rbx  ;   {metadata({method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261fb30: and    $0x7ffff8,%edx
  0x000000011261fb36: cmp    $0x0,%edx
  0x000000011261fb39: je     0x0000000112620838
  0x000000011261fb3f: mov    %rax,%rbx
  0x000000011261fb42: movabs $0x129f071a8,%rdx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011261fb4c: addq   $0x1,0x108(%rdx)
  0x000000011261fb54: movabs $0x129e7d930,%rbx  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261fb5e: mov    0xdc(%rbx),%edx
  0x000000011261fb64: add    $0x8,%edx
  0x000000011261fb67: mov    %edx,0xdc(%rbx)
  0x000000011261fb6d: movabs $0x129d0d488,%rbx  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011261fb77: and    $0x7ffff8,%edx
  0x000000011261fb7d: cmp    $0x0,%edx
  0x000000011261fb80: je     0x000000011262084f
  0x000000011261fb86: mov    $0x10,%ebx
  0x000000011261fb8b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011261fb95: mov    %rax,%r13
  0x000000011261fb98: movslq %ebx,%rbx
  0x000000011261fb9b: mov    %rbx,%rdi
  0x000000011261fb9e: cmp    $0xffffff,%rbx
  0x000000011261fba5: ja     0x0000000112620866
  0x000000011261fbab: movabs $0x17,%rsi
  0x000000011261fbb5: lea    (%rsi,%rbx,2),%rsi
  0x000000011261fbb9: and    $0xfffffffffffffff8,%rsi
  0x000000011261fbbd: mov    0x60(%r15),%rax
  0x000000011261fbc1: lea    (%rax,%rsi,1),%rsi
  0x000000011261fbc5: cmp    0x70(%r15),%rsi
  0x000000011261fbc9: ja     0x0000000112620866
  0x000000011261fbcf: mov    %rsi,0x60(%r15)
  0x000000011261fbd3: sub    %rax,%rsi
  0x000000011261fbd6: movq   $0x1,(%rax)
  0x000000011261fbdd: mov    %rdx,%rcx
  0x000000011261fbe0: shr    $0x3,%rcx
  0x000000011261fbe4: mov    %ecx,0x8(%rax)
  0x000000011261fbe7: mov    %ebx,0xc(%rax)
  0x000000011261fbea: sub    $0x10,%rsi
  0x000000011261fbee: je     0x000000011261fc05
  0x000000011261fbf4: xor    %rbx,%rbx
  0x000000011261fbf7: shr    $0x3,%rsi
  0x000000011261fbfb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011261fc00: dec    %rsi
  0x000000011261fc03: jne    0x000000011261fbfb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000011261fc05: mov    %rax,%r10
  0x000000011261fc08: shr    $0x3,%r10
  0x000000011261fc0c: mov    %r10d,0x10(%r13)
  0x000000011261fc10: mov    %r13,%rax
  0x000000011261fc13: shr    $0x9,%rax
  0x000000011261fc17: movabs $0x10e129000,%rdx
  0x000000011261fc21: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000011261fc25: mov    %r13,%rax
  0x000000011261fc28: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261fc32: mov    0x8(%rax),%eax
  0x000000011261fc35: shl    $0x3,%rax
  0x000000011261fc39: cmp    0x578(%rdx),%rax
  0x000000011261fc40: jne    0x000000011261fc4f
  0x000000011261fc42: addq   $0x1,0x580(%rdx)
  0x000000011261fc4a: jmpq   0x000000011261fcb5
  0x000000011261fc4f: cmp    0x588(%rdx),%rax
  0x000000011261fc56: jne    0x000000011261fc65
  0x000000011261fc58: addq   $0x1,0x590(%rdx)
  0x000000011261fc60: jmpq   0x000000011261fcb5
  0x000000011261fc65: cmpq   $0x0,0x578(%rdx)
  0x000000011261fc70: jne    0x000000011261fc89
  0x000000011261fc72: mov    %rax,0x578(%rdx)
  0x000000011261fc79: movq   $0x1,0x580(%rdx)
  0x000000011261fc84: jmpq   0x000000011261fcb5
  0x000000011261fc89: cmpq   $0x0,0x588(%rdx)
  0x000000011261fc94: jne    0x000000011261fcad
  0x000000011261fc96: mov    %rax,0x588(%rdx)
  0x000000011261fc9d: movq   $0x1,0x590(%rdx)
  0x000000011261fca8: jmpq   0x000000011261fcb5
  0x000000011261fcad: addq   $0x1,0x570(%rdx)
  0x000000011261fcb5: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fcbf: mov    0xdc(%rdx),%esi
  0x000000011261fcc5: add    $0x8,%esi
  0x000000011261fcc8: mov    %esi,0xdc(%rdx)
  0x000000011261fcce: movabs $0x129d84e38,%rdx  ;   {metadata({method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fcd8: and    $0x7ffff8,%esi
  0x000000011261fcde: cmp    $0x0,%esi
  0x000000011261fce1: je     0x0000000112620870
  0x000000011261fce7: mov    %r13,%rax
  0x000000011261fcea: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fcf4: addq   $0x1,0x108(%rdx)
  0x000000011261fcfc: movabs $0x76ad8f778,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x000000011261fd06: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x000000011261fd09: mov    %r13,0xb0(%rsp)
  0x000000011261fd11: nop
  0x000000011261fd12: nop
  0x000000011261fd13: nop
  0x000000011261fd14: nop
  0x000000011261fd15: nop
  0x000000011261fd16: nop
  0x000000011261fd17: callq  0x0000000112553020  ; OopMap{[176]=Oop [184]=Oop off=4892}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011261fd1c: mov    0xb0(%rsp),%rax
  0x000000011261fd24: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261fd2e: mov    0x8(%rax),%eax
  0x000000011261fd31: shl    $0x3,%rax
  0x000000011261fd35: cmp    0x5a8(%rdx),%rax
  0x000000011261fd3c: jne    0x000000011261fd4b
  0x000000011261fd3e: addq   $0x1,0x5b0(%rdx)
  0x000000011261fd46: jmpq   0x000000011261fdb1
  0x000000011261fd4b: cmp    0x5b8(%rdx),%rax
  0x000000011261fd52: jne    0x000000011261fd61
  0x000000011261fd54: addq   $0x1,0x5c0(%rdx)
  0x000000011261fd5c: jmpq   0x000000011261fdb1
  0x000000011261fd61: cmpq   $0x0,0x5a8(%rdx)
  0x000000011261fd6c: jne    0x000000011261fd85
  0x000000011261fd6e: mov    %rax,0x5a8(%rdx)
  0x000000011261fd75: movq   $0x1,0x5b0(%rdx)
  0x000000011261fd80: jmpq   0x000000011261fdb1
  0x000000011261fd85: cmpq   $0x0,0x5b8(%rdx)
  0x000000011261fd90: jne    0x000000011261fda9
  0x000000011261fd92: mov    %rax,0x5b8(%rdx)
  0x000000011261fd99: movq   $0x1,0x5c0(%rdx)
  0x000000011261fda4: jmpq   0x000000011261fdb1
  0x000000011261fda9: addq   $0x1,0x5a0(%rdx)
  0x000000011261fdb1: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fdbb: mov    0xdc(%rdx),%esi
  0x000000011261fdc1: add    $0x8,%esi
  0x000000011261fdc4: mov    %esi,0xdc(%rdx)
  0x000000011261fdca: movabs $0x129d852f8,%rdx  ;   {metadata({method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fdd4: and    $0x7ffff8,%esi
  0x000000011261fdda: cmp    $0x0,%esi
  0x000000011261fddd: je     0x0000000112620887
  0x000000011261fde3: mov    0xb0(%rsp),%rax
  0x000000011261fdeb: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fdf5: addq   $0x1,0x108(%rdx)
  0x000000011261fdfd: mov    0x74(%rsp),%edx
  0x000000011261fe01: mov    0xb0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x000000011261fe09: nop
  0x000000011261fe0a: nop
  0x000000011261fe0b: nop
  0x000000011261fe0c: nop
  0x000000011261fe0d: nop
  0x000000011261fe0e: nop
  0x000000011261fe0f: callq  0x0000000112553020  ; OopMap{[176]=Oop [184]=Oop off=5140}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011261fe14: mov    0xb0(%rsp),%rax
  0x000000011261fe1c: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261fe26: mov    0x8(%rax),%eax
  0x000000011261fe29: shl    $0x3,%rax
  0x000000011261fe2d: cmp    0x5d8(%rdx),%rax
  0x000000011261fe34: jne    0x000000011261fe43
  0x000000011261fe36: addq   $0x1,0x5e0(%rdx)
  0x000000011261fe3e: jmpq   0x000000011261fea9
  0x000000011261fe43: cmp    0x5e8(%rdx),%rax
  0x000000011261fe4a: jne    0x000000011261fe59
  0x000000011261fe4c: addq   $0x1,0x5f0(%rdx)
  0x000000011261fe54: jmpq   0x000000011261fea9
  0x000000011261fe59: cmpq   $0x0,0x5d8(%rdx)
  0x000000011261fe64: jne    0x000000011261fe7d
  0x000000011261fe66: mov    %rax,0x5d8(%rdx)
  0x000000011261fe6d: movq   $0x1,0x5e0(%rdx)
  0x000000011261fe78: jmpq   0x000000011261fea9
  0x000000011261fe7d: cmpq   $0x0,0x5e8(%rdx)
  0x000000011261fe88: jne    0x000000011261fea1
  0x000000011261fe8a: mov    %rax,0x5e8(%rdx)
  0x000000011261fe91: movq   $0x1,0x5f0(%rdx)
  0x000000011261fe9c: jmpq   0x000000011261fea9
  0x000000011261fea1: addq   $0x1,0x5d0(%rdx)
  0x000000011261fea9: movabs $0x129f07ec0,%rdx  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261feb3: mov    0xdc(%rdx),%esi
  0x000000011261feb9: add    $0x8,%esi
  0x000000011261febc: mov    %esi,0xdc(%rdx)
  0x000000011261fec2: movabs $0x129d861e8,%rdx  ;   {metadata({method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261fecc: and    $0x7ffff8,%esi
  0x000000011261fed2: cmp    $0x0,%esi
  0x000000011261fed5: je     0x000000011262089e
  0x000000011261fedb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011261fee5: mov    0x60(%r15),%rax
  0x000000011261fee9: lea    0x18(%rax),%rdi
  0x000000011261feed: cmp    0x70(%r15),%rdi
  0x000000011261fef1: ja     0x00000001126208b5
  0x000000011261fef7: mov    %rdi,0x60(%r15)
  0x000000011261fefb: mov    0xa8(%rdx),%rcx
  0x000000011261ff02: mov    %rcx,(%rax)
  0x000000011261ff05: mov    %rdx,%rcx
  0x000000011261ff08: shr    $0x3,%rcx
  0x000000011261ff0c: mov    %ecx,0x8(%rax)
  0x000000011261ff0f: xor    %rcx,%rcx
  0x000000011261ff12: mov    %ecx,0xc(%rax)
  0x000000011261ff15: xor    %rcx,%rcx
  0x000000011261ff18: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011261ff1c: mov    0xb0(%rsp),%rdx
  0x000000011261ff24: mov    0x10(%rdx),%ecx
  0x000000011261ff27: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011261ff2b: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011261ff2f: mov    %rax,%rdx
  0x000000011261ff32: movabs $0x129f07ec0,%rsi  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011261ff3c: addq   $0x1,0x108(%rsi)
  0x000000011261ff44: mov    %rcx,%rdx
  0x000000011261ff47: mov    $0x0,%ecx
  0x000000011261ff4c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011261ff4f: mov    %rax,0xc0(%rsp)
  0x000000011261ff57: callq  0x0000000112553020  ; OopMap{[184]=Oop [192]=Oop off=5468}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011261ff5c: mov    0xb8(%rsp),%rax
  0x000000011261ff64: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ff6e: addq   $0x1,0x600(%rdx)
  0x000000011261ff76: mov    0xc0(%rsp),%rdx
  0x000000011261ff7e: mov    0xb8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x000000011261ff86: nop
  0x000000011261ff87: callq  0x0000000112553020  ; OopMap{[184]=Oop off=5516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011261ff8c: mov    0xb8(%rsp),%rax
  0x000000011261ff94: jmpq   0x0000000112620a26  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x000000011261ff99: nopl   0x0(%rax)
  0x000000011261ffa0: jmpq   0x00000001126208d1  ;   {no_reloc}
  0x000000011261ffa5: add    %al,(%rax)
  0x000000011261ffa7: add    %al,(%rax)
  0x000000011261ffa9: add    %ch,%cl
  0x000000011261ffab: sub    $0x9,%al
  0x000000011261ffad: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x000000011261ffaf: mov    %rax,%rdx
  0x000000011261ffb2: movabs $0x129f3c998,%rsi  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011261ffbc: addq   $0x1,0x510(%rsi)
  0x000000011261ffc4: movabs $0x76ad8f6f8,%rdx  ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x000000011261ffce: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x000000011261ffd1: mov    %rax,0xc8(%rsp)
  0x000000011261ffd9: nop
  0x000000011261ffda: nop
  0x000000011261ffdb: nop
  0x000000011261ffdc: nop
  0x000000011261ffdd: nop
  0x000000011261ffde: nop
  0x000000011261ffdf: callq  0x0000000112553020  ; OopMap{[200]=Oop off=5604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x000000011261ffe4: mov    0xc8(%rsp),%rax
  0x000000011261ffec: jmpq   0x0000000112620a26  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x000000011261fff1: mov    %esi,0xd8(%rsp)
  0x000000011261fff8: jmpq   0x00000001126208f7  ;   {no_reloc}
  0x000000011261fffd: add    %al,(%rax)
  0x000000011261ffff: add    %al,(%rax)
  0x0000000112620001: add    %ch,%cl
  0x0000000112620003: cli    
  0x0000000112620004: or     %al,(%rax)
  0x0000000112620006: add    %dl,0x910e9(%rax)  ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {no_reloc}
  0x000000011262000c: add    %al,(%rax)
  0x000000011262000e: add    %al,(%rax)
  0x0000000112620010: add    %al,(%rax)
  0x0000000112620012: mov    %rax,0xe0(%rsp)
  0x000000011262001a: mov    0x60(%r15),%rax
  0x000000011262001e: lea    0x18(%rax),%rdi
  0x0000000112620022: cmp    0x70(%r15),%rdi
  0x0000000112620026: ja     0x0000000112620927
  0x000000011262002c: mov    %rdi,0x60(%r15)
  0x0000000112620030: mov    0xa8(%rdx),%rcx
  0x0000000112620037: mov    %rcx,(%rax)
  0x000000011262003a: mov    %rdx,%rcx
  0x000000011262003d: shr    $0x3,%rcx
  0x0000000112620041: mov    %ecx,0x8(%rax)
  0x0000000112620044: xor    %rcx,%rcx
  0x0000000112620047: mov    %ecx,0xc(%rax)
  0x000000011262004a: xor    %rcx,%rcx
  0x000000011262004d: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x0000000112620051: mov    %rax,%rbx
  0x0000000112620054: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262005e: addq   $0x1,0x428(%rdx)
  0x0000000112620066: movabs $0x129f07058,%rbx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620070: mov    0xdc(%rbx),%edx
  0x0000000112620076: add    $0x8,%edx
  0x0000000112620079: mov    %edx,0xdc(%rbx)
  0x000000011262007f: movabs $0x129d84b20,%rbx  ;   {metadata({method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620089: and    $0x7ffff8,%edx
  0x000000011262008f: cmp    $0x0,%edx
  0x0000000112620092: je     0x0000000112620934
  0x0000000112620098: mov    %rax,%rbx
  0x000000011262009b: movabs $0x129f07058,%rdx  ;   {metadata(method data for {method} {0x0000000129d84b20} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001126200a5: addq   $0x1,0x108(%rdx)
  0x00000001126200ad: movabs $0x129f071a8,%rbx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001126200b7: mov    0xdc(%rbx),%edx
  0x00000001126200bd: add    $0x8,%edx
  0x00000001126200c0: mov    %edx,0xdc(%rbx)
  0x00000001126200c6: movabs $0x129d80f08,%rbx  ;   {metadata({method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001126200d0: and    $0x7ffff8,%edx
  0x00000001126200d6: cmp    $0x0,%edx
  0x00000001126200d9: je     0x000000011262094b
  0x00000001126200df: mov    %rax,%rbx
  0x00000001126200e2: movabs $0x129f071a8,%rdx  ;   {metadata(method data for {method} {0x0000000129d80f08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000001126200ec: addq   $0x1,0x108(%rdx)
  0x00000001126200f4: movabs $0x129e7d930,%rbx  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000001126200fe: mov    0xdc(%rbx),%edx
  0x0000000112620104: add    $0x8,%edx
  0x0000000112620107: mov    %edx,0xdc(%rbx)
  0x000000011262010d: movabs $0x129d0d488,%rbx  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000112620117: and    $0x7ffff8,%edx
  0x000000011262011d: cmp    $0x0,%edx
  0x0000000112620120: je     0x0000000112620962
  0x0000000112620126: mov    $0x10,%ebx
  0x000000011262012b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000112620135: mov    %rax,%r11
  0x0000000112620138: movslq %ebx,%rbx
  0x000000011262013b: mov    %rbx,%rdi
  0x000000011262013e: cmp    $0xffffff,%rbx
  0x0000000112620145: ja     0x0000000112620979
  0x000000011262014b: movabs $0x17,%rsi
  0x0000000112620155: lea    (%rsi,%rbx,2),%rsi
  0x0000000112620159: and    $0xfffffffffffffff8,%rsi
  0x000000011262015d: mov    0x60(%r15),%rax
  0x0000000112620161: lea    (%rax,%rsi,1),%rsi
  0x0000000112620165: cmp    0x70(%r15),%rsi
  0x0000000112620169: ja     0x0000000112620979
  0x000000011262016f: mov    %rsi,0x60(%r15)
  0x0000000112620173: sub    %rax,%rsi
  0x0000000112620176: movq   $0x1,(%rax)
  0x000000011262017d: mov    %rdx,%rcx
  0x0000000112620180: shr    $0x3,%rcx
  0x0000000112620184: mov    %ecx,0x8(%rax)
  0x0000000112620187: mov    %ebx,0xc(%rax)
  0x000000011262018a: sub    $0x10,%rsi
  0x000000011262018e: je     0x00000001126201a5
  0x0000000112620194: xor    %rbx,%rbx
  0x0000000112620197: shr    $0x3,%rsi
  0x000000011262019b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001126201a0: dec    %rsi
  0x00000001126201a3: jne    0x000000011262019b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000001126201a5: mov    %rax,%r10
  0x00000001126201a8: shr    $0x3,%r10
  0x00000001126201ac: mov    %r10d,0x10(%r11)
  0x00000001126201b0: mov    %r11,%rax
  0x00000001126201b3: shr    $0x9,%rax
  0x00000001126201b7: movabs $0x10e129000,%rdx
  0x00000001126201c1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000001126201c5: mov    %r11,%rax
  0x00000001126201c8: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126201d2: mov    0x8(%rax),%eax
  0x00000001126201d5: shl    $0x3,%rax
  0x00000001126201d9: cmp    0x440(%rdx),%rax
  0x00000001126201e0: jne    0x00000001126201ef
  0x00000001126201e2: addq   $0x1,0x448(%rdx)
  0x00000001126201ea: jmpq   0x0000000112620255
  0x00000001126201ef: cmp    0x450(%rdx),%rax
  0x00000001126201f6: jne    0x0000000112620205
  0x00000001126201f8: addq   $0x1,0x458(%rdx)
  0x0000000112620200: jmpq   0x0000000112620255
  0x0000000112620205: cmpq   $0x0,0x440(%rdx)
  0x0000000112620210: jne    0x0000000112620229
  0x0000000112620212: mov    %rax,0x440(%rdx)
  0x0000000112620219: movq   $0x1,0x448(%rdx)
  0x0000000112620224: jmpq   0x0000000112620255
  0x0000000112620229: cmpq   $0x0,0x450(%rdx)
  0x0000000112620234: jne    0x000000011262024d
  0x0000000112620236: mov    %rax,0x450(%rdx)
  0x000000011262023d: movq   $0x1,0x458(%rdx)
  0x0000000112620248: jmpq   0x0000000112620255
  0x000000011262024d: addq   $0x1,0x438(%rdx)
  0x0000000112620255: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262025f: mov    0xdc(%rdx),%esi
  0x0000000112620265: add    $0x8,%esi
  0x0000000112620268: mov    %esi,0xdc(%rdx)
  0x000000011262026e: movabs $0x129d84e38,%rdx  ;   {metadata({method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620278: and    $0x7ffff8,%esi
  0x000000011262027e: cmp    $0x0,%esi
  0x0000000112620281: je     0x0000000112620983
  0x0000000112620287: mov    %r11,%rax
  0x000000011262028a: movabs $0x129f07cc0,%rdx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620294: addq   $0x1,0x108(%rdx)
  0x000000011262029c: movabs $0x76ad8f778,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000001126202a6: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x00000001126202a9: mov    %r11,0xd0(%rsp)
  0x00000001126202b1: nop
  0x00000001126202b2: nop
  0x00000001126202b3: nop
  0x00000001126202b4: nop
  0x00000001126202b5: nop
  0x00000001126202b6: nop
  0x00000001126202b7: callq  0x0000000112553020  ; OopMap{[208]=Oop [224]=Oop off=6332}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x00000001126202bc: mov    0xd0(%rsp),%rax
  0x00000001126202c4: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126202ce: mov    0x8(%rax),%eax
  0x00000001126202d1: shl    $0x3,%rax
  0x00000001126202d5: cmp    0x470(%rdx),%rax
  0x00000001126202dc: jne    0x00000001126202eb
  0x00000001126202de: addq   $0x1,0x478(%rdx)
  0x00000001126202e6: jmpq   0x0000000112620351
  0x00000001126202eb: cmp    0x480(%rdx),%rax
  0x00000001126202f2: jne    0x0000000112620301
  0x00000001126202f4: addq   $0x1,0x488(%rdx)
  0x00000001126202fc: jmpq   0x0000000112620351
  0x0000000112620301: cmpq   $0x0,0x470(%rdx)
  0x000000011262030c: jne    0x0000000112620325
  0x000000011262030e: mov    %rax,0x470(%rdx)
  0x0000000112620315: movq   $0x1,0x478(%rdx)
  0x0000000112620320: jmpq   0x0000000112620351
  0x0000000112620325: cmpq   $0x0,0x480(%rdx)
  0x0000000112620330: jne    0x0000000112620349
  0x0000000112620332: mov    %rax,0x480(%rdx)
  0x0000000112620339: movq   $0x1,0x488(%rdx)
  0x0000000112620344: jmpq   0x0000000112620351
  0x0000000112620349: addq   $0x1,0x468(%rdx)
  0x0000000112620351: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262035b: mov    0xdc(%rdx),%esi
  0x0000000112620361: add    $0x8,%esi
  0x0000000112620364: mov    %esi,0xdc(%rdx)
  0x000000011262036a: movabs $0x129d852f8,%rdx  ;   {metadata({method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620374: and    $0x7ffff8,%esi
  0x000000011262037a: cmp    $0x0,%esi
  0x000000011262037d: je     0x000000011262099a
  0x0000000112620383: mov    0xd0(%rsp),%rax
  0x000000011262038b: movabs $0x129f074f0,%rdx  ;   {metadata(method data for {method} {0x0000000129d852f8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620395: addq   $0x1,0x108(%rdx)
  0x000000011262039d: mov    0xd8(%rsp),%edx
  0x00000001126203a4: mov    0xd0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x00000001126203ac: nop
  0x00000001126203ad: nop
  0x00000001126203ae: nop
  0x00000001126203af: callq  0x0000000112553020  ; OopMap{[208]=Oop [224]=Oop off=6580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x00000001126203b4: mov    0xd0(%rsp),%rax
  0x00000001126203bc: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126203c6: mov    0x8(%rax),%eax
  0x00000001126203c9: shl    $0x3,%rax
  0x00000001126203cd: cmp    0x4a0(%rdx),%rax
  0x00000001126203d4: jne    0x00000001126203e3
  0x00000001126203d6: addq   $0x1,0x4a8(%rdx)
  0x00000001126203de: jmpq   0x0000000112620449
  0x00000001126203e3: cmp    0x4b0(%rdx),%rax
  0x00000001126203ea: jne    0x00000001126203f9
  0x00000001126203ec: addq   $0x1,0x4b8(%rdx)
  0x00000001126203f4: jmpq   0x0000000112620449
  0x00000001126203f9: cmpq   $0x0,0x4a0(%rdx)
  0x0000000112620404: jne    0x000000011262041d
  0x0000000112620406: mov    %rax,0x4a0(%rdx)
  0x000000011262040d: movq   $0x1,0x4a8(%rdx)
  0x0000000112620418: jmpq   0x0000000112620449
  0x000000011262041d: cmpq   $0x0,0x4b0(%rdx)
  0x0000000112620428: jne    0x0000000112620441
  0x000000011262042a: mov    %rax,0x4b0(%rdx)
  0x0000000112620431: movq   $0x1,0x4b8(%rdx)
  0x000000011262043c: jmpq   0x0000000112620449
  0x0000000112620441: addq   $0x1,0x498(%rdx)
  0x0000000112620449: movabs $0x129f07ec0,%rdx  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112620453: mov    0xdc(%rdx),%esi
  0x0000000112620459: add    $0x8,%esi
  0x000000011262045c: mov    %esi,0xdc(%rdx)
  0x0000000112620462: movabs $0x129d861e8,%rdx  ;   {metadata({method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262046c: and    $0x7ffff8,%esi
  0x0000000112620472: cmp    $0x0,%esi
  0x0000000112620475: je     0x00000001126209b1
  0x000000011262047b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000112620485: mov    0x60(%r15),%rax
  0x0000000112620489: lea    0x18(%rax),%rdi
  0x000000011262048d: cmp    0x70(%r15),%rdi
  0x0000000112620491: ja     0x00000001126209c8
  0x0000000112620497: mov    %rdi,0x60(%r15)
  0x000000011262049b: mov    0xa8(%rdx),%rcx
  0x00000001126204a2: mov    %rcx,(%rax)
  0x00000001126204a5: mov    %rdx,%rcx
  0x00000001126204a8: shr    $0x3,%rcx
  0x00000001126204ac: mov    %ecx,0x8(%rax)
  0x00000001126204af: xor    %rcx,%rcx
  0x00000001126204b2: mov    %ecx,0xc(%rax)
  0x00000001126204b5: xor    %rcx,%rcx
  0x00000001126204b8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000001126204bc: mov    0xd0(%rsp),%rdx
  0x00000001126204c4: mov    0x10(%rdx),%ecx
  0x00000001126204c7: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000001126204cb: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000001126204cf: mov    %rax,%rdx
  0x00000001126204d2: movabs $0x129f07ec0,%rsi  ;   {metadata(method data for {method} {0x0000000129d861e8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000001126204dc: addq   $0x1,0x108(%rsi)
  0x00000001126204e4: mov    %rcx,%rdx
  0x00000001126204e7: mov    $0x0,%ecx
  0x00000001126204ec: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000001126204ef: mov    %rax,0xe8(%rsp)
  0x00000001126204f7: callq  0x0000000112553020  ; OopMap{[224]=Oop [232]=Oop off=6908}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x00000001126204fc: mov    0xe0(%rsp),%rax
  0x0000000112620504: movabs $0x129f3c998,%rdx  ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262050e: addq   $0x1,0x4c8(%rdx)
  0x0000000112620516: mov    0xe8(%rsp),%rdx
  0x000000011262051e: mov    0xe0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x0000000112620526: nop
  0x0000000112620527: callq  0x0000000112553020  ; OopMap{[224]=Oop off=6956}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x000000011262052c: mov    0xe0(%rsp),%rax
  0x0000000112620534: jmpq   0x0000000112620a26  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x0000000112620539: nopl   0x0(%rax)
  0x0000000112620540: jmpq   0x00000001126209e4  ;   {no_reloc}
  0x0000000112620545: add    %al,(%rax)
  0x0000000112620547: add    %al,(%rax)
  0x0000000112620549: add    %ch,%cl
  0x000000011262054b: lahf   
  0x000000011262054c: add    $0x0,%al
  0x000000011262054e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x0000000112620551: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000129f3bd08} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112620554: cwtl   
  0x0000000112620555: leaveq 
  0x0000000112620556: repz sub %eax,(%rcx)
  0x0000000112620559: add    %al,(%rax)
  0x000000011262055b: add    %cl,-0x7d(%rax)
  0x000000011262055e: xchg   %bh,%al
  0x0000000112620560: add    (%rax),%eax
  0x0000000112620562: add    %al,(%rcx)
  0x0000000112620564: movabs $0x76ad8f6f8,%rdx  ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x000000011262056e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x0000000112620571: mov    %rax,0xf0(%rsp)
  0x0000000112620579: nop
  0x000000011262057a: nop
  0x000000011262057b: nop
  0x000000011262057c: nop
  0x000000011262057d: nop
  0x000000011262057e: nop
  0x000000011262057f: callq  0x0000000112553020  ; OopMap{[240]=Oop off=7044}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x0000000112620584: mov    0xf0(%rsp),%rax
  0x000000011262058c: jmpq   0x0000000112620a26
  0x0000000112620591: mov    %rdi,0x8(%rsp)
  0x0000000112620596: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262059e: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=7075}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x00000001126205a3: jmpq   0x000000011261ea41
  0x00000001126205a8: callq  0x00000001126095c0  ; OopMap{rsi=Oop off=7085}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000001126205ad: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=7090}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000001126205b2: mov    %r9,(%rsp)
  0x00000001126205b6: callq  0x000000011260c300  ; OopMap{r9=Oop off=7099}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x00000001126205bb: callq  0x00000001126072c0  ; OopMap{r9=Oop r8=Oop off=7104}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x00000001126205c0: callq  0x00000001126072c0  ; OopMap{r9=Oop r8=Oop off=7109}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x00000001126205c5: callq  0x0000000112609820  ; OopMap{r9=Oop r8=Oop off=7114}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x00000001126205ca: jmpq   0x000000011261ed7c
  0x00000001126205cf: callq  0x0000000112609820  ; OopMap{r9=Oop r8=Oop off=7124}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x00000001126205d4: jmpq   0x000000011261ee17
  0x00000001126205d9: callq  0x0000000112609820  ; OopMap{r9=Oop off=7134}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x00000001126205de: jmpq   0x000000011261eed0
  0x00000001126205e3: callq  0x0000000112609820  ; OopMap{r9=Oop r8=Oop off=7144}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x00000001126205e8: jmpq   0x000000011261ef4d
  0x00000001126205ed: callq  0x00000001126095c0  ; OopMap{r9=Oop rdx=Oop [128]=Oop off=7154}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x00000001126205f2: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7159}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000001126205f7: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7164}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000001126205fc: mov    %rsi,(%rsp)
  0x0000000112620600: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7173}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000112620605: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7178}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000011262060a: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000011262060f: mov    %rdx,(%rsp)
  0x0000000112620613: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7192}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000112620618: mov    %rdx,0x8(%rsp)
  0x000000011262061d: movq   $0x83,(%rsp)
  0x0000000112620625: callq  0x000000011260aea0  ; OopMap{rbx=Oop rdi=Oop off=7210}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x000000011262062a: jmpq   0x000000011261f084
  0x000000011262062f: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7220}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000112620634: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7225}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000112620639: mov    %rsi,(%rsp)
  0x000000011262063d: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000112620642: mov    %rcx,(%rsp)
  0x0000000112620646: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7243}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x000000011262064b: mov    %rcx,(%rsp)
  0x000000011262064f: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7252}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x0000000112620654: mov    %r9,(%rsp)
  0x0000000112620658: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7261}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x000000011262065d: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7266}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000112620662: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7271}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000112620667: mov    %r8,(%rsp)
  0x000000011262066b: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7280}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000112620670: mov    %rdx,0x8(%rsp)
  0x0000000112620675: movq   $0x1ca,(%rsp)
  0x000000011262067d: callq  0x000000011260aea0  ; OopMap{rbx=Oop rdi=Oop off=7298}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x0000000112620682: jmpq   0x000000011261f376
  0x0000000112620687: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7308}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000011262068c: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7313}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000112620691: mov    %r8,(%rsp)
  0x0000000112620695: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000011262069a: mov    %rdx,0x8(%rsp)
  0x000000011262069f: movq   $0x14d,(%rsp)
  0x00000001126206a7: callq  0x000000011260aea0  ; OopMap{rbx=Oop rdi=Oop off=7340}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x00000001126206ac: jmpq   0x000000011261f3ea
  0x00000001126206b1: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7350}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000001126206b6: callq  0x00000001126072c0  ; OopMap{rbx=Oop rdi=Oop off=7355}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000001126206bb: mov    %r8,(%rsp)
  0x00000001126206bf: callq  0x0000000112606c00  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000001126206c4: mov    %rdx,0x8(%rsp)
  0x00000001126206c9: movq   $0xf1,(%rsp)
  0x00000001126206d1: callq  0x000000011260aea0  ; OopMap{rbx=Oop rdi=Oop off=7382}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x00000001126206d6: jmpq   0x000000011261f459
  0x00000001126206db: mov    %rdx,%rdx
  0x00000001126206de: callq  0x0000000112607a20  ; OopMap{rbx=Oop off=7395}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x00000001126206e3: jmpq   0x000000011261f4c4
  0x00000001126206e8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126206f2: mov    $0xa050f00,%eax
  0x00000001126206f7: callq  0x00000001126082e0  ; OopMap{off=7420}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x00000001126206fc: jmpq   0x000000011261f510
  0x0000000112620701: mov    %rdx,%rdx
  0x0000000112620704: callq  0x0000000112607760  ; OopMap{off=7433}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000000112620709: jmpq   0x000000011261f51f
  0x000000011262070e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112620718: mov    $0xa050f00,%eax
  0x000000011262071d: callq  0x00000001126082e0  ; OopMap{rax=Oop off=7458}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x0000000112620722: jmpq   0x000000011261f520
  0x0000000112620727: mov    %rdx,%rdx
  0x000000011262072a: callq  0x0000000112607a20  ; OopMap{[160]=Oop off=7471}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000000011262072f: jmpq   0x000000011261f569
  0x0000000112620734: mov    %rbx,0x8(%rsp)
  0x0000000112620739: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620741: callq  0x000000011260aea0  ; OopMap{[160]=Oop rax=Oop off=7494}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000112620746: jmpq   0x000000011261f5b0
  0x000000011262074b: mov    %rbx,0x8(%rsp)
  0x0000000112620750: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620758: callq  0x000000011260aea0  ; OopMap{[160]=Oop rax=Oop off=7517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011262075d: jmpq   0x000000011261f5f7
  0x0000000112620762: mov    %rbx,0x8(%rsp)
  0x0000000112620767: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262076f: callq  0x000000011260aea0  ; OopMap{[160]=Oop rax=Oop off=7540}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000112620774: jmpq   0x000000011261f63e
  0x0000000112620779: callq  0x0000000112609820  ; OopMap{[160]=Oop r11=Oop off=7550}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011262077e: jmpq   0x000000011261f6bd
  0x0000000112620783: mov    %rdx,0x8(%rsp)
  0x0000000112620788: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620790: callq  0x000000011260aea0  ; OopMap{[160]=Oop r11=Oop off=7573}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x0000000112620795: jmpq   0x000000011261f79f
  0x000000011262079a: mov    %rdx,0x8(%rsp)
  0x000000011262079f: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126207a7: callq  0x000000011260aea0  ; OopMap{[144]=Oop [160]=Oop off=7596}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x00000001126207ac: jmpq   0x000000011261f89b
  0x00000001126207b1: mov    %rdx,0x8(%rsp)
  0x00000001126207b6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126207be: callq  0x000000011260aea0  ; OopMap{[144]=Oop [160]=Oop off=7619}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000001126207c3: jmpq   0x000000011261f993
  0x00000001126207c8: mov    %rdx,%rdx
  0x00000001126207cb: callq  0x0000000112607a20  ; OopMap{[144]=Oop [160]=Oop off=7632}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000001126207d0: jmpq   0x000000011261f9d4
  0x00000001126207d5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126207df: mov    $0xa050f00,%eax
  0x00000001126207e4: callq  0x00000001126082e0  ; OopMap{off=7657}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000001126207e9: jmpq   0x000000011261fa58
  0x00000001126207ee: mov    %rdx,%rdx
  0x00000001126207f1: callq  0x0000000112607760  ; OopMap{off=7670}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000001126207f6: jmpq   0x000000011261fa67
  0x00000001126207fb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112620805: mov    $0xa050f00,%eax
  0x000000011262080a: callq  0x00000001126082e0  ; OopMap{rax=Oop off=7695}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000011262080f: jmpq   0x000000011261fa68
  0x0000000112620814: mov    %rdx,%rdx
  0x0000000112620817: callq  0x0000000112607a20  ; OopMap{[184]=Oop off=7708}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000011262081c: jmpq   0x000000011261fab1
  0x0000000112620821: mov    %rbx,0x8(%rsp)
  0x0000000112620826: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262082e: callq  0x000000011260aea0  ; OopMap{[184]=Oop rax=Oop off=7731}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000112620833: jmpq   0x000000011261faf8
  0x0000000112620838: mov    %rbx,0x8(%rsp)
  0x000000011262083d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620845: callq  0x000000011260aea0  ; OopMap{[184]=Oop rax=Oop off=7754}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011262084a: jmpq   0x000000011261fb3f
  0x000000011262084f: mov    %rbx,0x8(%rsp)
  0x0000000112620854: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262085c: callq  0x000000011260aea0  ; OopMap{[184]=Oop rax=Oop off=7777}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000112620861: jmpq   0x000000011261fb86
  0x0000000112620866: callq  0x0000000112609820  ; OopMap{[184]=Oop r13=Oop off=7787}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011262086b: jmpq   0x000000011261fc05
  0x0000000112620870: mov    %rdx,0x8(%rsp)
  0x0000000112620875: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262087d: callq  0x000000011260aea0  ; OopMap{[184]=Oop r13=Oop off=7810}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x0000000112620882: jmpq   0x000000011261fce7
  0x0000000112620887: mov    %rdx,0x8(%rsp)
  0x000000011262088c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620894: callq  0x000000011260aea0  ; OopMap{[176]=Oop [184]=Oop off=7833}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x0000000112620899: jmpq   0x000000011261fde3
  0x000000011262089e: mov    %rdx,0x8(%rsp)
  0x00000001126208a3: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126208ab: callq  0x000000011260aea0  ; OopMap{[176]=Oop [184]=Oop off=7856}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000001126208b0: jmpq   0x000000011261fedb
  0x00000001126208b5: mov    %rdx,%rdx
  0x00000001126208b8: callq  0x0000000112607a20  ; OopMap{[176]=Oop [184]=Oop off=7869}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000001126208bd: jmpq   0x000000011261ff1c
  0x00000001126208c2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126208cc: mov    $0xa050f00,%eax
  0x00000001126208d1: callq  0x00000001126082e0  ; OopMap{off=7894}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000001126208d6: jmpq   0x000000011261ffa0
  0x00000001126208db: mov    %rdx,%rdx
  0x00000001126208de: callq  0x0000000112607760  ; OopMap{off=7907}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000001126208e3: jmpq   0x000000011261ffaf
  0x00000001126208e8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126208f2: mov    $0xa050f00,%eax
  0x00000001126208f7: callq  0x00000001126082e0  ; OopMap{off=7932}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x00000001126208fc: jmpq   0x000000011261fff8
  0x0000000112620901: mov    %rdx,%rdx
  0x0000000112620904: callq  0x0000000112607760  ; OopMap{off=7945}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000000112620909: jmpq   0x0000000112620007
  0x000000011262090e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112620918: mov    $0xa050f00,%eax
  0x000000011262091d: callq  0x00000001126082e0  ; OopMap{rax=Oop off=7970}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x0000000112620922: jmpq   0x0000000112620008
  0x0000000112620927: mov    %rdx,%rdx
  0x000000011262092a: callq  0x0000000112607a20  ; OopMap{[224]=Oop off=7983}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000000011262092f: jmpq   0x0000000112620051
  0x0000000112620934: mov    %rbx,0x8(%rsp)
  0x0000000112620939: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620941: callq  0x000000011260aea0  ; OopMap{[224]=Oop rax=Oop off=8006}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000112620946: jmpq   0x0000000112620098
  0x000000011262094b: mov    %rbx,0x8(%rsp)
  0x0000000112620950: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620958: callq  0x000000011260aea0  ; OopMap{[224]=Oop rax=Oop off=8029}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011262095d: jmpq   0x00000001126200df
  0x0000000112620962: mov    %rbx,0x8(%rsp)
  0x0000000112620967: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262096f: callq  0x000000011260aea0  ; OopMap{[224]=Oop rax=Oop off=8052}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000112620974: jmpq   0x0000000112620126
  0x0000000112620979: callq  0x0000000112609820  ; OopMap{[224]=Oop r11=Oop off=8062}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011262097e: jmpq   0x00000001126201a5
  0x0000000112620983: mov    %rdx,0x8(%rsp)
  0x0000000112620988: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112620990: callq  0x000000011260aea0  ; OopMap{[224]=Oop r11=Oop off=8085}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x0000000112620995: jmpq   0x0000000112620287
  0x000000011262099a: mov    %rdx,0x8(%rsp)
  0x000000011262099f: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126209a7: callq  0x000000011260aea0  ; OopMap{[208]=Oop [224]=Oop off=8108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x00000001126209ac: jmpq   0x0000000112620383
  0x00000001126209b1: mov    %rdx,0x8(%rsp)
  0x00000001126209b6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126209be: callq  0x000000011260aea0  ; OopMap{[208]=Oop [224]=Oop off=8131}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000001126209c3: jmpq   0x000000011262047b
  0x00000001126209c8: mov    %rdx,%rdx
  0x00000001126209cb: callq  0x0000000112607a20  ; OopMap{[208]=Oop [224]=Oop off=8144}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000001126209d0: jmpq   0x00000001126204bc
  0x00000001126209d5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126209df: mov    $0xa050f00,%eax
  0x00000001126209e4: callq  0x00000001126082e0  ; OopMap{off=8169}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000001126209e9: jmpq   0x0000000112620540
  0x00000001126209ee: mov    %rdx,%rdx
  0x00000001126209f1: callq  0x0000000112607760  ; OopMap{off=8182}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000001126209f6: jmpq   0x000000011262054f
  0x00000001126209fb: nop
  0x00000001126209fc: nop
  0x00000001126209fd: mov    0x2a8(%r15),%rax
  0x0000000112620a04: movabs $0x0,%r10
  0x0000000112620a0e: mov    %r10,0x2a8(%r15)
  0x0000000112620a15: movabs $0x0,%r10
  0x0000000112620a1f: mov    %r10,0x2b0(%r15)
  0x0000000112620a26: add    $0x100,%rsp
  0x0000000112620a2d: pop    %rbp
  0x0000000112620a2e: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112620a33: hlt    
  0x0000000112620a34: hlt    
  0x0000000112620a35: hlt    
  0x0000000112620a36: hlt    
  0x0000000112620a37: hlt    
  0x0000000112620a38: hlt    
  0x0000000112620a39: hlt    
  0x0000000112620a3a: hlt    
  0x0000000112620a3b: hlt    
  0x0000000112620a3c: hlt    
  0x0000000112620a3d: hlt    
  0x0000000112620a3e: hlt    
  0x0000000112620a3f: hlt    
[Stub Code]
  0x0000000112620a40: nop                       ;   {no_reloc}
  0x0000000112620a41: nop
  0x0000000112620a42: nop
  0x0000000112620a43: nop
  0x0000000112620a44: nop
  0x0000000112620a45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a4f: jmpq   0x0000000112620a4f  ;   {runtime_call}
  0x0000000112620a54: nop
  0x0000000112620a55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a5f: jmpq   0x0000000112620a5f  ;   {runtime_call}
  0x0000000112620a64: nop
  0x0000000112620a65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a6f: jmpq   0x0000000112620a6f  ;   {runtime_call}
  0x0000000112620a74: nop
  0x0000000112620a75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a7f: jmpq   0x0000000112620a7f  ;   {runtime_call}
  0x0000000112620a84: nop
  0x0000000112620a85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a8f: jmpq   0x0000000112620a8f  ;   {runtime_call}
  0x0000000112620a94: nop
  0x0000000112620a95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620a9f: jmpq   0x0000000112620a9f  ;   {runtime_call}
  0x0000000112620aa4: nop
  0x0000000112620aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620aaf: jmpq   0x0000000112620aaf  ;   {runtime_call}
  0x0000000112620ab4: nop
  0x0000000112620ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620abf: jmpq   0x0000000112620abf  ;   {runtime_call}
  0x0000000112620ac4: nop
  0x0000000112620ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620acf: jmpq   0x0000000112620acf  ;   {runtime_call}
  0x0000000112620ad4: nop
  0x0000000112620ad5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620adf: jmpq   0x0000000112620adf  ;   {runtime_call}
  0x0000000112620ae4: nop
  0x0000000112620ae5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620aef: jmpq   0x0000000112620aef  ;   {runtime_call}
  0x0000000112620af4: nop
  0x0000000112620af5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620aff: jmpq   0x0000000112620aff  ;   {runtime_call}
  0x0000000112620b04: nop
  0x0000000112620b05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620b0f: jmpq   0x0000000112620b0f  ;   {runtime_call}
  0x0000000112620b14: nop
  0x0000000112620b15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620b1f: jmpq   0x0000000112620b1f  ;   {runtime_call}
  0x0000000112620b24: nop
  0x0000000112620b25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620b2f: jmpq   0x0000000112620b2f  ;   {runtime_call}
  0x0000000112620b34: nop
  0x0000000112620b35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620b3f: jmpq   0x0000000112620b3f  ;   {runtime_call}
  0x0000000112620b44: nop
  0x0000000112620b45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112620b4f: jmpq   0x0000000112620b4f  ;   {runtime_call}
[Exception Handler]
  0x0000000112620b54: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112620b59: mov    %rsp,-0x28(%rsp)
  0x0000000112620b5e: sub    $0x80,%rsp
  0x0000000112620b65: mov    %rax,0x78(%rsp)
  0x0000000112620b6a: mov    %rcx,0x70(%rsp)
  0x0000000112620b6f: mov    %rdx,0x68(%rsp)
  0x0000000112620b74: mov    %rbx,0x60(%rsp)
  0x0000000112620b79: mov    %rbp,0x50(%rsp)
  0x0000000112620b7e: mov    %rsi,0x48(%rsp)
  0x0000000112620b83: mov    %rdi,0x40(%rsp)
  0x0000000112620b88: mov    %r8,0x38(%rsp)
  0x0000000112620b8d: mov    %r9,0x30(%rsp)
  0x0000000112620b92: mov    %r10,0x28(%rsp)
  0x0000000112620b97: mov    %r11,0x20(%rsp)
  0x0000000112620b9c: mov    %r12,0x18(%rsp)
  0x0000000112620ba1: mov    %r13,0x10(%rsp)
  0x0000000112620ba6: mov    %r14,0x8(%rsp)
  0x0000000112620bab: mov    %r15,(%rsp)
  0x0000000112620baf: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112620bb9: movabs $0x112620b59,%rsi  ;   {internal_word}
  0x0000000112620bc3: mov    %rsp,%rdx
  0x0000000112620bc6: and    $0xfffffffffffffff0,%rsp
  0x0000000112620bca: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112620bcf: hlt    
[Deopt Handler Code]
  0x0000000112620bd0: movabs $0x112620bd0,%r10  ;   {section_word}
  0x0000000112620bda: push   %r10
  0x0000000112620bdc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112620be1: hlt    
  0x0000000112620be2: hlt    
  0x0000000112620be3: hlt    
  0x0000000112620be4: hlt    
  0x0000000112620be5: hlt    
  0x0000000112620be6: hlt    
  0x0000000112620be7: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x000000011261ea00' size='15216' address='0x000000011261e610' relocation_offset='296' insts_offset='1008' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='591' backedge_count='8454' iicount='591' stamp='0.174'/>
<writer thread='7171'/>
<task_queued compile_id='25' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='512' iicount='512' level='3' stamp='0.174' comment='tiered' hot_count='512'/>
[Loaded sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112622190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000112622340: mov    0x8(%rsi),%r10d
  0x0000000112622344: shl    $0x3,%r10
  0x0000000112622348: cmp    %rax,%r10
  0x000000011262234b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112622351: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262235c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112622360: mov    %eax,-0x14000(%rsp)
  0x0000000112622367: push   %rbp
  0x0000000112622368: sub    $0x70,%rsp
  0x000000011262236c: mov    %rsi,0x38(%rsp)
  0x0000000112622371: mov    %rdx,0x48(%rsp)
  0x0000000112622376: mov    %ecx,0x40(%rsp)
  0x000000011262237a: mov    %r8d,0x34(%rsp)
  0x000000011262237f: movabs $0x129f3d298,%rdi  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112622389: mov    0xdc(%rdi),%ebx
  0x000000011262238f: add    $0x8,%ebx
  0x0000000112622392: mov    %ebx,0xdc(%rdi)
  0x0000000112622398: movabs $0x129f3afd8,%rdi  ;   {metadata({method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126223a2: and    $0x1ff8,%ebx
  0x00000001126223a8: cmp    $0x0,%ebx
  0x00000001126223ab: je     0x0000000112622626  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x00000001126223b1: cmp    $0x0,%r8d
  0x00000001126223b5: movabs $0x129f3d298,%rdi  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126223bf: movabs $0x108,%rbx
  0x00000001126223c9: jge    0x00000001126223d9
  0x00000001126223cf: movabs $0x118,%rbx
  0x00000001126223d9: mov    (%rdi,%rbx,1),%rax
  0x00000001126223dd: lea    0x1(%rax),%rax
  0x00000001126223e1: mov    %rax,(%rdi,%rbx,1)
  0x00000001126223e5: jl     0x00000001126225e6  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x00000001126223eb: mov    $0x0,%edi
  0x00000001126223f0: jmpq   0x000000011262255f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x00000001126223f5: data32 xchg %ax,%ax
  0x00000001126223f8: mov    0xc(%rsi),%ebx
  0x00000001126223fb: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x00000001126223ff: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000011262263d
  0x0000000112622402: mov    %rbx,%rax
  0x0000000112622405: movabs $0x129f3d298,%r9   ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262240f: mov    0x8(%rax),%eax
  0x0000000112622412: shl    $0x3,%rax
  0x0000000112622416: cmp    0x160(%r9),%rax
  0x000000011262241d: jne    0x000000011262242c
  0x000000011262241f: addq   $0x1,0x168(%r9)
  0x0000000112622427: jmpq   0x0000000112622492
  0x000000011262242c: cmp    0x170(%r9),%rax
  0x0000000112622433: jne    0x0000000112622442
  0x0000000112622435: addq   $0x1,0x178(%r9)
  0x000000011262243d: jmpq   0x0000000112622492
  0x0000000112622442: cmpq   $0x0,0x160(%r9)
  0x000000011262244d: jne    0x0000000112622466
  0x000000011262244f: mov    %rax,0x160(%r9)
  0x0000000112622456: movq   $0x1,0x168(%r9)
  0x0000000112622461: jmpq   0x0000000112622492
  0x0000000112622466: cmpq   $0x0,0x170(%r9)
  0x0000000112622471: jne    0x000000011262248a
  0x0000000112622473: mov    %rax,0x170(%r9)
  0x000000011262247a: movq   $0x1,0x178(%r9)
  0x0000000112622485: jmpq   0x0000000112622492
  0x000000011262248a: addq   $0x1,0x158(%r9)
  0x0000000112622492: mov    %rdi,%rax
  0x0000000112622495: add    %ecx,%eax
  0x0000000112622497: mov    %r8,%r9
  0x000000011262249a: sub    %edi,%r9d
  0x000000011262249d: mov    %rdx,%r11
  0x00000001126224a0: mov    %r11,%rdx
  0x00000001126224a3: mov    %rax,%rcx
  0x00000001126224a6: mov    %r9,%r8
  0x00000001126224a9: mov    %rbx,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x00000001126224ac: mov    %edi,0x30(%rsp)
  0x00000001126224b0: nop
  0x00000001126224b1: nop
  0x00000001126224b2: nop
  0x00000001126224b3: nop
  0x00000001126224b4: nop
  0x00000001126224b5: movabs $0xffffffffffffffff,%rax
  0x00000001126224bf: callq  0x0000000112553220  ; OopMap{[72]=Oop [56]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x00000001126224c4: cmp    $0x0,%eax
  0x00000001126224c7: movabs $0x129f3d298,%rdx  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126224d1: movabs $0x188,%rsi
  0x00000001126224db: jge    0x00000001126224eb
  0x00000001126224e1: movabs $0x198,%rsi
  0x00000001126224eb: mov    (%rdx,%rsi,1),%rdi
  0x00000001126224ef: lea    0x1(%rdi),%rdi
  0x00000001126224f3: mov    %rdi,(%rdx,%rsi,1)
  0x00000001126224f7: jl     0x00000001126225a4  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x00000001126224fd: add    0x30(%rsp),%eax
  0x0000000112622501: movabs $0x129f3d298,%rdx  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262250b: mov    0xe0(%rdx),%esi
  0x0000000112622511: add    $0x8,%esi
  0x0000000112622514: mov    %esi,0xe0(%rdx)
  0x000000011262251a: movabs $0x129f3afd8,%rdx  ;   {metadata({method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112622524: and    $0xfff8,%esi
  0x000000011262252a: cmp    $0x0,%esi
  0x000000011262252d: je     0x0000000112622642  ; OopMap{[72]=Oop [56]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x0000000112622533: test   %eax,-0x33d2439(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112622539: movabs $0x129f3d298,%rdx  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112622543: incl   0x1b8(%rdx)
  0x0000000112622549: mov    %rax,%rdi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000000011262254c: mov    0x34(%rsp),%r8d
  0x0000000112622551: mov    0x40(%rsp),%ecx
  0x0000000112622555: mov    0x48(%rsp),%rdx
  0x000000011262255a: mov    0x38(%rsp),%rsi
  0x000000011262255f: cmp    %r8d,%edi
  0x0000000112622562: movabs $0x129f3d298,%rbx  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262256c: movabs $0x138,%rax
  0x0000000112622576: jge    0x0000000112622586
  0x000000011262257c: movabs $0x148,%rax
  0x0000000112622586: mov    (%rbx,%rax,1),%r9
  0x000000011262258a: lea    0x1(%r9),%r9
  0x000000011262258e: mov    %r9,(%rbx,%rax,1)
  0x0000000112622592: jl     0x00000001126223f8  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x0000000112622598: add    $0x70,%rsp
  0x000000011262259c: pop    %rbp
  0x000000011262259d: test   %eax,-0x33d24a3(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126225a3: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x00000001126225a4: nopl   0x0(%rax)
  0x00000001126225a8: jmpq   0x0000000112622668  ;   {no_reloc}
  0x00000001126225ad: add    %al,(%rax)
  0x00000001126225af: add    %al,(%rax)
  0x00000001126225b1: add    %ch,%cl
  0x00000001126225b3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x00000001126225b8: mov    %eax,%esi
  0x00000001126225ba: movabs $0x129f3d298,%rdi  ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126225c4: addq   $0x1,0x1a8(%rdi)
  0x00000001126225cc: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x00000001126225cf: mov    %rax,0x50(%rsp)
  0x00000001126225d4: nop
  0x00000001126225d5: nop
  0x00000001126225d6: nop
  0x00000001126225d7: callq  0x0000000112553020  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x00000001126225dc: mov    0x50(%rsp),%rax
  0x00000001126225e1: jmpq   0x00000001126226d0  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x00000001126225e6: xchg   %ax,%ax
  0x00000001126225e8: jmpq   0x000000011262268e  ;   {no_reloc}
  0x00000001126225ed: add    %al,(%rax)
  0x00000001126225ef: add    %al,(%rax)
  0x00000001126225f1: add    %ch,%cl
  0x00000001126225f3: movabs 0xbf48f08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x0000000129f3afd8} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126225fc: cwtl   
  0x00000001126225fd: (bad)  
  0x00000001126225fe: repz sub %eax,(%rcx)
  0x0000000112622601: add    %al,(%rax)
  0x0000000112622603: add    %cl,-0x7d(%rax)
  0x0000000112622606: xchg   %ebp,(%rax)
  0x0000000112622608: add    %eax,(%rax)
  0x000000011262260a: add    %al,(%rcx)
  0x000000011262260c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x000000011262260f: mov    %rax,0x58(%rsp)
  0x0000000112622614: nop
  0x0000000112622615: nop
  0x0000000112622616: nop
  0x0000000112622617: callq  0x0000000112553020  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011262261c: mov    0x58(%rsp),%rax
  0x0000000112622621: jmpq   0x00000001126226d0
  0x0000000112622626: mov    %rdi,0x8(%rsp)
  0x000000011262262b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112622633: callq  0x000000011260aea0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x0000000112622638: jmpq   0x00000001126223b1
  0x000000011262263d: callq  0x00000001126072c0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x0000000112622642: mov    %rdx,0x8(%rsp)
  0x0000000112622647: movq   $0x3b,(%rsp)
  0x000000011262264f: callq  0x000000011260aea0  ; OopMap{[72]=Oop [56]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x0000000112622654: jmpq   0x0000000112622533
  0x0000000112622659: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112622663: mov    $0xa050f00,%eax
  0x0000000112622668: callq  0x00000001126082e0  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000011262266d: jmpq   0x00000001126225a8
  0x0000000112622672: mov    %rdx,%rdx
  0x0000000112622675: callq  0x0000000112607760  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000011262267a: jmpq   0x00000001126225b7
  0x000000011262267f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112622689: mov    $0xa050f00,%eax
  0x000000011262268e: callq  0x00000001126082e0  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x0000000112622693: jmpq   0x00000001126225e8
  0x0000000112622698: mov    %rdx,%rdx
  0x000000011262269b: callq  0x0000000112607760  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x00000001126226a0: jmpq   0x00000001126225f7
  0x00000001126226a5: nop
  0x00000001126226a6: nop
  0x00000001126226a7: mov    0x2a8(%r15),%rax
  0x00000001126226ae: movabs $0x0,%r10
  0x00000001126226b8: mov    %r10,0x2a8(%r15)
  0x00000001126226bf: movabs $0x0,%r10
  0x00000001126226c9: mov    %r10,0x2b0(%r15)
  0x00000001126226d0: add    $0x70,%rsp
  0x00000001126226d4: pop    %rbp
  0x00000001126226d5: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126226da: hlt    
  0x00000001126226db: hlt    
  0x00000001126226dc: hlt    
  0x00000001126226dd: hlt    
  0x00000001126226de: hlt    
  0x00000001126226df: hlt    
[Stub Code]
  0x00000001126226e0: nop                       ;   {no_reloc}
  0x00000001126226e1: nop
  0x00000001126226e2: nop
  0x00000001126226e3: nop
  0x00000001126226e4: nop
  0x00000001126226e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126226ef: jmpq   0x00000001126226ef  ;   {runtime_call}
  0x00000001126226f4: nop
  0x00000001126226f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126226ff: jmpq   0x00000001126226ff  ;   {runtime_call}
  0x0000000112622704: nop
  0x0000000112622705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262270f: jmpq   0x000000011262270f  ;   {runtime_call}
[Exception Handler]
  0x0000000112622714: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112622719: mov    %rsp,-0x28(%rsp)
  0x000000011262271e: sub    $0x80,%rsp
  0x0000000112622725: mov    %rax,0x78(%rsp)
  0x000000011262272a: mov    %rcx,0x70(%rsp)
  0x000000011262272f: mov    %rdx,0x68(%rsp)
  0x0000000112622734: mov    %rbx,0x60(%rsp)
  0x0000000112622739: mov    %rbp,0x50(%rsp)
  0x000000011262273e: mov    %rsi,0x48(%rsp)
  0x0000000112622743: mov    %rdi,0x40(%rsp)
  0x0000000112622748: mov    %r8,0x38(%rsp)
  0x000000011262274d: mov    %r9,0x30(%rsp)
  0x0000000112622752: mov    %r10,0x28(%rsp)
  0x0000000112622757: mov    %r11,0x20(%rsp)
  0x000000011262275c: mov    %r12,0x18(%rsp)
  0x0000000112622761: mov    %r13,0x10(%rsp)
  0x0000000112622766: mov    %r14,0x8(%rsp)
  0x000000011262276b: mov    %r15,(%rsp)
  0x000000011262276f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112622779: movabs $0x112622719,%rsi  ;   {internal_word}
  0x0000000112622783: mov    %rsp,%rdx
  0x0000000112622786: and    $0xfffffffffffffff0,%rsp
  0x000000011262278a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262278f: hlt    
[Deopt Handler Code]
  0x0000000112622790: movabs $0x112622790,%r10  ;   {section_word}
  0x000000011262279a: push   %r10
  0x000000011262279c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126227a1: hlt    
  0x00000001126227a2: hlt    
  0x00000001126227a3: hlt    
  0x00000001126227a4: hlt    
  0x00000001126227a5: hlt    
  0x00000001126227a6: hlt    
  0x00000001126227a7: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000112622340' size='2232' address='0x0000000112622190' relocation_offset='296' insts_offset='432' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2208' nul_chk_table_offset='2216' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='974' backedge_count='974' iicount='974' stamp='0.177'/>
<writer thread='7171'/>
[Loaded java.util.zip.Checksum from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.CRC32 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.ZoneInfoFile$Checksum from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TimeZone$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.CalendarDate from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.BaseCalendar$Date from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.calendar.Gregorian$Date from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112622e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000112623080: mov    0x8(%rsi),%r10d
  0x0000000112623084: shl    $0x3,%r10
  0x0000000112623088: cmp    %rax,%r10
  0x000000011262308b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112623091: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262309c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001126230a0: mov    %eax,-0x14000(%rsp)
  0x00000001126230a7: push   %rbp
  0x00000001126230a8: sub    $0xa0,%rsp
  0x00000001126230af: mov    %rsi,0x58(%rsp)
  0x00000001126230b4: mov    %rdx,0x68(%rsp)
  0x00000001126230b9: mov    %ecx,0x60(%rsp)
  0x00000001126230bd: mov    %r8d,0x54(%rsp)
  0x00000001126230c2: lea    0x80(%rsp),%rdi
  0x00000001126230ca: mov    %rsi,0x8(%rdi)
  0x00000001126230ce: mov    (%rsi),%rax
  0x00000001126230d1: mov    %rax,%rbx
  0x00000001126230d4: and    $0x7,%rbx
  0x00000001126230d8: cmp    $0x5,%rbx
  0x00000001126230dc: jne    0x0000000112623163
  0x00000001126230e2: mov    0x8(%rsi),%ebx
  0x00000001126230e5: shl    $0x3,%rbx
  0x00000001126230e9: mov    0xa8(%rbx),%rbx
  0x00000001126230f0: or     %r15,%rbx
  0x00000001126230f3: xor    %rax,%rbx
  0x00000001126230f6: and    $0xffffffffffffff87,%rbx
  0x00000001126230fa: je     0x000000011262318b
  0x0000000112623100: test   $0x7,%rbx
  0x0000000112623107: jne    0x0000000112623150
  0x0000000112623109: test   $0x300,%rbx
  0x0000000112623110: jne    0x000000011262312f
  0x0000000112623112: and    $0x37f,%rax
  0x0000000112623119: mov    %rax,%rbx
  0x000000011262311c: or     %r15,%rbx
  0x000000011262311f: lock cmpxchg %rbx,(%rsi)
  0x0000000112623124: jne    0x0000000112623716
  0x000000011262312a: jmpq   0x000000011262318b
  0x000000011262312f: mov    0x8(%rsi),%ebx
  0x0000000112623132: shl    $0x3,%rbx
  0x0000000112623136: mov    0xa8(%rbx),%rbx
  0x000000011262313d: or     %r15,%rbx
  0x0000000112623140: lock cmpxchg %rbx,(%rsi)
  0x0000000112623145: jne    0x0000000112623716
  0x000000011262314b: jmpq   0x000000011262318b
  0x0000000112623150: mov    0x8(%rsi),%ebx
  0x0000000112623153: shl    $0x3,%rbx
  0x0000000112623157: mov    0xa8(%rbx),%rbx
  0x000000011262315e: lock cmpxchg %rbx,(%rsi)
  0x0000000112623163: mov    (%rsi),%rax
  0x0000000112623166: or     $0x1,%rax
  0x000000011262316a: mov    %rax,(%rdi)
  0x000000011262316d: lock cmpxchg %rdi,(%rsi)
  0x0000000112623172: je     0x000000011262318b
  0x0000000112623178: sub    %rsp,%rax
  0x000000011262317b: and    $0xfffffffffffff007,%rax
  0x0000000112623182: mov    %rax,(%rdi)
  0x0000000112623185: jne    0x0000000112623716
  0x000000011262318b: movabs $0x129f3d618,%rdi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623195: mov    0xdc(%rdi),%ebx
  0x000000011262319b: add    $0x8,%ebx
  0x000000011262319e: mov    %ebx,0xdc(%rdi)
  0x00000001126231a4: movabs $0x129e474c8,%rdi  ;   {metadata({method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126231ae: and    $0x1ff8,%ebx
  0x00000001126231b4: cmp    $0x0,%ebx
  0x00000001126231b7: je     0x0000000112623729  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 336)

  0x00000001126231bd: mov    %rsi,%rdi
  0x00000001126231c0: movabs $0x129f3d618,%rbx  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126231ca: addq   $0x1,0x108(%rbx)
  0x00000001126231d2: movabs $0x129f3c340,%rdi  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126231dc: mov    0xdc(%rdi),%ebx
  0x00000001126231e2: add    $0x8,%ebx
  0x00000001126231e5: mov    %ebx,0xdc(%rdi)
  0x00000001126231eb: movabs $0x129e46ef8,%rdi  ;   {metadata({method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126231f5: and    $0x7ffff8,%ebx
  0x00000001126231fb: cmp    $0x0,%ebx
  0x00000001126231fe: je     0x0000000112623740
  0x0000000112623204: mov    0x20(%rsi),%edi
  0x0000000112623207: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000011262320b: cmp    $0x0,%rdi
  0x000000011262320f: movabs $0x129f3c340,%rdi  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623219: movabs $0x108,%rbx
  0x0000000112623223: jne    0x0000000112623233
  0x0000000112623229: movabs $0x118,%rbx
  0x0000000112623233: mov    (%rdi,%rbx,1),%rax
  0x0000000112623237: lea    0x1(%rax),%rax
  0x000000011262323b: mov    %rax,(%rdi,%rbx,1)
  0x000000011262323f: je     0x00000001126236ce  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000112623245: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ; implicit exception: dispatches to 0x0000000112623757
  0x0000000112623248: mov    %rcx,%rbx
  0x000000011262324b: or     %r8,%rbx
  0x000000011262324e: mov    %rcx,%rax
  0x0000000112623251: add    %r8d,%eax
  0x0000000112623254: or     %rax,%rbx
  0x0000000112623257: sub    %eax,%edi
  0x0000000112623259: or     %rdi,%rbx
  0x000000011262325c: cmp    $0x0,%ebx
  0x000000011262325f: movabs $0x129f3d618,%rdi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623269: movabs $0x118,%rbx
  0x0000000112623273: jge    0x0000000112623283
  0x0000000112623279: movabs $0x128,%rbx
  0x0000000112623283: mov    (%rdi,%rbx,1),%rax
  0x0000000112623287: lea    0x1(%rax),%rax
  0x000000011262328b: mov    %rax,(%rdi,%rbx,1)
  0x000000011262328f: jl     0x000000011262368f  ;*ifge
                                                ; - java.io.BufferedInputStream::read@19 (line 337)

  0x0000000112623295: cmp    $0x0,%r8d
  0x0000000112623299: movabs $0x129f3d618,%rdi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126232a3: movabs $0x148,%rbx
  0x00000001126232ad: jne    0x00000001126232bd
  0x00000001126232b3: movabs $0x158,%rbx
  0x00000001126232bd: mov    (%rdi,%rbx,1),%rax
  0x00000001126232c1: lea    0x1(%rax),%rax
  0x00000001126232c5: mov    %rax,(%rdi,%rbx,1)
  0x00000001126232c9: je     0x0000000112623647  ;*ifne
                                                ; - java.io.BufferedInputStream::read@31 (line 339)

  0x00000001126232cf: mov    $0x0,%edi          ;*aload_0
                                                ; - java.io.BufferedInputStream::read@39 (line 345)

  0x00000001126232d4: nopl   0x0(%rax)
  0x00000001126232d8: mov    %rsi,%rbx
  0x00000001126232db: movabs $0x129f3d618,%rax  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126232e5: addq   $0x1,0x168(%rax)
  0x00000001126232ed: mov    %rdi,%rbx
  0x00000001126232f0: add    %ecx,%ebx
  0x00000001126232f2: mov    %r8,%rax
  0x00000001126232f5: sub    %edi,%eax
  0x00000001126232f7: mov    %rdx,%r9
  0x00000001126232fa: mov    %r9,%rdx
  0x00000001126232fd: mov    %rbx,%rcx
  0x0000000112623300: mov    %rax,%r8
  0x0000000112623303: mov    %rsi,%rax
  0x0000000112623306: mov    %rax,%rsi          ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)

  0x0000000112623309: mov    %edi,0x50(%rsp)
  0x000000011262330d: nop
  0x000000011262330e: nop
  0x000000011262330f: callq  0x0000000112553020  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=660}
                                                ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)
                                                ;   {optimized virtual_call}
  0x0000000112623314: cmp    $0x0,%eax
  0x0000000112623317: movabs $0x129f3d618,%rsi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623321: movabs $0x178,%rdi
  0x000000011262332b: jg     0x000000011262333b
  0x0000000112623331: movabs $0x188,%rdi
  0x000000011262333b: mov    (%rsi,%rdi,1),%rbx
  0x000000011262333f: lea    0x1(%rbx),%rbx
  0x0000000112623343: mov    %rbx,(%rsi,%rdi,1)
  0x0000000112623347: jle    0x0000000112623519  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@56 (line 346)

  0x000000011262334d: add    0x50(%rsp),%eax
  0x0000000112623351: cmp    0x54(%rsp),%eax
  0x0000000112623355: movabs $0x129f3d618,%rsi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262335f: movabs $0x1d0,%rdi
  0x0000000112623369: jl     0x0000000112623379
  0x000000011262336f: movabs $0x1e0,%rdi
  0x0000000112623379: mov    (%rsi,%rdi,1),%rbx
  0x000000011262337d: lea    0x1(%rbx),%rbx
  0x0000000112623381: mov    %rbx,(%rsi,%rdi,1)
  0x0000000112623385: jge    0x00000001126235fe  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@82 (line 349)

  0x000000011262338b: mov    0x58(%rsp),%rsi
  0x0000000112623390: mov    0xc(%rsi),%edi
  0x0000000112623393: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedInputStream::read@89 (line 352)

  0x0000000112623397: cmp    $0x0,%rdi
  0x000000011262339b: movabs $0x129f3d618,%rbx  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126233a5: movabs $0x1f0,%rdx
  0x00000001126233af: je     0x00000001126233bf
  0x00000001126233b5: movabs $0x200,%rdx
  0x00000001126233bf: mov    (%rbx,%rdx,1),%rcx
  0x00000001126233c3: lea    0x1(%rcx),%rcx
  0x00000001126233c7: mov    %rcx,(%rbx,%rdx,1)
  0x00000001126233cb: mov    %eax,0x64(%rsp)
  0x00000001126233cf: je     0x00000001126234b5  ;*ifnull
                                                ; - java.io.BufferedInputStream::read@96 (line 353)

  0x00000001126233d5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011262375c
  0x00000001126233d8: mov    %rdi,%rbx
  0x00000001126233db: movabs $0x129f3d618,%rdx  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126233e5: mov    0x8(%rbx),%ebx
  0x00000001126233e8: shl    $0x3,%rbx
  0x00000001126233ec: cmp    0x218(%rdx),%rbx
  0x00000001126233f3: jne    0x0000000112623402
  0x00000001126233f5: addq   $0x1,0x220(%rdx)
  0x00000001126233fd: jmpq   0x0000000112623468
  0x0000000112623402: cmp    0x228(%rdx),%rbx
  0x0000000112623409: jne    0x0000000112623418
  0x000000011262340b: addq   $0x1,0x230(%rdx)
  0x0000000112623413: jmpq   0x0000000112623468
  0x0000000112623418: cmpq   $0x0,0x218(%rdx)
  0x0000000112623423: jne    0x000000011262343c
  0x0000000112623425: mov    %rbx,0x218(%rdx)
  0x000000011262342c: movq   $0x1,0x220(%rdx)
  0x0000000112623437: jmpq   0x0000000112623468
  0x000000011262343c: cmpq   $0x0,0x228(%rdx)
  0x0000000112623447: jne    0x0000000112623460
  0x0000000112623449: mov    %rbx,0x228(%rdx)
  0x0000000112623450: movq   $0x1,0x230(%rdx)
  0x000000011262345b: jmpq   0x0000000112623468
  0x0000000112623460: addq   $0x1,0x210(%rdx)
  0x0000000112623468: mov    %rdi,%rsi          ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)

  0x000000011262346b: nop
  0x000000011262346c: nop
  0x000000011262346d: movabs $0xffffffffffffffff,%rax
  0x0000000112623477: callq  0x0000000112553220  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1020}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {virtual_call}
  0x000000011262347c: cmp    $0x0,%eax
  0x000000011262347f: movabs $0x129f3d618,%rax  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623489: movabs $0x240,%rdx
  0x0000000112623493: jg     0x00000001126234a3
  0x0000000112623499: movabs $0x250,%rdx
  0x00000001126234a3: mov    (%rax,%rdx,1),%rsi
  0x00000001126234a7: lea    0x1(%rsi),%rsi
  0x00000001126234ab: mov    %rsi,(%rax,%rdx,1)
  0x00000001126234af: jle    0x00000001126235b7  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@104 (line 353)

  0x00000001126234b5: movabs $0x129f3d618,%rax  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126234bf: mov    0xe0(%rax),%edx
  0x00000001126234c5: add    $0x8,%edx
  0x00000001126234c8: mov    %edx,0xe0(%rax)
  0x00000001126234ce: movabs $0x129e474c8,%rax  ;   {metadata({method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126234d8: and    $0xfff8,%edx
  0x00000001126234de: cmp    $0x0,%edx
  0x00000001126234e1: je     0x0000000112623761  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1127}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x00000001126234e7: test   %eax,-0x33d33ed(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x00000001126234ed: movabs $0x129f3d618,%rax  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126234f7: incl   0x260(%rax)
  0x00000001126234fd: mov    0x64(%rsp),%edi
  0x0000000112623501: mov    0x54(%rsp),%r8d
  0x0000000112623506: mov    0x60(%rsp),%ecx
  0x000000011262350a: mov    0x68(%rsp),%rdx
  0x000000011262350f: mov    0x58(%rsp),%rsi
  0x0000000112623514: jmpq   0x00000001126232d8  ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x0000000112623519: mov    0x50(%rsp),%edi
  0x000000011262351d: cmp    $0x0,%edi
  0x0000000112623520: movabs $0x129f3d618,%rdx  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262352a: movabs $0x198,%rsi
  0x0000000112623534: jne    0x0000000112623544
  0x000000011262353a: movabs $0x1a8,%rsi
  0x0000000112623544: mov    (%rdx,%rsi,1),%rbx
  0x0000000112623548: lea    0x1(%rbx),%rbx
  0x000000011262354c: mov    %rbx,(%rdx,%rsi,1)
  0x0000000112623550: jne    0x000000011262356e  ;*ifne
                                                ; - java.io.BufferedInputStream::read@61 (line 347)

  0x0000000112623556: movabs $0x129f3d618,%rdx  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112623560: incl   0x1b8(%rdx)
  0x0000000112623566: mov    %rax,%rdx
  0x0000000112623569: jmpq   0x0000000112623571  ;*goto
                                                ; - java.io.BufferedInputStream::read@66 (line 347)

  0x000000011262356e: mov    %rdi,%rdx
  0x0000000112623571: lea    0x80(%rsp),%rax
  0x0000000112623579: mov    0x8(%rax),%rdi
  0x000000011262357d: mov    (%rdi),%rsi
  0x0000000112623580: and    $0x7,%rsi
  0x0000000112623584: cmp    $0x5,%rsi
  0x0000000112623588: je     0x00000001126235a5
  0x000000011262358e: mov    (%rax),%rsi
  0x0000000112623591: test   %rsi,%rsi
  0x0000000112623594: je     0x00000001126235a5
  0x000000011262359a: lock cmpxchg %rsi,(%rdi)
  0x000000011262359f: jne    0x0000000112623778
  0x00000001126235a5: mov    %rdx,%rax
  0x00000001126235a8: add    $0xa0,%rsp
  0x00000001126235af: pop    %rbp
  0x00000001126235b0: test   %eax,-0x33d34b6(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126235b6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@71 (line 347)

  0x00000001126235b7: lea    0x80(%rsp),%rax
  0x00000001126235bf: mov    0x8(%rax),%rsi
  0x00000001126235c3: mov    (%rsi),%rdx
  0x00000001126235c6: and    $0x7,%rdx
  0x00000001126235ca: cmp    $0x5,%rdx
  0x00000001126235ce: je     0x00000001126235eb
  0x00000001126235d4: mov    (%rax),%rdx
  0x00000001126235d7: test   %rdx,%rdx
  0x00000001126235da: je     0x00000001126235eb
  0x00000001126235e0: lock cmpxchg %rdx,(%rsi)
  0x00000001126235e5: jne    0x000000011262378e
  0x00000001126235eb: mov    0x64(%rsp),%eax
  0x00000001126235ef: add    $0xa0,%rsp
  0x00000001126235f6: pop    %rbp
  0x00000001126235f7: test   %eax,-0x33d34fd(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126235fd: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@109 (line 354)

  0x00000001126235fe: mov    %rax,%rdx
  0x0000000112623601: lea    0x80(%rsp),%rax
  0x0000000112623609: mov    0x8(%rax),%rdi
  0x000000011262360d: mov    (%rdi),%rsi
  0x0000000112623610: and    $0x7,%rsi
  0x0000000112623614: cmp    $0x5,%rsi
  0x0000000112623618: je     0x0000000112623635
  0x000000011262361e: mov    (%rax),%rsi
  0x0000000112623621: test   %rsi,%rsi
  0x0000000112623624: je     0x0000000112623635
  0x000000011262362a: lock cmpxchg %rsi,(%rdi)
  0x000000011262362f: jne    0x00000001126237a4
  0x0000000112623635: mov    %rdx,%rax
  0x0000000112623638: add    $0xa0,%rsp
  0x000000011262363f: pop    %rbp
  0x0000000112623640: test   %eax,-0x33d3546(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112623646: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@87 (line 350)

  0x0000000112623647: lea    0x80(%rsp),%rax
  0x000000011262364f: mov    0x8(%rax),%rsi
  0x0000000112623653: mov    (%rsi),%rdx
  0x0000000112623656: and    $0x7,%rdx
  0x000000011262365a: cmp    $0x5,%rdx
  0x000000011262365e: je     0x000000011262367b
  0x0000000112623664: mov    (%rax),%rdx
  0x0000000112623667: test   %rdx,%rdx
  0x000000011262366a: je     0x000000011262367b
  0x0000000112623670: lock cmpxchg %rdx,(%rsi)
  0x0000000112623675: jne    0x00000001126237ba
  0x000000011262367b: mov    $0x0,%eax
  0x0000000112623680: add    $0xa0,%rsp
  0x0000000112623687: pop    %rbp
  0x0000000112623688: test   %eax,-0x33d358e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262368e: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@35 (line 340)

  0x000000011262368f: nop
  0x0000000112623690: jmpq   0x00000001126237df  ;   {no_reloc}
  0x0000000112623695: add    %al,(%rax)
  0x0000000112623697: add    %al,(%rax)
  0x0000000112623699: add    %ch,%cl
  0x000000011262369b: rex.WX add %rax,(%rax)
  0x000000011262369e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)

  0x00000001126236a1: lock movabs $0x129f3d618,%rdi  ;   {metadata(method data for {method} {0x0000000129e474c8} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126236ac: addq   $0x1,0x138(%rdi)
  0x00000001126236b4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)

  0x00000001126236b7: mov    %rax,0x70(%rsp)
  0x00000001126236bc: nop
  0x00000001126236bd: nop
  0x00000001126236be: nop
  0x00000001126236bf: callq  0x0000000112553020  ; OopMap{[112]=Oop [136]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)
                                                ;   {optimized virtual_call}
  0x00000001126236c4: mov    0x70(%rsp),%rax
  0x00000001126236c9: jmpq   0x0000000112623847  ;*athrow
                                                ; - java.io.BufferedInputStream::read@29 (line 338)

  0x00000001126236ce: xchg   %ax,%ax
  0x00000001126236d0: jmpq   0x0000000112623805  ;   {no_reloc}
  0x00000001126236d5: add    %al,(%rax)
  0x00000001126236d7: add    %al,(%rax)
  0x00000001126236d9: add    %ch,%cl
  0x00000001126236db: xor    %al,(%rcx)
  0x00000001126236dd: add    %al,(%rax)         ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x00000001126236df: mov    %rax,%rdx
  0x00000001126236e2: movabs $0x129f3c340,%rbx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126236ec: addq   $0x1,0x128(%rbx)
  0x00000001126236f4: movabs $0x76ad8f6b0,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x00000001126236fe: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000112623701: mov    %rax,0x78(%rsp)
  0x0000000112623706: nop
  0x0000000112623707: callq  0x0000000112553020  ; OopMap{[88]=Oop [120]=Oop [104]=Oop [136]=Oop off=1676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {optimized virtual_call}
  0x000000011262370c: mov    0x78(%rsp),%rax
  0x0000000112623711: jmpq   0x0000000112623847
  0x0000000112623716: mov    %rsi,0x8(%rsp)
  0x000000011262371b: mov    %rdi,(%rsp)
  0x000000011262371f: callq  0x0000000112609120  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1700}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x0000000112623724: jmpq   0x000000011262318b
  0x0000000112623729: mov    %rdi,0x8(%rsp)
  0x000000011262372e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112623736: callq  0x000000011260aea0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1723}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x000000011262373b: jmpq   0x00000001126231bd
  0x0000000112623740: mov    %rdi,0x8(%rsp)
  0x0000000112623745: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262374d: callq  0x000000011260aea0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1746}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x0000000112623752: jmpq   0x0000000112623204
  0x0000000112623757: callq  0x00000001126072c0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1756}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ;   {runtime_call}
  0x000000011262375c: callq  0x00000001126072c0  ; OopMap{[104]=Oop [88]=Oop rdi=Oop [136]=Oop off=1761}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {runtime_call}
  0x0000000112623761: mov    %rax,0x8(%rsp)
  0x0000000112623766: movq   $0x6e,(%rsp)
  0x000000011262376e: callq  0x000000011260aea0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1779}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)
                                                ;   {runtime_call}
  0x0000000112623773: jmpq   0x00000001126234e7
  0x0000000112623778: lea    0x80(%rsp),%rax
  0x0000000112623780: mov    %rax,(%rsp)
  0x0000000112623784: callq  0x0000000112608d60  ;   {runtime_call}
  0x0000000112623789: jmpq   0x00000001126235a5
  0x000000011262378e: lea    0x80(%rsp),%rax
  0x0000000112623796: mov    %rax,(%rsp)
  0x000000011262379a: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011262379f: jmpq   0x00000001126235eb
  0x00000001126237a4: lea    0x80(%rsp),%rax
  0x00000001126237ac: mov    %rax,(%rsp)
  0x00000001126237b0: callq  0x0000000112608d60  ;   {runtime_call}
  0x00000001126237b5: jmpq   0x0000000112623635
  0x00000001126237ba: lea    0x80(%rsp),%rax
  0x00000001126237c2: mov    %rax,(%rsp)
  0x00000001126237c6: callq  0x0000000112608d60  ;   {runtime_call}
  0x00000001126237cb: jmpq   0x000000011262367b
  0x00000001126237d0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126237da: mov    $0xa050f00,%eax
  0x00000001126237df: callq  0x00000001126082e0  ; OopMap{[136]=Oop off=1892}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x00000001126237e4: jmpq   0x0000000112623690
  0x00000001126237e9: mov    %rdx,%rdx
  0x00000001126237ec: callq  0x0000000112607760  ; OopMap{[136]=Oop off=1905}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x00000001126237f1: jmpq   0x000000011262369f
  0x00000001126237f6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112623800: mov    $0xa050f00,%eax
  0x0000000112623805: callq  0x00000001126082e0  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=1930}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000011262380a: jmpq   0x00000001126236d0
  0x000000011262380f: mov    %rdx,%rdx
  0x0000000112623812: callq  0x0000000112607760  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=1943}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x0000000112623817: jmpq   0x00000001126236df
  0x000000011262381c: nop
  0x000000011262381d: nop
  0x000000011262381e: mov    0x2a8(%r15),%rax
  0x0000000112623825: movabs $0x0,%r10
  0x000000011262382f: mov    %r10,0x2a8(%r15)
  0x0000000112623836: movabs $0x0,%r10
  0x0000000112623840: mov    %r10,0x2b0(%r15)
  0x0000000112623847: mov    %rax,%rbx
  0x000000011262384a: lea    0x80(%rsp),%rax
  0x0000000112623852: mov    0x8(%rax),%rsi
  0x0000000112623856: mov    (%rsi),%rdi
  0x0000000112623859: and    $0x7,%rdi
  0x000000011262385d: cmp    $0x5,%rdi
  0x0000000112623861: je     0x000000011262387e
  0x0000000112623867: mov    (%rax),%rdi
  0x000000011262386a: test   %rdi,%rdi
  0x000000011262386d: je     0x000000011262387e
  0x0000000112623873: lock cmpxchg %rdi,(%rsi)
  0x0000000112623878: jne    0x000000011262388e
  0x000000011262387e: mov    %rbx,%rax
  0x0000000112623881: add    $0xa0,%rsp
  0x0000000112623888: pop    %rbp
  0x0000000112623889: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262388e: lea    0x80(%rsp),%rax
  0x0000000112623896: mov    %rax,(%rsp)
  0x000000011262389a: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011262389f: jmp    0x000000011262387e
  0x00000001126238a1: hlt    
  0x00000001126238a2: hlt    
  0x00000001126238a3: hlt    
  0x00000001126238a4: hlt    
  0x00000001126238a5: hlt    
  0x00000001126238a6: hlt    
  0x00000001126238a7: hlt    
  0x00000001126238a8: hlt    
  0x00000001126238a9: hlt    
  0x00000001126238aa: hlt    
  0x00000001126238ab: hlt    
  0x00000001126238ac: hlt    
  0x00000001126238ad: hlt    
  0x00000001126238ae: hlt    
  0x00000001126238af: hlt    
  0x00000001126238b0: hlt    
  0x00000001126238b1: hlt    
  0x00000001126238b2: hlt    
  0x00000001126238b3: hlt    
  0x00000001126238b4: hlt    
  0x00000001126238b5: hlt    
  0x00000001126238b6: hlt    
  0x00000001126238b7: hlt    
  0x00000001126238b8: hlt    
  0x00000001126238b9: hlt    
  0x00000001126238ba: hlt    
  0x00000001126238bb: hlt    
  0x00000001126238bc: hlt    
  0x00000001126238bd: hlt    
  0x00000001126238be: hlt    
  0x00000001126238bf: hlt    
[Stub Code]
  0x00000001126238c0: nop                       ;   {no_reloc}
  0x00000001126238c1: nop
  0x00000001126238c2: nop
  0x00000001126238c3: nop
  0x00000001126238c4: nop
  0x00000001126238c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126238cf: jmpq   0x00000001126238cf  ;   {runtime_call}
  0x00000001126238d4: nop
  0x00000001126238d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126238df: jmpq   0x00000001126238df  ;   {runtime_call}
  0x00000001126238e4: nop
  0x00000001126238e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126238ef: jmpq   0x00000001126238ef  ;   {runtime_call}
  0x00000001126238f4: nop
  0x00000001126238f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126238ff: jmpq   0x00000001126238ff  ;   {runtime_call}
[Exception Handler]
  0x0000000112623904: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112623909: mov    %rsp,-0x28(%rsp)
  0x000000011262390e: sub    $0x80,%rsp
  0x0000000112623915: mov    %rax,0x78(%rsp)
  0x000000011262391a: mov    %rcx,0x70(%rsp)
  0x000000011262391f: mov    %rdx,0x68(%rsp)
  0x0000000112623924: mov    %rbx,0x60(%rsp)
  0x0000000112623929: mov    %rbp,0x50(%rsp)
  0x000000011262392e: mov    %rsi,0x48(%rsp)
  0x0000000112623933: mov    %rdi,0x40(%rsp)
  0x0000000112623938: mov    %r8,0x38(%rsp)
  0x000000011262393d: mov    %r9,0x30(%rsp)
  0x0000000112623942: mov    %r10,0x28(%rsp)
  0x0000000112623947: mov    %r11,0x20(%rsp)
  0x000000011262394c: mov    %r12,0x18(%rsp)
  0x0000000112623951: mov    %r13,0x10(%rsp)
  0x0000000112623956: mov    %r14,0x8(%rsp)
  0x000000011262395b: mov    %r15,(%rsp)
  0x000000011262395f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112623969: movabs $0x112623909,%rsi  ;   {internal_word}
  0x0000000112623973: mov    %rsp,%rdx
  0x0000000112623976: and    $0xfffffffffffffff0,%rsp
  0x000000011262397a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262397f: hlt    
[Deopt Handler Code]
  0x0000000112623980: movabs $0x112623980,%r10  ;   {section_word}
  0x000000011262398a: push   %r10
  0x000000011262398c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112623991: hlt    
  0x0000000112623992: hlt    
  0x0000000112623993: hlt    
  0x0000000112623994: hlt    
  0x0000000112623995: hlt    
  0x0000000112623996: hlt    
  0x0000000112623997: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000112623080' size='3944' address='0x0000000112622e90' relocation_offset='296' insts_offset='496' stub_offset='2608' scopes_data_offset='2848' scopes_pcs_offset='3224' dependencies_offset='3912' nul_chk_table_offset='3920' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='972' backedge_count='11' iicount='972' stamp='0.183'/>
<writer thread='7171'/>
[Loaded sun.util.calendar.CalendarUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112623e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xa0]  (sp of caller)
  0x0000000112624020: mov    0x8(%rsi),%r10d
  0x0000000112624024: shl    $0x3,%r10
  0x0000000112624028: cmp    %rax,%r10
  0x000000011262402b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112624031: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262403c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112624040: mov    %eax,-0x14000(%rsp)
  0x0000000112624047: push   %rbp
  0x0000000112624048: sub    $0x90,%rsp
  0x000000011262404f: mov    %rsi,0x50(%rsp)
  0x0000000112624054: mov    %rdx,0x60(%rsp)
  0x0000000112624059: mov    %ecx,0x5c(%rsp)
  0x000000011262405d: mov    %r8d,0x58(%rsp)
  0x0000000112624062: movabs $0x129f3d8e8,%rdi  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262406c: mov    0xdc(%rdi),%ebx
  0x0000000112624072: add    $0x8,%ebx
  0x0000000112624075: mov    %ebx,0xdc(%rdi)
  0x000000011262407b: movabs $0x129e473b0,%rdi  ;   {metadata({method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624085: and    $0x1ff8,%ebx
  0x000000011262408b: cmp    $0x0,%ebx
  0x000000011262408e: je     0x0000000112624641  ;*aload_0
                                                ; - java.io.BufferedInputStream::read1@0 (line 277)

  0x0000000112624094: mov    0x10(%rsi),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@1 (line 277)

  0x0000000112624097: mov    0x14(%rsi),%ebx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@5 (line 277)

  0x000000011262409a: sub    %ebx,%edi
  0x000000011262409c: cmp    $0x0,%edi
  0x000000011262409f: movabs $0x129f3d8e8,%rbx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126240a9: movabs $0x108,%rax
  0x00000001126240b3: jg     0x00000001126240c3
  0x00000001126240b9: movabs $0x118,%rax
  0x00000001126240c3: mov    (%rbx,%rax,1),%r9
  0x00000001126240c7: lea    0x1(%r9),%r9
  0x00000001126240cb: mov    %r9,(%rbx,%rax,1)
  0x00000001126240cf: jg     0x0000000112624245  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@13 (line 278)

  0x00000001126240d5: mov    %rsi,%rdi
  0x00000001126240d8: movabs $0x129f3d8e8,%rbx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126240e2: addq   $0x1,0x128(%rbx)
  0x00000001126240ea: movabs $0x129f3c340,%rdi  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126240f4: mov    0xdc(%rdi),%ebx
  0x00000001126240fa: add    $0x8,%ebx
  0x00000001126240fd: mov    %ebx,0xdc(%rdi)
  0x0000000112624103: movabs $0x129e46ef8,%rdi  ;   {metadata({method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262410d: and    $0x7ffff8,%ebx
  0x0000000112624113: cmp    $0x0,%ebx
  0x0000000112624116: je     0x0000000112624658
  0x000000011262411c: mov    0x20(%rsi),%edi
  0x000000011262411f: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000112624123: cmp    $0x0,%rdi
  0x0000000112624127: movabs $0x129f3c340,%rbx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624131: movabs $0x108,%rax
  0x000000011262413b: jne    0x000000011262414b
  0x0000000112624141: movabs $0x118,%rax
  0x000000011262414b: mov    (%rbx,%rax,1),%r9
  0x000000011262414f: lea    0x1(%r9),%r9
  0x0000000112624153: mov    %r9,(%rbx,%rax,1)
  0x0000000112624157: je     0x00000001126245ee
<writer thread='7171'/>
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
  ;*ifnonnull                                   ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000011262415d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ; implicit exception: dispatches to 0x000000011262466f
  0x0000000112624160: cmp    %edi,%r8d
  0x0000000112624163: movabs $0x129f3d8e8,%rdi  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262416d: movabs $0x138,%rbx
  0x0000000112624177: jl     0x0000000112624187
  0x000000011262417d: movabs $0x148,%rbx
  0x0000000112624187: mov    (%rdi,%rbx,1),%rax
  0x000000011262418b: lea    0x1(%rax),%rax
  0x000000011262418f: mov    %rax,(%rdi,%rbx,1)
  0x0000000112624193: jl     0x00000001126241d5  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read1@22 (line 283)

  0x0000000112624199: mov    0x18(%rsi),%edi    ;*getfield markpos
                                                ; - java.io.BufferedInputStream::read1@26 (line 283)

  0x000000011262419c: cmp    $0x0,%edi
  0x000000011262419f: movabs $0x129f3d8e8,%rdi  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126241a9: movabs $0x158,%rbx
  0x00000001126241b3: jge    0x00000001126241c3
  0x00000001126241b9: movabs $0x168,%rbx
  0x00000001126241c3: mov    (%rdi,%rbx,1),%rax
  0x00000001126241c7: lea    0x1(%rax),%rax
  0x00000001126241cb: mov    %rax,(%rdi,%rbx,1)
  0x00000001126241cf: jl     0x0000000112624325  ;*ifge
                                                ; - java.io.BufferedInputStream::read1@29 (line 283)

  0x00000001126241d5: mov    %rsi,%rdi
  0x00000001126241d8: movabs $0x129f3d8e8,%rbx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126241e2: addq   $0x1,0x1b8(%rbx)
  0x00000001126241ea: mov    %rsi,%rdi
  0x00000001126241ed: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)

  0x00000001126241f0: nop
  0x00000001126241f1: nop
  0x00000001126241f2: nop
  0x00000001126241f3: nop
  0x00000001126241f4: nop
  0x00000001126241f5: nop
  0x00000001126241f6: nop
  0x00000001126241f7: callq  0x0000000112553020  ; OopMap{[80]=Oop [96]=Oop off=476}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)
                                                ;   {optimized virtual_call}
  0x00000001126241fc: mov    0x50(%rsp),%rsi
  0x0000000112624201: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@48 (line 287)

  0x0000000112624204: mov    0x14(%rsi),%ecx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@52 (line 287)

  0x0000000112624207: sub    %ecx,%edx
  0x0000000112624209: cmp    $0x0,%edx
  0x000000011262420c: movabs $0x129f3d8e8,%rcx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624216: movabs $0x1c8,%r8
  0x0000000112624220: jg     0x0000000112624230
  0x0000000112624226: movabs $0x1d8,%r8
  0x0000000112624230: mov    (%rcx,%r8,1),%rdi
  0x0000000112624234: lea    0x1(%rdi),%rdi
  0x0000000112624238: mov    %rdi,(%rcx,%r8,1)
  0x000000011262423c: jle    0x0000000112624540  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@60 (line 288)

  0x0000000112624242: mov    %rdx,%rdi          ;*iload
                                                ; - java.io.BufferedInputStream::read1@65 (line 290)

  0x0000000112624245: cmp    0x58(%rsp),%edi
  0x0000000112624249: movabs $0x129f3d8e8,%rdx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624253: movabs $0x1e8,%rcx
  0x000000011262425d: jge    0x000000011262426d
  0x0000000112624263: movabs $0x1f8,%rcx
  0x000000011262426d: mov    (%rdx,%rcx,1),%r8
  0x0000000112624271: lea    0x1(%r8),%r8
  0x0000000112624275: mov    %r8,(%rdx,%rcx,1)
  0x0000000112624279: jge    0x0000000112624294  ;*if_icmpge
                                                ; - java.io.BufferedInputStream::read1@68 (line 290)

  0x000000011262427f: movabs $0x129f3d8e8,%rdx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624289: incl   0x208(%rdx)
  0x000000011262428f: jmpq   0x0000000112624298  ;*goto
                                                ; - java.io.BufferedInputStream::read1@73 (line 290)

  0x0000000112624294: mov    0x58(%rsp),%edi    ;*istore
                                                ; - java.io.BufferedInputStream::read1@77 (line 290)

  0x0000000112624298: mov    %rsi,%rdx
  0x000000011262429b: movabs $0x129f3d8e8,%rcx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126242a5: addq   $0x1,0x220(%rcx)
  0x00000001126242ad: movabs $0x129f3c340,%rdx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126242b7: mov    0xdc(%rdx),%ecx
  0x00000001126242bd: add    $0x8,%ecx
  0x00000001126242c0: mov    %ecx,0xdc(%rdx)
  0x00000001126242c6: movabs $0x129e46ef8,%rdx  ;   {metadata({method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126242d0: and    $0x7ffff8,%ecx
  0x00000001126242d6: cmp    $0x0,%ecx
  0x00000001126242d9: je     0x0000000112624674
  0x00000001126242df: mov    0x20(%rsi),%ebx
  0x00000001126242e2: shl    $0x3,%rbx          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000001126242e6: cmp    $0x0,%rbx
  0x00000001126242ea: movabs $0x129f3c340,%rdx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126242f4: movabs $0x108,%rcx
  0x00000001126242fe: jne    0x000000011262430e
  0x0000000112624304: movabs $0x118,%rcx
  0x000000011262430e: mov    (%rdx,%rcx,1),%r8
  0x0000000112624312: lea    0x1(%r8),%r8
  0x0000000112624316: mov    %r8,(%rdx,%rcx,1)
  0x000000011262431a: jne    0x0000000112624473
  0x0000000112624320: jmpq   0x000000011262459e  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000112624325: mov    %rsi,%rdx
  0x0000000112624328: movabs $0x129f3d8e8,%rcx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624332: addq   $0x1,0x178(%rcx)
  0x000000011262433a: movabs $0x129f45b30,%rdx  ;   {metadata(method data for {method} {0x0000000129e46e48} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624344: mov    0xdc(%rdx),%ecx
  0x000000011262434a: add    $0x8,%ecx
  0x000000011262434d: mov    %ecx,0xdc(%rdx)
  0x0000000112624353: movabs $0x129e46e48,%rdx  ;   {metadata({method} {0x0000000129e46e48} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011262435d: and    $0x7ffff8,%ecx
  0x0000000112624363: cmp    $0x0,%ecx
  0x0000000112624366: je     0x000000011262468b
  0x000000011262436c: mov    0xc(%rsi),%esi
  0x000000011262436f: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.BufferedInputStream::getInIfOpen@1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000112624373: cmp    $0x0,%rsi
  0x0000000112624377: movabs $0x129f45b30,%rdx  ;   {metadata(method data for {method} {0x0000000129e46e48} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624381: movabs $0x108,%rcx
  0x000000011262438b: jne    0x000000011262439b
  0x0000000112624391: movabs $0x118,%rcx
  0x000000011262439b: mov    (%rdx,%rcx,1),%r8
  0x000000011262439f: lea    0x1(%r8),%r8
  0x00000001126243a3: mov    %r8,(%rdx,%rcx,1)
  0x00000001126243a7: je     0x0000000112624554  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getInIfOpen@6 (line 158)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000001126243ad: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000001126246a2
  0x00000001126243b0: mov    %rsi,%rdx
  0x00000001126243b3: movabs $0x129f3d8e8,%rcx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126243bd: mov    0x8(%rdx),%edx
  0x00000001126243c0: shl    $0x3,%rdx
  0x00000001126243c4: cmp    0x190(%rcx),%rdx
  0x00000001126243cb: jne    0x00000001126243da
  0x00000001126243cd: addq   $0x1,0x198(%rcx)
  0x00000001126243d5: jmpq   0x0000000112624440
  0x00000001126243da: cmp    0x1a0(%rcx),%rdx
  0x00000001126243e1: jne    0x00000001126243f0
  0x00000001126243e3: addq   $0x1,0x1a8(%rcx)
  0x00000001126243eb: jmpq   0x0000000112624440
  0x00000001126243f0: cmpq   $0x0,0x190(%rcx)
  0x00000001126243fb: jne    0x0000000112624414
  0x00000001126243fd: mov    %rdx,0x190(%rcx)
  0x0000000112624404: movq   $0x1,0x198(%rcx)
  0x000000011262440f: jmpq   0x0000000112624440
  0x0000000112624414: cmpq   $0x0,0x1a0(%rcx)
  0x000000011262441f: jne    0x0000000112624438
  0x0000000112624421: mov    %rdx,0x1a0(%rcx)
  0x0000000112624428: movq   $0x1,0x1a8(%rcx)
  0x0000000112624433: jmpq   0x0000000112624440
  0x0000000112624438: addq   $0x1,0x188(%rcx)
  0x0000000112624440: mov    0x60(%rsp),%rdx
  0x0000000112624445: mov    0x5c(%rsp),%ecx
  0x0000000112624449: mov    0x58(%rsp),%r8d    ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)

  0x000000011262444e: nop
  0x000000011262444f: nop
  0x0000000112624450: nop
  0x0000000112624451: nop
  0x0000000112624452: nop
  0x0000000112624453: nop
  0x0000000112624454: nop
  0x0000000112624455: movabs $0xffffffffffffffff,%rax
  0x000000011262445f: callq  0x0000000112553220  ; OopMap{off=1092}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {virtual_call}
  0x0000000112624464: add    $0x90,%rsp
  0x000000011262446b: pop    %rbp
  0x000000011262446c: test   %eax,-0x33d4372(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112624472: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@42 (line 284)

  0x0000000112624473: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@84 (line 291)

  0x0000000112624476: movabs $0x129f3d8e8,%rcx  ;   {metadata(method data for {method} {0x0000000129e473b0} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624480: addq   $0x1,0x230(%rcx)
  0x0000000112624488: mov    %rbx,%rsi
  0x000000011262448b: mov    0x60(%rsp),%rcx
  0x0000000112624490: mov    0x5c(%rsp),%r8d
  0x0000000112624495: mov    %rdi,%r9
  0x0000000112624498: mov    %edi,0x68(%rsp)
  0x000000011262449c: test   %rsi,%rsi
  0x000000011262449f: je     0x00000001126246a7
  0x00000001126244a5: test   %rcx,%rcx
  0x00000001126244a8: je     0x00000001126246a7
  0x00000001126244ae: test   %edx,%edx
  0x00000001126244b0: jl     0x00000001126246a7
  0x00000001126244b6: test   %r8d,%r8d
  0x00000001126244b9: jl     0x00000001126246a7
  0x00000001126244bf: lea    (%rdx,%r9,1),%rdi
  0x00000001126244c3: cmp    0xc(%rsi),%edi
  0x00000001126244c6: ja     0x00000001126246a7
  0x00000001126244cc: lea    (%r8,%r9,1),%rdi
  0x00000001126244d0: cmp    0xc(%rcx),%edi
  0x00000001126244d3: ja     0x00000001126246a7
  0x00000001126244d9: test   %r9d,%r9d
  0x00000001126244dc: jl     0x00000001126246a7
  0x00000001126244e2: je     0x000000011262451e
  0x00000001126244e8: movslq %edx,%rdx
  0x00000001126244eb: movslq %r8d,%r8
  0x00000001126244ee: lea    0x10(%rsi,%rdx,1),%rdi
  0x00000001126244f3: lea    0x10(%rcx,%r8,1),%rsi
  0x00000001126244f8: mov    %r9,%rdx
  0x00000001126244fb: test   $0xf,%esp
  0x0000000112624501: je     0x0000000112624519
  0x0000000112624507: sub    $0x8,%rsp
  0x000000011262450b: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x0000000112624510: add    $0x8,%rsp
  0x0000000112624514: jmpq   0x000000011262451e
  0x0000000112624519: callq  Stub::jbyte_arraycopy  ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {runtime_call}
  0x000000011262451e: mov    0x50(%rsp),%rsi
  0x0000000112624523: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@96 (line 292)

  0x0000000112624526: add    0x68(%rsp),%eax
  0x000000011262452a: mov    %eax,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read1@102 (line 292)

  0x000000011262452d: mov    0x68(%rsp),%eax
  0x0000000112624531: add    $0x90,%rsp
  0x0000000112624538: pop    %rbp
  0x0000000112624539: test   %eax,-0x33d443f(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262453f: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@107 (line 293)

  0x0000000112624540: mov    $0xffffffff,%eax
  0x0000000112624545: add    $0x90,%rsp
  0x000000011262454c: pop    %rbp
  0x000000011262454d: test   %eax,-0x33d4453(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112624553: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@64 (line 288)

  0x0000000112624554: nopl   0x0(%rax)
  0x0000000112624558: jmpq   0x00000001126246c0  ;   {no_reloc}
  0x000000011262455d: add    %al,(%rax)
  0x000000011262455f: add    %al,(%rax)
  0x0000000112624561: add    %ch,%cl
  0x0000000112624563: movslq (%rcx),%eax
  0x0000000112624565: add    %al,(%rax)         ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000112624567: mov    %rax,%rdx
  0x000000011262456a: movabs $0x129f45b30,%rsi  ;   {metadata(method data for {method} {0x0000000129e46e48} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624574: addq   $0x1,0x128(%rsi)
  0x000000011262457c: movabs $0x76ad8f6b0,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x0000000112624586: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000112624589: mov    %rax,0x70(%rsp)
  0x000000011262458e: nop
  0x000000011262458f: callq  0x0000000112553020  ; OopMap{[96]=Oop [112]=Oop off=1396}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {optimized virtual_call}
  0x0000000112624594: mov    0x70(%rsp),%rax
  0x0000000112624599: jmpq   0x000000011262474e  ;*athrow
                                                ; - java.io.BufferedInputStream::getInIfOpen@18 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011262459e: mov    %edi,0x68(%rsp)
  0x00000001126245a2: nopw   0x0(%rax,%rax,1)
  0x00000001126245a8: jmpq   0x00000001126246e6  ;   {no_reloc}
  0x00000001126245ad: add    %al,(%rax)
  0x00000001126245af: add    %al,(%rax)
  0x00000001126245b1: add    %ch,%cl
  0x00000001126245b3: cmp    %eax,(%rcx)
  0x00000001126245b5: add    %al,(%rax)         ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000001126245b7: mov    %rax,%rdx
  0x00000001126245ba: movabs $0x129f3c340,%rbx  ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000001126245c4: addq   $0x1,0x128(%rbx)
  0x00000001126245cc: movabs $0x76ad8f6b0,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x00000001126245d6: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000001126245d9: mov    %rax,0x78(%rsp)
  0x00000001126245de: nop
  0x00000001126245df: callq  0x0000000112553020  ; OopMap{[96]=Oop [80]=Oop [120]=Oop off=1476}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {optimized virtual_call}
  0x00000001126245e4: mov    0x78(%rsp),%rax
  0x00000001126245e9: jmpq   0x000000011262474e  ;*athrow
                                                ; - java.io.BufferedInputStream::getBufIfOpen@18 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000001126245ee: xchg   %ax,%ax
  0x00000001126245f0: jmpq   0x000000011262470c  ;   {no_reloc}
  0x00000001126245f5: add    %al,(%rax)
  0x00000001126245f7: add    %al,(%rax)
  0x00000001126245f9: add    %ch,%cl
  0x00000001126245fb: (bad)  
  0x00000001126245fc: add    %eax,(%rax)
  0x00000001126245fe: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000112624601: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x0000000129e46ef8} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000112624604: rex retq 
  0x0000000112624606: repz sub %eax,(%rcx)
  0x0000000112624609: add    %al,(%rax)
  0x000000011262460b: add    %cl,-0x7d(%rax)
  0x000000011262460e: subl   $0x1,(%rax)
  0x0000000112624611: add    %al,(%rax)
  0x0000000112624613: add    %ecx,-0x46(%rax)   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000112624616: mov    $0xf6,%al
  0x0000000112624618: fsubrs 0x7(%rdx)
  0x000000011262461b: add    %al,(%rax)
  0x000000011262461d: add    %cl,-0x75(%rax)
  0x0000000112624620: lock mov %rax,0x80(%rsp)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000112624629: nop
  0x000000011262462a: nop
  0x000000011262462b: nop
  0x000000011262462c: nop
  0x000000011262462d: nop
  0x000000011262462e: nop
  0x000000011262462f: callq  0x0000000112553020  ; OopMap{[80]=Oop [128]=Oop [96]=Oop off=1556}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {optimized virtual_call}
  0x0000000112624634: mov    0x80(%rsp),%rax
  0x000000011262463c: jmpq   0x000000011262474e
  0x0000000112624641: mov    %rdi,0x8(%rsp)
  0x0000000112624646: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262464e: callq  0x000000011260aea0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1587}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read1@-1 (line 277)
                                                ;   {runtime_call}
  0x0000000112624653: jmpq   0x0000000112624094
  0x0000000112624658: mov    %rdi,0x8(%rsp)
  0x000000011262465d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112624665: callq  0x000000011260aea0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1610}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000011262466a: jmpq   0x000000011262411c
  0x000000011262466f: callq  0x00000001126072c0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1620}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ;   {runtime_call}
  0x0000000112624674: mov    %rdx,0x8(%rsp)
  0x0000000112624679: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112624681: callq  0x000000011260aea0  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1638}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x0000000112624686: jmpq   0x00000001126242df
  0x000000011262468b: mov    %rdx,0x8(%rsp)
  0x0000000112624690: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112624698: callq  0x000000011260aea0  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1661}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getInIfOpen@-1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000011262469d: jmpq   0x000000011262436c
  0x00000001126246a2: callq  0x00000001126072c0  ; OopMap{[96]=Oop rsi=Oop off=1671}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {runtime_call}
  0x00000001126246a7: callq  0x0000000112553420  ; OopMap{[80]=Oop off=1676}
                                                ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {static_call}
  0x00000001126246ac: jmpq   0x000000011262451e
  0x00000001126246b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126246bb: mov    $0xa050f00,%eax
  0x00000001126246c0: callq  0x00000001126082e0  ; OopMap{[96]=Oop off=1701}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x00000001126246c5: jmpq   0x0000000112624558
  0x00000001126246ca: mov    %rdx,%rdx
  0x00000001126246cd: callq  0x0000000112607760  ; OopMap{[96]=Oop off=1714}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x00000001126246d2: jmpq   0x0000000112624567
  0x00000001126246d7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126246e1: mov    $0xa050f00,%eax
  0x00000001126246e6: callq  0x00000001126082e0  ; OopMap{[80]=Oop [96]=Oop off=1739}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x00000001126246eb: jmpq   0x00000001126245a8
  0x00000001126246f0: mov    %rdx,%rdx
  0x00000001126246f3: callq  0x0000000112607760  ; OopMap{[80]=Oop [96]=Oop off=1752}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x00000001126246f8: jmpq   0x00000001126245b7
  0x00000001126246fd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112624707: mov    $0xa050f00,%eax
  0x000000011262470c: callq  0x00000001126082e0  ; OopMap{[80]=Oop [96]=Oop off=1777}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x0000000112624711: jmpq   0x00000001126245f0
  0x0000000112624716: mov    %rdx,%rdx
  0x0000000112624719: callq  0x0000000112607760  ; OopMap{[80]=Oop [96]=Oop off=1790}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000011262471e: jmpq   0x00000001126245ff
  0x0000000112624723: nop
  0x0000000112624724: nop
  0x0000000112624725: mov    0x2a8(%r15),%rax
  0x000000011262472c: movabs $0x0,%r10
  0x0000000112624736: mov    %r10,0x2a8(%r15)
  0x000000011262473d: movabs $0x0,%r10
  0x0000000112624747: mov    %r10,0x2b0(%r15)
  0x000000011262474e: add    $0x90,%rsp
  0x0000000112624755: pop    %rbp
  0x0000000112624756: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262475b: hlt    
  0x000000011262475c: hlt    
  0x000000011262475d: hlt    
  0x000000011262475e: hlt    
  0x000000011262475f: hlt    
[Stub Code]
  0x0000000112624760: nop                       ;   {no_reloc}
  0x0000000112624761: nop
  0x0000000112624762: nop
  0x0000000112624763: nop
  0x0000000112624764: nop
  0x0000000112624765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262476f: jmpq   0x000000011262476f  ;   {runtime_call}
  0x0000000112624774: nop
  0x0000000112624775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262477f: jmpq   0x000000011262477f  ;   {runtime_call}
  0x0000000112624784: nop
  0x0000000112624785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262478f: jmpq   0x000000011262478f  ;   {runtime_call}
  0x0000000112624794: nop
  0x0000000112624795: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262479f: jmpq   0x000000011262479f  ;   {runtime_call}
  0x00000001126247a4: nop
  0x00000001126247a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126247af: jmpq   0x00000001126247af  ;   {runtime_call}
  0x00000001126247b4: nop
  0x00000001126247b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126247bf: jmpq   0x00000001126247bf  ;   {runtime_call}
[Exception Handler]
  0x00000001126247c4: callq  0x000000011260bf60  ;   {runtime_call}
  0x00000001126247c9: mov    %rsp,-0x28(%rsp)
  0x00000001126247ce: sub    $0x80,%rsp
  0x00000001126247d5: mov    %rax,0x78(%rsp)
  0x00000001126247da: mov    %rcx,0x70(%rsp)
  0x00000001126247df: mov    %rdx,0x68(%rsp)
  0x00000001126247e4: mov    %rbx,0x60(%rsp)
  0x00000001126247e9: mov    %rbp,0x50(%rsp)
  0x00000001126247ee: mov    %rsi,0x48(%rsp)
  0x00000001126247f3: mov    %rdi,0x40(%rsp)
  0x00000001126247f8: mov    %r8,0x38(%rsp)
  0x00000001126247fd: mov    %r9,0x30(%rsp)
  0x0000000112624802: mov    %r10,0x28(%rsp)
  0x0000000112624807: mov    %r11,0x20(%rsp)
  0x000000011262480c: mov    %r12,0x18(%rsp)
  0x0000000112624811: mov    %r13,0x10(%rsp)
  0x0000000112624816: mov    %r14,0x8(%rsp)
  0x000000011262481b: mov    %r15,(%rsp)
  0x000000011262481f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112624829: movabs $0x1126247c9,%rsi  ;   {internal_word}
  0x0000000112624833: mov    %rsp,%rdx
  0x0000000112624836: and    $0xfffffffffffffff0,%rsp
  0x000000011262483a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262483f: hlt    
[Deopt Handler Code]
  0x0000000112624840: movabs $0x112624840,%r10  ;   {section_word}
  0x000000011262484a: push   %r10
  0x000000011262484c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112624851: hlt    
  0x0000000112624852: hlt    
  0x0000000112624853: hlt    
  0x0000000112624854: hlt    
  0x0000000112624855: hlt    
  0x0000000112624856: hlt    
  0x0000000112624857: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000112624020' size='4160' address='0x0000000112623e10' relocation_offset='296' insts_offset='528' stub_offset='2384' scopes_data_offset='2664' scopes_pcs_offset='3200' dependencies_offset='4128' nul_chk_table_offset='4136' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='983' iicount='983' stamp='0.189'/>
<writer thread='7171'/>
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112624e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000112625020: mov    0x8(%rsi),%r10d
  0x0000000112625024: shl    $0x3,%r10
  0x0000000112625028: cmp    %rax,%r10
  0x000000011262502b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112625031: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262503c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112625040: mov    %eax,-0x14000(%rsp)
  0x0000000112625047: push   %rbp
  0x0000000112625048: sub    $0x40,%rsp
  0x000000011262504c: movabs $0x129f3dbc8,%rdi  ;   {metadata(method data for {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625056: mov    0xdc(%rdi),%ebx
  0x000000011262505c: add    $0x8,%ebx
  0x000000011262505f: mov    %ebx,0xdc(%rdi)
  0x0000000112625065: movabs $0x129f3b368,%rdi  ;   {metadata({method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262506f: and    $0x1ff8,%ebx
  0x0000000112625075: cmp    $0x0,%ebx
  0x0000000112625078: je     0x0000000112625286  ;*aload_0
                                                ; - java.io.DataInputStream::readShort@0 (line 312)

  0x000000011262507e: mov    0xc(%rsi),%edi
  0x0000000112625081: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@1 (line 312)

  0x0000000112625085: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011262529d
  0x0000000112625088: mov    %rdi,%rbx
  0x000000011262508b: movabs $0x129f3dbc8,%rax  ;   {metadata(method data for {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625095: mov    0x8(%rbx),%ebx
  0x0000000112625098: shl    $0x3,%rbx
  0x000000011262509c: cmp    0x110(%rax),%rbx
  0x00000001126250a3: jne    0x00000001126250b2
  0x00000001126250a5: addq   $0x1,0x118(%rax)
  0x00000001126250ad: jmpq   0x0000000112625118
  0x00000001126250b2: cmp    0x120(%rax),%rbx
  0x00000001126250b9: jne    0x00000001126250c8
  0x00000001126250bb: addq   $0x1,0x128(%rax)
  0x00000001126250c3: jmpq   0x0000000112625118
  0x00000001126250c8: cmpq   $0x0,0x110(%rax)
  0x00000001126250d3: jne    0x00000001126250ec
  0x00000001126250d5: mov    %rbx,0x110(%rax)
  0x00000001126250dc: movq   $0x1,0x118(%rax)
  0x00000001126250e7: jmpq   0x0000000112625118
  0x00000001126250ec: cmpq   $0x0,0x120(%rax)
  0x00000001126250f7: jne    0x0000000112625110
  0x00000001126250f9: mov    %rbx,0x120(%rax)
  0x0000000112625100: movq   $0x1,0x128(%rax)
  0x000000011262510b: jmpq   0x0000000112625118
  0x0000000112625110: addq   $0x1,0x108(%rax)
  0x0000000112625118: mov    %rsi,0x20(%rsp)
  0x000000011262511d: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)

  0x0000000112625120: nop
  0x0000000112625121: nop
  0x0000000112625122: nop
  0x0000000112625123: nop
  0x0000000112625124: nop
  0x0000000112625125: movabs $0xffffffffffffffff,%rax
  0x000000011262512f: callq  0x0000000112553220  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {virtual_call}
  0x0000000112625134: mov    0x20(%rsp),%rsi
  0x0000000112625139: mov    0xc(%rsi),%esi
  0x000000011262513c: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@9 (line 313)

  0x0000000112625140: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ; implicit exception: dispatches to 0x00000001126252a2
  0x0000000112625143: mov    %rsi,%rdi
  0x0000000112625146: movabs $0x129f3dbc8,%rbx  ;   {metadata(method data for {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625150: mov    0x8(%rdi),%edi
  0x0000000112625153: shl    $0x3,%rdi
  0x0000000112625157: cmp    0x140(%rbx),%rdi
  0x000000011262515e: jne    0x000000011262516d
  0x0000000112625160: addq   $0x1,0x148(%rbx)
  0x0000000112625168: jmpq   0x00000001126251d3
  0x000000011262516d: cmp    0x150(%rbx),%rdi
  0x0000000112625174: jne    0x0000000112625183
  0x0000000112625176: addq   $0x1,0x158(%rbx)
  0x000000011262517e: jmpq   0x00000001126251d3
  0x0000000112625183: cmpq   $0x0,0x140(%rbx)
  0x000000011262518e: jne    0x00000001126251a7
  0x0000000112625190: mov    %rdi,0x140(%rbx)
  0x0000000112625197: movq   $0x1,0x148(%rbx)
  0x00000001126251a2: jmpq   0x00000001126251d3
  0x00000001126251a7: cmpq   $0x0,0x150(%rbx)
  0x00000001126251b2: jne    0x00000001126251cb
  0x00000001126251b4: mov    %rdi,0x150(%rbx)
  0x00000001126251bb: movq   $0x1,0x158(%rbx)
  0x00000001126251c6: jmpq   0x00000001126251d3
  0x00000001126251cb: addq   $0x1,0x138(%rbx)
  0x00000001126251d3: mov    %eax,0x28(%rsp)
  0x00000001126251d7: nop
  0x00000001126251d8: nop
  0x00000001126251d9: nop
  0x00000001126251da: nop
  0x00000001126251db: nop
  0x00000001126251dc: nop
  0x00000001126251dd: movabs $0xffffffffffffffff,%rax
  0x00000001126251e7: callq  0x0000000112553220  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {virtual_call}
  0x00000001126251ec: mov    0x28(%rsp),%edx
  0x00000001126251f0: or     %rax,%rdx
  0x00000001126251f3: cmp    $0x0,%edx
  0x00000001126251f6: movabs $0x129f3dbc8,%rdx  ;   {metadata(method data for {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625200: movabs $0x168,%rsi
  0x000000011262520a: jge    0x000000011262521a
  0x0000000112625210: movabs $0x178,%rsi
  0x000000011262521a: mov    (%rdx,%rsi,1),%rdi
  0x000000011262521e: lea    0x1(%rdi),%rdi
  0x0000000112625222: mov    %rdi,(%rdx,%rsi,1)
  0x0000000112625226: jl     0x0000000112625247  ;*ifge
                                                ; - java.io.DataInputStream::readShort@19 (line 314)

  0x000000011262522c: mov    0x28(%rsp),%edx
  0x0000000112625230: shl    $0x8,%edx
  0x0000000112625233: add    %eax,%edx
  0x0000000112625235: movswl %dx,%edx
  0x0000000112625238: mov    %rdx,%rax
  0x000000011262523b: add    $0x40,%rsp
  0x000000011262523f: pop    %rbp
  0x0000000112625240: test   %eax,-0x33d5146(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112625246: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readShort@39 (line 316)

  0x0000000112625247: nop
  0x0000000112625248: jmpq   0x00000001126252b6  ;   {no_reloc}
  0x000000011262524d: add    %al,(%rax)
  0x000000011262524f: add    %al,(%rax)
  0x0000000112625251: add    %ch,%cl
  0x0000000112625253: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readShort@22 (line 315)

  0x0000000112625259: lock movabs $0x129f3dbc8,%rdi  ;   {metadata(method data for {method} {0x0000000129f3b368} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625264: addq   $0x1,0x188(%rdi)
  0x000000011262526c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)

  0x000000011262526f: mov    %rax,0x30(%rsp)
  0x0000000112625274: nop
  0x0000000112625275: nop
  0x0000000112625276: nop
  0x0000000112625277: callq  0x0000000112553020  ; OopMap{[48]=Oop off=604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)
                                                ;   {optimized virtual_call}
  0x000000011262527c: mov    0x30(%rsp),%rax
  0x0000000112625281: jmpq   0x00000001126252f5
  0x0000000112625286: mov    %rdi,0x8(%rsp)
  0x000000011262528b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112625293: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readShort@-1 (line 312)
                                                ;   {runtime_call}
  0x0000000112625298: jmpq   0x000000011262507e
  0x000000011262529d: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdi=Oop off=642}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {runtime_call}
  0x00000001126252a2: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=647}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {runtime_call}
  0x00000001126252a7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126252b1: mov    $0xa050f00,%eax
  0x00000001126252b6: callq  0x00000001126082e0  ; OopMap{off=667}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000001126252bb: jmp    0x0000000112625248
  0x00000001126252bd: nop
  0x00000001126252be: nop
  0x00000001126252bf: nop
  0x00000001126252c0: mov    %rdx,%rdx
  0x00000001126252c3: callq  0x0000000112607760  ; OopMap{off=680}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000001126252c8: jmp    0x0000000112625257
  0x00000001126252ca: nop
  0x00000001126252cb: nop
  0x00000001126252cc: mov    0x2a8(%r15),%rax
  0x00000001126252d3: movabs $0x0,%r10
  0x00000001126252dd: mov    %r10,0x2a8(%r15)
  0x00000001126252e4: movabs $0x0,%r10
  0x00000001126252ee: mov    %r10,0x2b0(%r15)
  0x00000001126252f5: add    $0x40,%rsp
  0x00000001126252f9: pop    %rbp
  0x00000001126252fa: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126252ff: hlt    
[Stub Code]
  0x0000000112625300: nop                       ;   {no_reloc}
  0x0000000112625301: nop
  0x0000000112625302: nop
  0x0000000112625303: nop
  0x0000000112625304: nop
  0x0000000112625305: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262530f: jmpq   0x000000011262530f  ;   {runtime_call}
  0x0000000112625314: nop
  0x0000000112625315: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262531f: jmpq   0x000000011262531f  ;   {runtime_call}
  0x0000000112625324: nop
  0x0000000112625325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262532f: jmpq   0x000000011262532f  ;   {runtime_call}
[Exception Handler]
  0x0000000112625334: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112625339: mov    %rsp,-0x28(%rsp)
  0x000000011262533e: sub    $0x80,%rsp
  0x0000000112625345: mov    %rax,0x78(%rsp)
  0x000000011262534a: mov    %rcx,0x70(%rsp)
  0x000000011262534f: mov    %rdx,0x68(%rsp)
  0x0000000112625354: mov    %rbx,0x60(%rsp)
  0x0000000112625359: mov    %rbp,0x50(%rsp)
  0x000000011262535e: mov    %rsi,0x48(%rsp)
  0x0000000112625363: mov    %rdi,0x40(%rsp)
  0x0000000112625368: mov    %r8,0x38(%rsp)
  0x000000011262536d: mov    %r9,0x30(%rsp)
  0x0000000112625372: mov    %r10,0x28(%rsp)
  0x0000000112625377: mov    %r11,0x20(%rsp)
  0x000000011262537c: mov    %r12,0x18(%rsp)
  0x0000000112625381: mov    %r13,0x10(%rsp)
  0x0000000112625386: mov    %r14,0x8(%rsp)
  0x000000011262538b: mov    %r15,(%rsp)
  0x000000011262538f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112625399: movabs $0x112625339,%rsi  ;   {internal_word}
  0x00000001126253a3: mov    %rsp,%rdx
  0x00000001126253a6: and    $0xfffffffffffffff0,%rsp
  0x00000001126253aa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126253af: hlt    
[Deopt Handler Code]
  0x00000001126253b0: movabs $0x1126253b0,%r10  ;   {section_word}
  0x00000001126253ba: push   %r10
  0x00000001126253bc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126253c1: hlt    
  0x00000001126253c2: hlt    
  0x00000001126253c3: hlt    
  0x00000001126253c4: hlt    
  0x00000001126253c5: hlt    
  0x00000001126253c6: hlt    
  0x00000001126253c7: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000112625020' size='1816' address='0x0000000112624e90' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1344' scopes_pcs_offset='1480' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/io/DataInputStream readShort ()S' bytes='40' count='1960' iicount='1960' stamp='0.191'/>
<writer thread='7171'/>
<task_queued compile_id='26' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='384' iicount='384' level='3' stamp='0.191' comment='tiered' hot_count='384'/>
<task_queued compile_id='27' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='384' iicount='384' level='3' stamp='0.191' comment='tiered' hot_count='384'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126255d0:
Code:
[Entry Point]
[Constants]
  # 
<writer thread='7171'/>
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
{method} {0x0000000129f3ba50} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112625740: mov    0x8(%rsi),%r10d
  0x0000000112625744: shl    $0x3,%r10
  0x0000000112625748: cmp    %rax,%r10
  0x000000011262574b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112625751: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262575c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112625760: mov    %eax,-0x14000(%rsp)
  0x0000000112625767: push   %rbp
  0x0000000112625768: sub    $0x30,%rsp
  0x000000011262576c: movabs $0x129f3d4c0,%rdi  ;   {metadata(method data for {method} {0x0000000129f3ba50} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112625776: mov    0xdc(%rdi),%ebx
  0x000000011262577c: add    $0x8,%ebx
  0x000000011262577f: mov    %ebx,0xdc(%rdi)
  0x0000000112625785: movabs $0x129f3ba50,%rdi  ;   {metadata({method} {0x0000000129f3ba50} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011262578f: and    $0x1ff8,%ebx
  0x0000000112625795: cmp    $0x0,%ebx
  0x0000000112625798: je     0x00000001126257c8  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 564)

  0x000000011262579e: movabs $0x129f3d4c0,%rdi  ;   {metadata(method data for {method} {0x0000000129f3ba50} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000001126257a8: addq   $0x1,0x108(%rdi)
  0x00000001126257b0: nop
  0x00000001126257b1: nop
  0x00000001126257b2: nop
  0x00000001126257b3: nop
  0x00000001126257b4: nop
  0x00000001126257b5: nop
  0x00000001126257b6: nop
  0x00000001126257b7: callq  0x0000000112553420  ; OopMap{off=124}
                                                ;*invokestatic readUTF
                                                ; - java.io.DataInputStream::readUTF@1 (line 564)
                                                ;   {static_call}
  0x00000001126257bc: add    $0x30,%rsp
  0x00000001126257c0: pop    %rbp
  0x00000001126257c1: test   %eax,-0x33d56c7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126257c7: retq   
  0x00000001126257c8: mov    %rdi,0x8(%rsp)
  0x00000001126257cd: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126257d5: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=154}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 564)
                                                ;   {runtime_call}
  0x00000001126257da: jmp    0x000000011262579e
  0x00000001126257dc: nop
  0x00000001126257dd: nop
  0x00000001126257de: mov    0x2a8(%r15),%rax
  0x00000001126257e5: movabs $0x0,%r10
  0x00000001126257ef: mov    %r10,0x2a8(%r15)
  0x00000001126257f6: movabs $0x0,%r10
  0x0000000112625800: mov    %r10,0x2b0(%r15)
  0x0000000112625807: add    $0x30,%rsp
  0x000000011262580b: pop    %rbp
  0x000000011262580c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112625811: hlt    
  0x0000000112625812: hlt    
  0x0000000112625813: hlt    
  0x0000000112625814: hlt    
  0x0000000112625815: hlt    
  0x0000000112625816: hlt    
  0x0000000112625817: hlt    
  0x0000000112625818: hlt    
  0x0000000112625819: hlt    
  0x000000011262581a: hlt    
  0x000000011262581b: hlt    
  0x000000011262581c: hlt    
  0x000000011262581d: hlt    
  0x000000011262581e: hlt    
  0x000000011262581f: hlt    
[Stub Code]
  0x0000000112625820: nop                       ;   {no_reloc}
  0x0000000112625821: nop
  0x0000000112625822: nop
  0x0000000112625823: nop
  0x0000000112625824: nop
  0x0000000112625825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262582f: jmpq   0x000000011262582f  ;   {runtime_call}
[Exception Handler]
  0x0000000112625834: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112625839: mov    %rsp,-0x28(%rsp)
  0x000000011262583e: sub    $0x80,%rsp
  0x0000000112625845: mov    %rax,0x78(%rsp)
  0x000000011262584a: mov    %rcx,0x70(%rsp)
  0x000000011262584f: mov    %rdx,0x68(%rsp)
  0x0000000112625854: mov    %rbx,0x60(%rsp)
  0x0000000112625859: mov    %rbp,0x50(%rsp)
  0x000000011262585e: mov    %rsi,0x48(%rsp)
  0x0000000112625863: mov    %rdi,0x40(%rsp)
  0x0000000112625868: mov    %r8,0x38(%rsp)
  0x000000011262586d: mov    %r9,0x30(%rsp)
  0x0000000112625872: mov    %r10,0x28(%rsp)
  0x0000000112625877: mov    %r11,0x20(%rsp)
  0x000000011262587c: mov    %r12,0x18(%rsp)
  0x0000000112625881: mov    %r13,0x10(%rsp)
  0x0000000112625886: mov    %r14,0x8(%rsp)
  0x000000011262588b: mov    %r15,(%rsp)
  0x000000011262588f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112625899: movabs $0x112625839,%rsi  ;   {internal_word}
  0x00000001126258a3: mov    %rsp,%rdx
  0x00000001126258a6: and    $0xfffffffffffffff0,%rsp
  0x00000001126258aa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126258af: hlt    
[Deopt Handler Code]
  0x00000001126258b0: movabs $0x1126258b0,%r10  ;   {section_word}
  0x00000001126258ba: push   %r10
  0x00000001126258bc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126258c1: hlt    
  0x00000001126258c2: hlt    
  0x00000001126258c3: hlt    
  0x00000001126258c4: hlt    
  0x00000001126258c5: hlt    
  0x00000001126258c6: hlt    
  0x00000001126258c7: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000112625740' size='888' address='0x00000001126255d0' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='800' dependencies_offset='880' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='591' iicount='591' stamp='0.192'/>
Decoding compiled method 0x0000000112625990:
Code:
[Entry Point]
[Constants]
  # {method}
<writer thread='7171'/>
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
 {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000112625b00: mov    0x8(%rsi),%r10d
  0x0000000112625b04: shl    $0x3,%r10
  0x0000000112625b08: cmp    %rax,%r10
  0x0000000112625b0b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112625b11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112625b1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112625b20: mov    %eax,-0x14000(%rsp)
  0x0000000112625b27: push   %rbp
  0x0000000112625b28: sub    $0x30,%rsp
  0x0000000112625b2c: movabs $0x129f48d00,%rax  ;   {metadata(method data for {method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000112625b36: mov    0xdc(%rax),%edi
  0x0000000112625b3c: add    $0x8,%edi
  0x0000000112625b3f: mov    %edi,0xdc(%rax)
  0x0000000112625b45: movabs $0x129ecb548,%rax  ;   {metadata({method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000112625b4f: and    $0x1ff8,%edi
  0x0000000112625b55: cmp    $0x0,%edi
  0x0000000112625b58: je     0x0000000112625b8a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000112625b5e: and    $0xffff,%edx
  0x0000000112625b64: movabs $0x76ab484e8,%rax  ;   {oop([I)}
  0x0000000112625b6e: movslq %edx,%rsi
  0x0000000112625b71: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x0000000112625b9e
  0x0000000112625b74: jae    0x0000000112625ba8
  0x0000000112625b7a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000112625b7e: add    $0x30,%rsp
  0x0000000112625b82: pop    %rbp
  0x0000000112625b83: test   %eax,-0x33d5a89(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112625b89: retq   
  0x0000000112625b8a: mov    %rax,0x8(%rsp)
  0x0000000112625b8f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112625b97: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000112625b9c: jmp    0x0000000112625b5e
  0x0000000112625b9e: callq  0x00000001126072c0  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000112625ba3: callq  0x00000001126072c0  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000112625ba8: mov    %rdx,(%rsp)
  0x0000000112625bac: callq  0x0000000112606c00  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000112625bb1: nop
  0x0000000112625bb2: nop
  0x0000000112625bb3: mov    0x2a8(%r15),%rax
  0x0000000112625bba: movabs $0x0,%r10
  0x0000000112625bc4: mov    %r10,0x2a8(%r15)
  0x0000000112625bcb: movabs $0x0,%r10
  0x0000000112625bd5: mov    %r10,0x2b0(%r15)
  0x0000000112625bdc: add    $0x30,%rsp
  0x0000000112625be0: pop    %rbp
  0x0000000112625be1: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112625be6: hlt    
  0x0000000112625be7: hlt    
  0x0000000112625be8: hlt    
  0x0000000112625be9: hlt    
  0x0000000112625bea: hlt    
  0x0000000112625beb: hlt    
  0x0000000112625bec: hlt    
  0x0000000112625bed: hlt    
  0x0000000112625bee: hlt    
  0x0000000112625bef: hlt    
  0x0000000112625bf0: hlt    
  0x0000000112625bf1: hlt    
  0x0000000112625bf2: hlt    
  0x0000000112625bf3: hlt    
  0x0000000112625bf4: hlt    
  0x0000000112625bf5: hlt    
  0x0000000112625bf6: hlt    
  0x0000000112625bf7: hlt    
  0x0000000112625bf8: hlt    
  0x0000000112625bf9: hlt    
  0x0000000112625bfa: hlt    
  0x0000000112625bfb: hlt    
  0x0000000112625bfc: hlt    
  0x0000000112625bfd: hlt    
  0x0000000112625bfe: hlt    
  0x0000000112625bff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112625c00: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112625c05: mov    %rsp,-0x28(%rsp)
  0x0000000112625c0a: sub    $0x80,%rsp
  0x0000000112625c11: mov    %rax,0x78(%rsp)
  0x0000000112625c16: mov    %rcx,0x70(%rsp)
  0x0000000112625c1b: mov    %rdx,0x68(%rsp)
  0x0000000112625c20: mov    %rbx,0x60(%rsp)
  0x0000000112625c25: mov    %rbp,0x50(%rsp)
  0x0000000112625c2a: mov    %rsi,0x48(%rsp)
  0x0000000112625c2f: mov    %rdi,0x40(%rsp)
  0x0000000112625c34: mov    %r8,0x38(%rsp)
  0x0000000112625c39: mov    %r9,0x30(%rsp)
  0x0000000112625c3e: mov    %r10,0x28(%rsp)
  0x0000000112625c43: mov    %r11,0x20(%rsp)
  0x0000000112625c48: mov    %r12,0x18(%rsp)
  0x0000000112625c4d: mov    %r13,0x10(%rsp)
  0x0000000112625c52: mov    %r14,0x8(%rsp)
  0x0000000112625c57: mov    %r15,(%rsp)
  0x0000000112625c5b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112625c65: movabs $0x112625c05,%rsi  ;   {internal_word}
  0x0000000112625c6f: mov    %rsp,%rdx
  0x0000000112625c72: and    $0xfffffffffffffff0,%rsp
  0x0000000112625c76: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112625c7b: hlt    
[Deopt Handler Code]
  0x0000000112625c7c: movabs $0x112625c7c,%r10  ;   {section_word}
  0x0000000112625c86: push   %r10
  0x0000000112625c88: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112625c8d: hlt    
  0x0000000112625c8e: hlt    
  0x0000000112625c8f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000112625b00' size='984' address='0x0000000112625990' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='477' iicount='477' stamp='0.193'/>
Decoding compiled method 0x0000000112626190:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129ecae70} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterDa
<writer thread='7171'/>
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
ta&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000112626340: mov    %eax,-0x14000(%rsp)
  0x0000000112626347: push   %rbp
  0x0000000112626348: sub    $0x30,%rsp
  0x000000011262634c: movabs $0x129f4b008,%rax  ;   {metadata(method data for {method} {0x0000000129ecae70} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000112626356: mov    0xdc(%rax),%edi
  0x000000011262635c: add    $0x8,%edi
  0x000000011262635f: mov    %edi,0xdc(%rax)
  0x0000000112626365: movabs $0x129ecae70,%rax  ;   {metadata({method} {0x0000000129ecae70} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000011262636f: and    $0x1ff8,%edi
  0x0000000112626375: cmp    $0x0,%edi
  0x0000000112626378: je     0x00000001126264fc  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000011262637e: mov    %rsi,%rax
  0x0000000112626381: shr    $0x8,%eax
  0x0000000112626384: cmp    $0x0,%eax
  0x0000000112626387: movabs $0x129f4b008,%rax  ;   {metadata(method data for {method} {0x0000000129ecae70} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000112626391: movabs $0x108,%rdi
  0x000000011262639b: jne    0x00000001126263ab
  0x00000001126263a1: movabs $0x118,%rdi
  0x00000001126263ab: mov    (%rax,%rdi,1),%rbx
  0x00000001126263af: lea    0x1(%rbx),%rbx
  0x00000001126263b3: mov    %rbx,(%rax,%rdi,1)
  0x00000001126263b7: je     0x00000001126264e6  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000001126263bd: shr    $0x10,%esi
  0x00000001126263c0: cmp    $0x0,%esi
  0x00000001126263c3: je     0x00000001126264be
  0x00000001126263c9: cmp    $0x1,%esi
  0x00000001126263cc: je     0x0000000112626496
  0x00000001126263d2: cmp    $0x2,%esi
  0x00000001126263d5: je     0x000000011262646e
  0x00000001126263db: cmp    $0xe,%esi
  0x00000001126263de: je     0x0000000112626446
  0x00000001126263e4: cmp    $0xf,%esi
  0x00000001126263e7: je     0x00000001126263f6
  0x00000001126263ed: cmp    $0x10,%esi
  0x00000001126263f0: jne    0x000000011262641e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00000001126263f6: xchg   %ax,%ax
  0x00000001126263f8: jmpq   0x0000000112626570  ;   {no_reloc}
  0x00000001126263fd: add    %al,(%rax)
  0x00000001126263ff: add    %al,(%rax)
  0x0000000112626401: add    %ah,0xf(%rsi)
  0x0000000112626404: (bad)  
  0x0000000112626405: add    %r8b,(%rax)
  0x0000000112626408: jmpq   0x000000011262658a  ; implicit exception: dispatches to 0x000000011262657a
  0x000000011262640d: nop
  0x000000011262640e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000112626412: add    $0x30,%rsp
  0x0000000112626416: pop    %rbp
  0x0000000112626417: test   %eax,-0x33d631d(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262641d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000011262641e: xchg   %ax,%ax
  0x0000000112626420: jmpq   0x00000001126265f1  ;   {no_reloc}
  0x0000000112626425: add    %al,(%rax)
  0x0000000112626427: add    %al,(%rax)
  0x0000000112626429: add    %ah,0xf(%rsi)
  0x000000011262642c: (bad)  
  0x000000011262642d: add    %r8b,(%rax)
  0x0000000112626430: jmpq   0x000000011262660b  ; implicit exception: dispatches to 0x00000001126265fb
  0x0000000112626435: nop
  0x0000000112626436: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000011262643a: add    $0x30,%rsp
  0x000000011262643e: pop    %rbp
  0x000000011262643f: test   %eax,-0x33d6345(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112626445: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000112626446: xchg   %ax,%ax
  0x0000000112626448: jmpq   0x0000000112626672  ;   {no_reloc}
  0x000000011262644d: add    %al,(%rax)
  0x000000011262644f: add    %al,(%rax)
  0x0000000112626451: add    %ah,0xf(%rsi)
  0x0000000112626454: (bad)  
  0x0000000112626455: add    %r8b,(%rax)
  0x0000000112626458: jmpq   0x000000011262668c  ; implicit exception: dispatches to 0x000000011262667c
  0x000000011262645d: nop
  0x000000011262645e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000112626462: add    $0x30,%rsp
  0x0000000112626466: pop    %rbp
  0x0000000112626467: test   %eax,-0x33d636d(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262646d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000011262646e: xchg   %ax,%ax
  0x0000000112626470: jmpq   0x00000001126266f3  ;   {no_reloc}
  0x0000000112626475: add    %al,(%rax)
  0x0000000112626477: add    %al,(%rax)
  0x0000000112626479: add    %ah,0xf(%rsi)
  0x000000011262647c: (bad)  
  0x000000011262647d: add    %r8b,(%rax)
  0x0000000112626480: jmpq   0x000000011262670d  ; implicit exception: dispatches to 0x00000001126266fd
  0x0000000112626485: nop
  0x0000000112626486: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000011262648a: add    $0x30,%rsp
  0x000000011262648e: pop    %rbp
  0x000000011262648f: test   %eax,-0x33d6395(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112626495: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000112626496: xchg   %ax,%ax
  0x0000000112626498: jmpq   0x0000000112626774  ;   {no_reloc}
  0x000000011262649d: add    %al,(%rax)
  0x000000011262649f: add    %al,(%rax)
  0x00000001126264a1: add    %ah,0xf(%rsi)
  0x00000001126264a4: (bad)  
  0x00000001126264a5: add    %r8b,(%rax)
  0x00000001126264a8: jmpq   0x000000011262678e  ; implicit exception: dispatches to 0x000000011262677e
  0x00000001126264ad: nop
  0x00000001126264ae: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00000001126264b2: add    $0x30,%rsp
  0x00000001126264b6: pop    %rbp
  0x00000001126264b7: test   %eax,-0x33d63bd(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126264bd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x00000001126264be: xchg   %ax,%ax
  0x00000001126264c0: jmpq   0x00000001126267f5  ;   {no_reloc}
  0x00000001126264c5: add    %al,(%rax)
  0x00000001126264c7: add    %al,(%rax)
  0x00000001126264c9: add    %ah,0xf(%rsi)
  0x00000001126264cc: (bad)  
  0x00000001126264cd: add    %r8b,(%rax)
  0x00000001126264d0: jmpq   0x000000011262680f  ; implicit exception: dispatches to 0x00000001126267ff
  0x00000001126264d5: nop
  0x00000001126264d6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x00000001126264da: add    $0x30,%rsp
  0x00000001126264de: pop    %rbp
  0x00000001126264df: test   %eax,-0x33d63e5(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126264e5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x00000001126264e6: movabs $0x76ab484d8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000001126264f0: add    $0x30,%rsp
  0x00000001126264f4: pop    %rbp
  0x00000001126264f5: test   %eax,-0x33d63fb(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126264fb: retq   
  0x00000001126264fc: mov    %rax,0x8(%rsp)
  0x0000000112626501: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112626509: callq  0x000000011260aea0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000011262650e: jmpq   0x000000011262637e
  0x0000000112626513: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011262651d: push   %rax
  0x000000011262651e: push   %rbx
  0x000000011262651f: mov    0x48(%rax),%rbx
  0x0000000112626523: push   %rdi
  0x0000000112626524: push   %rsi
  0x0000000112626525: push   %rdx
  0x0000000112626526: push   %rcx
  0x0000000112626527: push   %r8
  0x0000000112626529: push   %r9
  0x000000011262652b: push   %r10
  0x000000011262652d: mov    %rsp,%r10
  0x0000000112626530: and    $0xfffffffffffffff0,%rsp
  0x0000000112626534: push   %r10
  0x0000000112626536: push   %r11
  0x0000000112626538: mov    $0x103,%edi
  0x000000011262653d: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x0000000112626547: callq  *%r10
  0x000000011262654a: pop    %r11
  0x000000011262654c: pop    %rsp
  0x000000011262654d: pop    %r10
  0x000000011262654f: pop    %r9
  0x0000000112626551: pop    %r8
  0x0000000112626553: pop    %rcx
  0x0000000112626554: pop    %rdx
  0x0000000112626555: pop    %rsi
  0x0000000112626556: pop    %rdi
  0x0000000112626557: cmp    0x118(%rbx),%rax
  0x000000011262655e: pop    %rbx
  0x000000011262655f: pop    %rax
  0x0000000112626560: jne    0x0000000112626570
  0x0000000112626566: jmpq   0x0000000112626402
  0x000000011262656b: mov    $0xa535d00,%eax
  0x0000000112626570: callq  0x000000011260b8e0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000112626575: jmpq   0x00000001126263f8
  0x000000011262657a: callq  0x00000001126072c0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000011262657f: mov    0x0(%rax),%eax
  0x0000000112626585: mov    $0x6050b00,%eax
  0x000000011262658a: callq  0x0000000112608720  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000011262658f: jmpq   0x0000000112626408
  0x0000000112626594: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011262659e: push   %rax
  0x000000011262659f: push   %rbx
  0x00000001126265a0: mov    0x48(%rax),%rbx
  0x00000001126265a4: push   %rdi
  0x00000001126265a5: push   %rsi
  0x00000001126265a6: push   %rdx
  0x00000001126265a7: push   %rcx
  0x00000001126265a8: push   %r8
  0x00000001126265aa: push   %r9
  0x00000001126265ac: push   %r10
  0x00000001126265ae: mov    %rsp,%r10
  0x00000001126265b1: and    $0xfffffffffffffff0,%rsp
  0x00000001126265b5: push   %r10
  0x00000001126265b7: push   %r11
  0x00000001126265b9: mov    $0x103,%edi
  0x00000001126265be: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x00000001126265c8: callq  *%r10
  0x00000001126265cb: pop    %r11
  0x00000001126265cd: pop    %rsp
  0x00000001126265ce: pop    %r10
  0x00000001126265d0: pop    %r9
  0x00000001126265d2: pop    %r8
  0x00000001126265d4: pop    %rcx
  0x00000001126265d5: pop    %rdx
  0x00000001126265d6: pop    %rsi
  0x00000001126265d7: pop    %rdi
  0x00000001126265d8: cmp    0x118(%rbx),%rax
  0x00000001126265df: pop    %rbx
  0x00000001126265e0: pop    %rax
  0x00000001126265e1: jne    0x00000001126265f1
  0x00000001126265e7: jmpq   0x000000011262642a
  0x00000001126265ec: mov    $0xa535d00,%eax
  0x00000001126265f1: callq  0x000000011260b8e0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00000001126265f6: jmpq   0x0000000112626420
  0x00000001126265fb: callq  0x00000001126072c0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000112626600: mov    0x0(%rax),%eax
  0x0000000112626606: mov    $0x6050b00,%eax
  0x000000011262660b: callq  0x0000000112608720  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000112626610: jmpq   0x0000000112626430
  0x0000000112626615: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011262661f: push   %rax
  0x0000000112626620: push   %rbx
  0x0000000112626621: mov    0x48(%rax),%rbx
  0x0000000112626625: push   %rdi
  0x0000000112626626: push   %rsi
  0x0000000112626627: push   %rdx
  0x0000000112626628: push   %rcx
  0x0000000112626629: push   %r8
  0x000000011262662b: push   %r9
  0x000000011262662d: push   %r10
  0x000000011262662f: mov    %rsp,%r10
  0x0000000112626632: and    $0xfffffffffffffff0,%rsp
  0x0000000112626636: push   %r10
  0x0000000112626638: push   %r11
  0x000000011262663a: mov    $0x103,%edi
  0x000000011262663f: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x0000000112626649: callq  *%r10
  0x000000011262664c: pop    %r11
  0x000000011262664e: pop    %rsp
  0x000000011262664f: pop    %r10
  0x0000000112626651: pop    %r9
  0x0000000112626653: pop    %r8
  0x0000000112626655: pop    %rcx
  0x0000000112626656: pop    %rdx
  0x0000000112626657: pop    %rsi
  0x0000000112626658: pop    %rdi
  0x0000000112626659: cmp    0x118(%rbx),%rax
  0x0000000112626660: pop    %rbx
  0x0000000112626661: pop    %rax
  0x0000000112626662: jne    0x0000000112626672
  0x0000000112626668: jmpq   0x0000000112626452
  0x000000011262666d: mov    $0xa535d00,%eax
  0x0000000112626672: callq  0x000000011260b8e0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000112626677: jmpq   0x0000000112626448
  0x000000011262667c: callq  0x00000001126072c0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000112626681: mov    0x0(%rax),%eax
  0x0000000112626687: mov    $0x6050b00,%eax
  0x000000011262668c: callq  0x0000000112608720  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000112626691: jmpq   0x0000000112626458
  0x0000000112626696: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000001126266a0: push   %rax
  0x00000001126266a1: push   %rbx
  0x00000001126266a2: mov    0x48(%rax),%rbx
  0x00000001126266a6: push   %rdi
  0x00000001126266a7: push   %rsi
  0x00000001126266a8: push   %rdx
  0x00000001126266a9: push   %rcx
  0x00000001126266aa: push   %r8
  0x00000001126266ac: push   %r9
  0x00000001126266ae: push   %r10
  0x00000001126266b0: mov    %rsp,%r10
  0x00000001126266b3: and    $0xfffffffffffffff0,%rsp
  0x00000001126266b7: push   %r10
  0x00000001126266b9: push   %r11
  0x00000001126266bb: mov    $0x103,%edi
  0x00000001126266c0: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x00000001126266ca: callq  *%r10
  0x00000001126266cd: pop    %r11
  0x00000001126266cf: pop    %rsp
  0x00000001126266d0: pop    %r10
  0x00000001126266d2: pop    %r9
  0x00000001126266d4: pop    %r8
  0x00000001126266d6: pop    %rcx
  0x00000001126266d7: pop    %rdx
  0x00000001126266d8: pop    %rsi
  0x00000001126266d9: pop    %rdi
  0x00000001126266da: cmp    0x118(%rbx),%rax
  0x00000001126266e1: pop    %rbx
  0x00000001126266e2: pop    %rax
  0x00000001126266e3: jne    0x00000001126266f3
  0x00000001126266e9: jmpq   0x000000011262647a
  0x00000001126266ee: mov    $0xa535d00,%eax
  0x00000001126266f3: callq  0x000000011260b8e0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00000001126266f8: jmpq   0x0000000112626470
  0x00000001126266fd: callq  0x00000001126072c0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000112626702: mov    0x0(%rax),%eax
  0x0000000112626708: mov    $0x6050b00,%eax
  0x000000011262670d: callq  0x0000000112608720  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000112626712: jmpq   0x0000000112626480
  0x0000000112626717: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000112626721: push   %rax
  0x0000000112626722: push   %rbx
  0x0000000112626723: mov    0x48(%rax),%rbx
  0x0000000112626727: push   %rdi
  0x0000000112626728: push   %rsi
  0x0000000112626729: push   %rdx
  0x000000011262672a: push   %rcx
  0x000000011262672b: push   %r8
  0x000000011262672d: push   %r9
  0x000000011262672f: push   %r10
  0x0000000112626731: mov    %rsp,%r10
  0x0000000112626734: and    $0xfffffffffffffff0,%rsp
  0x0000000112626738: push   %r10
  0x000000011262673a: push   %r11
  0x000000011262673c: mov    $0x103,%edi
  0x0000000112626741: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x000000011262674b: callq  *%r10
  0x000000011262674e: pop    %r11
  0x0000000112626750: pop    %rsp
  0x0000000112626751: pop    %r10
  0x0000000112626753: pop    %r9
  0x0000000112626755: pop    %r8
  0x0000000112626757: pop    %rcx
  0x0000000112626758: pop    %rdx
  0x0000000112626759: pop    %rsi
  0x000000011262675a: pop    %rdi
  0x000000011262675b: cmp    0x118(%rbx),%rax
  0x0000000112626762: pop    %rbx
  0x0000000112626763: pop    %rax
  0x0000000112626764: jne    0x0000000112626774
  0x000000011262676a: jmpq   0x00000001126264a2
  0x000000011262676f: mov    $0xa535d00,%eax
  0x0000000112626774: callq  0x000000011260b8e0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000112626779: jmpq   0x0000000112626498
  0x000000011262677e: callq  0x00000001126072c0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000112626783: mov    0x0(%rax),%eax
  0x0000000112626789: mov    $0x6050b00,%eax
  0x000000011262678e: callq  0x0000000112608720  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000112626793: jmpq   0x00000001126264a8
  0x0000000112626798: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000001126267a2: push   %rax
  0x00000001126267a3: push   %rbx
  0x00000001126267a4: mov    0x48(%rax),%rbx
  0x00000001126267a8: push   %rdi
  0x00000001126267a9: push   %rsi
  0x00000001126267aa: push   %rdx
  0x00000001126267ab: push   %rcx
  0x00000001126267ac: push   %r8
  0x00000001126267ae: push   %r9
  0x00000001126267b0: push   %r10
  0x00000001126267b2: mov    %rsp,%r10
  0x00000001126267b5: and    $0xfffffffffffffff0,%rsp
  0x00000001126267b9: push   %r10
  0x00000001126267bb: push   %r11
  0x00000001126267bd: mov    $0x103,%edi
  0x00000001126267c2: movabs $0x7fffa0311b6a,%r10  ;   {runtime_call}
  0x00000001126267cc: callq  *%r10
  0x00000001126267cf: pop    %r11
  0x00000001126267d1: pop    %rsp
  0x00000001126267d2: pop    %r10
  0x00000001126267d4: pop    %r9
  0x00000001126267d6: pop    %r8
  0x00000001126267d8: pop    %rcx
  0x00000001126267d9: pop    %rdx
  0x00000001126267da: pop    %rsi
  0x00000001126267db: pop    %rdi
  0x00000001126267dc: cmp    0x118(%rbx),%rax
  0x00000001126267e3: pop    %rbx
  0x00000001126267e4: pop    %rax
  0x00000001126267e5: jne    0x00000001126267f5
  0x00000001126267eb: jmpq   0x00000001126264ca
  0x00000001126267f0: mov    $0xa535d00,%eax
  0x00000001126267f5: callq  0x000000011260b8e0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00000001126267fa: jmpq   0x00000001126264c0
  0x00000001126267ff: callq  0x00000001126072c0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000112626804: mov    0x0(%rax),%eax
  0x000000011262680a: mov    $0x6050b00,%eax
  0x000000011262680f: callq  0x0000000112608720  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000112626814: jmpq   0x00000001126264d0
  0x0000000112626819: nop
  0x000000011262681a: nop
  0x000000011262681b: mov    0x2a8(%r15),%rax
  0x0000000112626822: movabs $0x0,%r10
  0x000000011262682c: mov    %r10,0x2a8(%r15)
  0x0000000112626833: movabs $0x0,%r10
  0x000000011262683d: mov    %r10,0x2b0(%r15)
  0x0000000112626844: add    $0x30,%rsp
  0x0000000112626848: pop    %rbp
  0x0000000112626849: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262684e: hlt    
  0x000000011262684f: hlt    
  0x0000000112626850: hlt    
  0x0000000112626851: hlt    
  0x0000000112626852: hlt    
  0x0000000112626853: hlt    
  0x0000000112626854: hlt    
  0x0000000112626855: hlt    
  0x0000000112626856: hlt    
  0x0000000112626857: hlt    
  0x0000000112626858: hlt    
  0x0000000112626859: hlt    
  0x000000011262685a: hlt    
  0x000000011262685b: hlt    
  0x000000011262685c: hlt    
  0x000000011262685d: hlt    
  0x000000011262685e: hlt    
  0x000000011262685f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112626860: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112626865: mov    %rsp,-0x28(%rsp)
  0x000000011262686a: sub    $0x80,%rsp
  0x0000000112626871: mov    %rax,0x78(%rsp)
  0x0000000112626876: mov    %rcx,0x70(%rsp)
  0x000000011262687b: mov    %rdx,0x68(%rsp)
  0x0000000112626880: mov    %rbx,0x60(%rsp)
  0x0000000112626885: mov    %rbp,0x50(%rsp)
  0x000000011262688a: mov    %rsi,0x48(%rsp)
  0x000000011262688f: mov    %rdi,0x40(%rsp)
  0x0000000112626894: mov    %r8,0x38(%rsp)
  0x0000000112626899: mov    %r9,0x30(%rsp)
  0x000000011262689e: mov    %r10,0x28(%rsp)
  0x00000001126268a3: mov    %r11,0x20(%rsp)
  0x00000001126268a8: mov    %r12,0x18(%rsp)
  0x00000001126268ad: mov    %r13,0x10(%rsp)
  0x00000001126268b2: mov    %r14,0x8(%rsp)
  0x00000001126268b7: mov    %r15,(%rsp)
  0x00000001126268bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x00000001126268c5: movabs $0x112626865,%rsi  ;   {internal_word}
  0x00000001126268cf: mov    %rsp,%rdx
  0x00000001126268d2: and    $0xfffffffffffffff0,%rsp
  0x00000001126268d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126268db: hlt    
[Deopt Handler Code]
  0x00000001126268dc: movabs $0x1126268dc,%r10  ;   {section_word}
  0x00000001126268e6: push   %r10
  0x00000001126268e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126268ed: hlt    
  0x00000001126268ee: hlt    
  0x00000001126268ef: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000112626340' size='2680' address='0x0000000112626190' relocation_offset='296' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='477' iicount='477' stamp='0.198'/>
Decoding compiled method 0x0000000112626c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000112626de0: mov    0x8(%rsi),%r10d
  0x0000000112626de4: shl    $0x3,%r10
  0x0000000112626de8: cmp    %rax,%r10
  0x0000000112626deb: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112626df1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112626dfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112626e00: 
<writer thread='7171'/>
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
mov    %eax,-0x14000(%rsp)
  0x0000000112626e07: push   %rbp
  0x0000000112626e08: sub    $0x40,%rsp
  0x0000000112626e0c: movabs $0x129f3d0c0,%rdi  ;   {metadata(method data for {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112626e16: mov    0xdc(%rdi),%ebx
  0x0000000112626e1c: add    $0x8,%ebx
  0x0000000112626e1f: mov    %ebx,0xdc(%rdi)
  0x0000000112626e25: movabs $0x129f3b428,%rdi  ;   {metadata({method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112626e2f: and    $0x1ff8,%ebx
  0x0000000112626e35: cmp    $0x0,%ebx
  0x0000000112626e38: je     0x0000000112627046  ;*aload_0
                                                ; - java.io.DataInputStream::readUnsignedShort@0 (line 337)

  0x0000000112626e3e: mov    0xc(%rsi),%edi
  0x0000000112626e41: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@1 (line 337)

  0x0000000112626e45: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011262705d
  0x0000000112626e48: mov    %rdi,%rbx
  0x0000000112626e4b: movabs $0x129f3d0c0,%rax  ;   {metadata(method data for {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112626e55: mov    0x8(%rbx),%ebx
  0x0000000112626e58: shl    $0x3,%rbx
  0x0000000112626e5c: cmp    0x110(%rax),%rbx
  0x0000000112626e63: jne    0x0000000112626e72
  0x0000000112626e65: addq   $0x1,0x118(%rax)
  0x0000000112626e6d: jmpq   0x0000000112626ed8
  0x0000000112626e72: cmp    0x120(%rax),%rbx
  0x0000000112626e79: jne    0x0000000112626e88
  0x0000000112626e7b: addq   $0x1,0x128(%rax)
  0x0000000112626e83: jmpq   0x0000000112626ed8
  0x0000000112626e88: cmpq   $0x0,0x110(%rax)
  0x0000000112626e93: jne    0x0000000112626eac
  0x0000000112626e95: mov    %rbx,0x110(%rax)
  0x0000000112626e9c: movq   $0x1,0x118(%rax)
  0x0000000112626ea7: jmpq   0x0000000112626ed8
  0x0000000112626eac: cmpq   $0x0,0x120(%rax)
  0x0000000112626eb7: jne    0x0000000112626ed0
  0x0000000112626eb9: mov    %rbx,0x120(%rax)
  0x0000000112626ec0: movq   $0x1,0x128(%rax)
  0x0000000112626ecb: jmpq   0x0000000112626ed8
  0x0000000112626ed0: addq   $0x1,0x108(%rax)
  0x0000000112626ed8: mov    %rsi,0x20(%rsp)
  0x0000000112626edd: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)

  0x0000000112626ee0: nop
  0x0000000112626ee1: nop
  0x0000000112626ee2: nop
  0x0000000112626ee3: nop
  0x0000000112626ee4: nop
  0x0000000112626ee5: movabs $0xffffffffffffffff,%rax
  0x0000000112626eef: callq  0x0000000112553220  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {virtual_call}
  0x0000000112626ef4: mov    0x20(%rsp),%rsi
  0x0000000112626ef9: mov    0xc(%rsi),%esi
  0x0000000112626efc: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@9 (line 338)

  0x0000000112626f00: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ; implicit exception: dispatches to 0x0000000112627062
  0x0000000112626f03: mov    %rsi,%rdi
  0x0000000112626f06: movabs $0x129f3d0c0,%rbx  ;   {metadata(method data for {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112626f10: mov    0x8(%rdi),%edi
  0x0000000112626f13: shl    $0x3,%rdi
  0x0000000112626f17: cmp    0x140(%rbx),%rdi
  0x0000000112626f1e: jne    0x0000000112626f2d
  0x0000000112626f20: addq   $0x1,0x148(%rbx)
  0x0000000112626f28: jmpq   0x0000000112626f93
  0x0000000112626f2d: cmp    0x150(%rbx),%rdi
  0x0000000112626f34: jne    0x0000000112626f43
  0x0000000112626f36: addq   $0x1,0x158(%rbx)
  0x0000000112626f3e: jmpq   0x0000000112626f93
  0x0000000112626f43: cmpq   $0x0,0x140(%rbx)
  0x0000000112626f4e: jne    0x0000000112626f67
  0x0000000112626f50: mov    %rdi,0x140(%rbx)
  0x0000000112626f57: movq   $0x1,0x148(%rbx)
  0x0000000112626f62: jmpq   0x0000000112626f93
  0x0000000112626f67: cmpq   $0x0,0x150(%rbx)
  0x0000000112626f72: jne    0x0000000112626f8b
  0x0000000112626f74: mov    %rdi,0x150(%rbx)
  0x0000000112626f7b: movq   $0x1,0x158(%rbx)
  0x0000000112626f86: jmpq   0x0000000112626f93
  0x0000000112626f8b: addq   $0x1,0x138(%rbx)
  0x0000000112626f93: mov    %eax,0x28(%rsp)
  0x0000000112626f97: nop
  0x0000000112626f98: nop
  0x0000000112626f99: nop
  0x0000000112626f9a: nop
  0x0000000112626f9b: nop
  0x0000000112626f9c: nop
  0x0000000112626f9d: movabs $0xffffffffffffffff,%rax
  0x0000000112626fa7: callq  0x0000000112553220  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {virtual_call}
  0x0000000112626fac: mov    0x28(%rsp),%edx
  0x0000000112626fb0: or     %rax,%rdx
  0x0000000112626fb3: cmp    $0x0,%edx
  0x0000000112626fb6: movabs $0x129f3d0c0,%rdx  ;   {metadata(method data for {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112626fc0: movabs $0x168,%rsi
  0x0000000112626fca: jge    0x0000000112626fda
  0x0000000112626fd0: movabs $0x178,%rsi
  0x0000000112626fda: mov    (%rdx,%rsi,1),%rdi
  0x0000000112626fde: lea    0x1(%rdi),%rdi
  0x0000000112626fe2: mov    %rdi,(%rdx,%rsi,1)
  0x0000000112626fe6: jl     0x0000000112627004  ;*ifge
                                                ; - java.io.DataInputStream::readUnsignedShort@19 (line 339)

  0x0000000112626fec: mov    0x28(%rsp),%edx
  0x0000000112626ff0: shl    $0x8,%edx
  0x0000000112626ff3: add    %eax,%edx
  0x0000000112626ff5: mov    %rdx,%rax
  0x0000000112626ff8: add    $0x40,%rsp
  0x0000000112626ffc: pop    %rbp
  0x0000000112626ffd: test   %eax,-0x33d6f03(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112627003: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readUnsignedShort@38 (line 341)

  0x0000000112627004: nopl   0x0(%rax)
  0x0000000112627008: jmpq   0x0000000112627076  ;   {no_reloc}
  0x000000011262700d: add    %al,(%rax)
  0x000000011262700f: add    %al,(%rax)
  0x0000000112627011: add    %ch,%cl
  0x0000000112627013: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)

  0x0000000112627019: lock movabs $0x129f3d0c0,%rdi  ;   {metadata(method data for {method} {0x0000000129f3b428} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000112627024: addq   $0x1,0x188(%rdi)
  0x000000011262702c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)

  0x000000011262702f: mov    %rax,0x30(%rsp)
  0x0000000112627034: nop
  0x0000000112627035: nop
  0x0000000112627036: nop
  0x0000000112627037: callq  0x0000000112553020  ; OopMap{[48]=Oop off=604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)
                                                ;   {optimized virtual_call}
  0x000000011262703c: mov    0x30(%rsp),%rax
  0x0000000112627041: jmpq   0x00000001126270b5
  0x0000000112627046: mov    %rdi,0x8(%rsp)
  0x000000011262704b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112627053: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUnsignedShort@-1 (line 337)
                                                ;   {runtime_call}
  0x0000000112627058: jmpq   0x0000000112626e3e
  0x000000011262705d: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdi=Oop off=642}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {runtime_call}
  0x0000000112627062: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=647}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {runtime_call}
  0x0000000112627067: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112627071: mov    $0xa050f00,%eax
  0x0000000112627076: callq  0x00000001126082e0  ; OopMap{off=667}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x000000011262707b: jmp    0x0000000112627008
  0x000000011262707d: nop
  0x000000011262707e: nop
  0x000000011262707f: nop
  0x0000000112627080: mov    %rdx,%rdx
  0x0000000112627083: callq  0x0000000112607760  ; OopMap{off=680}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x0000000112627088: jmp    0x0000000112627017
  0x000000011262708a: nop
  0x000000011262708b: nop
  0x000000011262708c: mov    0x2a8(%r15),%rax
  0x0000000112627093: movabs $0x0,%r10
  0x000000011262709d: mov    %r10,0x2a8(%r15)
  0x00000001126270a4: movabs $0x0,%r10
  0x00000001126270ae: mov    %r10,0x2b0(%r15)
  0x00000001126270b5: add    $0x40,%rsp
  0x00000001126270b9: pop    %rbp
  0x00000001126270ba: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126270bf: hlt    
[Stub Code]
  0x00000001126270c0: nop                       ;   {no_reloc}
  0x00000001126270c1: nop
  0x00000001126270c2: nop
  0x00000001126270c3: nop
  0x00000001126270c4: nop
  0x00000001126270c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126270cf: jmpq   0x00000001126270cf  ;   {runtime_call}
  0x00000001126270d4: nop
  0x00000001126270d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126270df: jmpq   0x00000001126270df  ;   {runtime_call}
  0x00000001126270e4: nop
  0x00000001126270e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126270ef: jmpq   0x00000001126270ef  ;   {runtime_call}
[Exception Handler]
  0x00000001126270f4: callq  0x000000011260bf60  ;   {runtime_call}
  0x00000001126270f9: mov    %rsp,-0x28(%rsp)
  0x00000001126270fe: sub    $0x80,%rsp
  0x0000000112627105: mov    %rax,0x78(%rsp)
  0x000000011262710a: mov    %rcx,0x70(%rsp)
  0x000000011262710f: mov    %rdx,0x68(%rsp)
  0x0000000112627114: mov    %rbx,0x60(%rsp)
  0x0000000112627119: mov    %rbp,0x50(%rsp)
  0x000000011262711e: mov    %rsi,0x48(%rsp)
  0x0000000112627123: mov    %rdi,0x40(%rsp)
  0x0000000112627128: mov    %r8,0x38(%rsp)
  0x000000011262712d: mov    %r9,0x30(%rsp)
  0x0000000112627132: mov    %r10,0x28(%rsp)
  0x0000000112627137: mov    %r11,0x20(%rsp)
  0x000000011262713c: mov    %r12,0x18(%rsp)
  0x0000000112627141: mov    %r13,0x10(%rsp)
  0x0000000112627146: mov    %r14,0x8(%rsp)
  0x000000011262714b: mov    %r15,(%rsp)
  0x000000011262714f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112627159: movabs $0x1126270f9,%rsi  ;   {internal_word}
  0x0000000112627163: mov    %rsp,%rdx
  0x0000000112627166: and    $0xfffffffffffffff0,%rsp
  0x000000011262716a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262716f: hlt    
[Deopt Handler Code]
  0x0000000112627170: movabs $0x112627170,%r10  ;   {section_word}
  0x000000011262717a: push   %r10
  0x000000011262717c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112627181: hlt    
  0x0000000112627182: hlt    
  0x0000000112627183: hlt    
  0x0000000112627184: hlt    
  0x0000000112627185: hlt    
  0x0000000112627186: hlt    
  0x0000000112627187: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000112626de0' size='1816' address='0x0000000112626c50' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1344' scopes_pcs_offset='1480' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='591' iicount='591' stamp='0.200'/>
<writer thread='7171'/>
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112627390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112627500: mov    %eax,-0x14000(%rsp)
  0x0000000112627507: push   %rbp
  0x0000000112627508: sub    $0x30,%rsp
  0x000000011262750c: movabs $0x129f3de00,%rdi  ;   {metadata(method data for {method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000112627516: mov    0xdc(%rdi),%ebx
  0x000000011262751c: add    $0x8,%ebx
  0x000000011262751f: mov    %ebx,0xdc(%rdi)
  0x0000000112627525: movabs $0x129e09d10,%rdi  ;   {metadata({method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262752f: and    $0x1ff8,%ebx
  0x0000000112627535: cmp    $0x0,%ebx
  0x0000000112627538: je     0x000000011262764c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x000000011262753e: cmp    $0x0,%rsi
  0x0000000112627542: movabs $0x129f3de00,%rdi  ;   {metadata(method data for {method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262754c: movabs $0x108,%rbx
  0x0000000112627556: jne    0x0000000112627566
  0x000000011262755c: movabs $0x118,%rbx
  0x0000000112627566: mov    (%rdi,%rbx,1),%rax
  0x000000011262756a: lea    0x1(%rax),%rax
  0x000000011262756e: mov    %rax,(%rdi,%rbx,1)
  0x0000000112627572: jne    0x0000000112627592  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000112627578: movabs $0x129f3de00,%rsi  ;   {metadata(method data for {method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000112627582: incl   0x128(%rsi)
  0x0000000112627588: mov    $0x0,%esi
  0x000000011262758d: jmpq   0x000000011262763d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000112627592: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x0000000112627663
  0x0000000112627595: mov    %rsi,%rdi
  0x0000000112627598: movabs $0x129f3de00,%rbx  ;   {metadata(method data for {method} {0x0000000129e09d10} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000001126275a2: mov    0x8(%rdi),%edi
  0x00000001126275a5: shl    $0x3,%rdi
  0x00000001126275a9: cmp    0x148(%rbx),%rdi
  0x00000001126275b0: jne    0x00000001126275bf
  0x00000001126275b2: addq   $0x1,0x150(%rbx)
  0x00000001126275ba: jmpq   0x0000000112627625
  0x00000001126275bf: cmp    0x158(%rbx),%rdi
  0x00000001126275c6: jne    0x00000001126275d5
  0x00000001126275c8: addq   $0x1,0x160(%rbx)
  0x00000001126275d0: jmpq   0x0000000112627625
  0x00000001126275d5: cmpq   $0x0,0x148(%rbx)
  0x00000001126275e0: jne    0x00000001126275f9
  0x00000001126275e2: mov    %rdi,0x148(%rbx)
  0x00000001126275e9: movq   $0x1,0x150(%rbx)
  0x00000001126275f4: jmpq   0x0000000112627625
  0x00000001126275f9: cmpq   $0x0,0x158(%rbx)
  0x0000000112627604: jne    0x000000011262761d
  0x0000000112627606: mov    %rdi,0x158(%rbx)
  0x000000011262760d: movq   $0x1,0x160(%rbx)
  0x0000000112627618: jmpq   0x0000000112627625
  0x000000011262761d: addq   $0x1,0x140(%rbx)
  0x0000000112627625: movabs $0xffffffffffffffff,%rax
  0x000000011262762f: callq  0x0000000112553220  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000112627634: mov    %rax,%rsi
  0x0000000112627637: shr    $0x10,%esi
  0x000000011262763a: xor    %rax,%rsi
  0x000000011262763d: mov    %rsi,%rax
  0x0000000112627640: add    $0x30,%rsp
  0x0000000112627644: pop    %rbp
  0x0000000112627645: test   %eax,-0x33d754b(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262764b: retq   
  0x000000011262764c: mov    %rdi,0x8(%rsp)
  0x0000000112627651: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112627659: callq  0x000000011260aea0  ; OopMap{rsi=Oop
<writer thread='7171'/>
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
 off=350}                                       ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x000000011262765e: jmpq   0x000000011262753e
  0x0000000112627663: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000112627668: nop
  0x0000000112627669: nop
  0x000000011262766a: mov    0x2a8(%r15),%rax
  0x0000000112627671: movabs $0x0,%r10
  0x000000011262767b: mov    %r10,0x2a8(%r15)
  0x0000000112627682: movabs $0x0,%r10
  0x000000011262768c: mov    %r10,0x2b0(%r15)
  0x0000000112627693: add    $0x30,%rsp
  0x0000000112627697: pop    %rbp
  0x0000000112627698: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262769d: hlt    
  0x000000011262769e: hlt    
  0x000000011262769f: hlt    
[Stub Code]
  0x00000001126276a0: nop                       ;   {no_reloc}
  0x00000001126276a1: nop
  0x00000001126276a2: nop
  0x00000001126276a3: nop
  0x00000001126276a4: nop
  0x00000001126276a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126276af: jmpq   0x00000001126276af  ;   {runtime_call}
[Exception Handler]
  0x00000001126276b4: callq  0x000000011260bf60  ;   {runtime_call}
  0x00000001126276b9: mov    %rsp,-0x28(%rsp)
  0x00000001126276be: sub    $0x80,%rsp
  0x00000001126276c5: mov    %rax,0x78(%rsp)
  0x00000001126276ca: mov    %rcx,0x70(%rsp)
  0x00000001126276cf: mov    %rdx,0x68(%rsp)
  0x00000001126276d4: mov    %rbx,0x60(%rsp)
  0x00000001126276d9: mov    %rbp,0x50(%rsp)
  0x00000001126276de: mov    %rsi,0x48(%rsp)
  0x00000001126276e3: mov    %rdi,0x40(%rsp)
  0x00000001126276e8: mov    %r8,0x38(%rsp)
  0x00000001126276ed: mov    %r9,0x30(%rsp)
  0x00000001126276f2: mov    %r10,0x28(%rsp)
  0x00000001126276f7: mov    %r11,0x20(%rsp)
  0x00000001126276fc: mov    %r12,0x18(%rsp)
  0x0000000112627701: mov    %r13,0x10(%rsp)
  0x0000000112627706: mov    %r14,0x8(%rsp)
  0x000000011262770b: mov    %r15,(%rsp)
  0x000000011262770f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112627719: movabs $0x1126276b9,%rsi  ;   {internal_word}
  0x0000000112627723: mov    %rsp,%rdx
  0x0000000112627726: and    $0xfffffffffffffff0,%rsp
  0x000000011262772a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262772f: hlt    
[Deopt Handler Code]
  0x0000000112627730: movabs $0x112627730,%r10  ;   {section_word}
  0x000000011262773a: push   %r10
  0x000000011262773c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112627741: hlt    
  0x0000000112627742: hlt    
  0x0000000112627743: hlt    
  0x0000000112627744: hlt    
  0x0000000112627745: hlt    
  0x0000000112627746: hlt    
  0x0000000112627747: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000112627500' size='1176' address='0x0000000112627390' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='543' iicount='543' stamp='0.202'/>
<writer thread='7171'/>
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='28' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='116' backedge_count='6144' iicount='116' level='3' stamp='0.203' comment='tiered' hot_count='116'/>
<task_queued compile_id='29' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='256' iicount='256' level='3' stamp='0.203' comment='tiered' hot_count='256'/>
<task_queued compile_id='30' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='256' iicount='256' level='3' stamp='0.203' comment='tiered' hot_count='256'/>
<task_queued compile_id='31' method='java/lang/Character toLowerCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.203' comment='tiered' hot_count='384'/>
<task_queued compile_id='32' method='java/lang/Character toLowerCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.203' comment='tiered' hot_count='384'/>
<task_queued compile_id='33' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='384' iicount='384' level='3' stamp='0.203' comment='tiered' hot_count='384'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112627fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;
  # this:     rsi:rsi   = &apos;java/io/UnixFileSystem&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x00000001126281a0: mov    0x8(%rsi),%r10d
  0x00000001126281a4: shl    $0x3,%r10
  0x00000001126281a8: cmp    %rax,%r10
  0x00000001126281ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x00000001126281b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001126281bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001126281c0: mov    %eax,-0x14000(%rsp)
  0x00000001126281c7: push   %rbp
  0x00000001126281c8: sub    $0x80,%rsp
  0x00000001126281cf: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126281d9: mov    0xdc(%rcx),%r8d
  0x00000001126281e0: add    $0x8,%r8d
  0x00000001126281e4: mov    %r8d,0xdc(%rcx)
  0x00000001126281eb: movabs $0x129e6dcf0,%rcx  ;   {metadata({method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126281f5: and    $0x1ff8,%r8d
  0x00000001126281fc: cmp    $0x0,%r8d
  0x0000000112628200: je     0x000000011262864e  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x0000000112628206: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x0000000112628665
  0x0000000112628209: mov    %rdx,%rcx
  0x000000011262820c: movabs $0x129f55f20,%r8   ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x0000000112628216: mov    0x8(%rcx),%ecx
  0x0000000112628219: shl    $0x3,%rcx
  0x000000011262821d: cmp    0x110(%r8),%rcx
  0x0000000112628224: jne    0x0000000112628233
  0x0000000112628226: addq   $0x1,0x118(%r8)
  0x000000011262822e: jmpq   0x0000000112628299
  0x0000000112628233: cmp    0x120(%r8),%rcx
  0x000000011262823a: jne    0x0000000112628249
  0x000000011262823c: addq   $0x1,0x128(%r8)
  0x0000000112628244: jmpq   0x0000000112628299
  0x0000000112628249: cmpq   $0x0,0x110(%r8)
  0x0000000112628254: jne    0x000000011262826d
  0x0000000112628256: mov    %rcx,0x110(%r8)
  0x000000011262825d: movq   $0x1,0x118(%r8)
  0x0000000112628268: jmpq   0x0000000112628299
  0x000000011262826d: cmpq   $0x0,0x120(%r8)
  0x0000000112628278: jne    0x0000000112628291
  0x000000011262827a: mov    %rcx,0x120(%r8)
  0x0000000112628281: movq   $0x1,0x128(%r8)
  0x000000011262828c: jmpq   0x0000000112628299
  0x0000000112628291: addq   $0x1,0x108(%r8)
  0x0000000112628299: movabs $0x129ed91d8,%rcx  ;   {metadata(method data for {method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126282a3: mov    0xdc(%rcx),%r8d
  0x00000001126282aa: add    $0x8,%r8d
  0x00000001126282ae: mov    %r8d,0xdc(%rcx)
  0x00000001126282b5: movabs $0x129d10c30,%rcx  ;   {metadata({method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126282bf: and    $0x7ffff8,%r8d
  0x00000001126282c6: cmp    $0x0,%r8d
  0x00000001126282ca: je     0x000000011262866a
  0x00000001126282d0: mov    0xc(%rdx),%ecx
  0x00000001126282d3: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x00000001126282d7: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x0000000112628681
  0x00000001126282da: mov    $0x0,%ebx
  0x00000001126282df: mov    $0x0,%ecx          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x00000001126282e4: nopl   0x0(%rax)
  0x00000001126282e8: cmp    %edi,%ebx
  0x00000001126282ea: movabs $0x129f55f20,%r8   ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126282f4: movabs $0x138,%rax
  0x00000001126282fe: jge    0x000000011262830e
  0x0000000112628304: movabs $0x148,%rax
  0x000000011262830e: mov    (%r8,%rax,1),%r9
  0x0000000112628312: lea    0x1(%r9),%r9
  0x0000000112628316: mov    %r9,(%r8,%rax,1)
  0x000000011262831a: jge    0x000000011262853a  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x0000000112628320: mov    %rdx,%r8
  0x0000000112628323: movabs $0x129f55f20,%rax  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011262832d: mov    0x8(%r8),%r8d
  0x0000000112628331: shl    $0x3,%r8
  0x0000000112628335: cmp    0x160(%rax),%r8
  0x000000011262833c: jne    0x000000011262834b
  0x000000011262833e: addq   $0x1,0x168(%rax)
  0x0000000112628346: jmpq   0x00000001126283b1
  0x000000011262834b: cmp    0x170(%rax),%r8
  0x0000000112628352: jne    0x0000000112628361
  0x0000000112628354: addq   $0x1,0x178(%rax)
  0x000000011262835c: jmpq   0x00000001126283b1
  0x0000000112628361: cmpq   $0x0,0x160(%rax)
  0x000000011262836c: jne    0x0000000112628385
  0x000000011262836e: mov    %r8,0x160(%rax)
  0x0000000112628375: movq   $0x1,0x168(%rax)
  0x0000000112628380: jmpq   0x00000001126283b1
  0x0000000112628385: cmpq   $0x0,0x170(%rax)
  0x0000000112628390: jne    0x00000001126283a9
  0x0000000112628392: mov    %r8,0x170(%rax)
  0x0000000112628399: movq   $0x1,0x178(%rax)
  0x00000001126283a4: jmpq   0x00000001126283b1
  0x00000001126283a9: addq   $0x1,0x158(%rax)
  0x00000001126283b1: movabs $0x129e8bbd8,%r8   ;   {metadata(method data for {method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000001126283bb: mov    0xdc(%r8),%eax
  0x00000001126283c2: add    $0x8,%eax
  0x00000001126283c5: mov    %eax,0xdc(%r8)
  0x00000001126283cc: movabs $0x129d10d80,%r8   ;   {metadata({method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000001126283d6: and    $0x7ffff8,%eax
  0x00000001126283dc: cmp    $0x0,%eax
  0x00000001126283df: je     0x0000000112628686
  0x00000001126283e5: cmp    $0x0,%ebx
  0x00000001126283e8: movabs $0x129e8bbd8,%r8   ;   {metadata(method data for {method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000001126283f2: movabs $0x108,%rax
  0x00000001126283fc: jl     0x000000011262840c
  0x0000000112628402: movabs $0x118,%rax
  0x000000011262840c: mov    (%r8,%rax,1),%r9
  0x0000000112628410: lea    0x1(%r9),%r9
  0x0000000112628414: mov    %r9,(%r8,%rax,1)
  0x0000000112628418: jl     0x00000001126285f3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011262841e: mov    0xc(%rdx),%r8d
  0x0000000112628422: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x0000000112628426: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000011262869d
  0x000000011262842a: cmp    %eax,%ebx
  0x000000011262842c: movabs $0x129e8bbd8,%rax  ;   {metadata(method data for {method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000112628436: movabs $0x128,%r9
  0x0000000112628440: jl     0x0000000112628450
  0x0000000112628446: movabs $0x138,%r9
  0x0000000112628450: mov    (%rax,%r9,1),%r11
  0x0000000112628454: lea    0x1(%r11),%r11
  0x0000000112628458: mov    %r11,(%rax,%r9,1)
  0x000000011262845c: jge    0x00000001126285f3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x0000000112628462: movslq %ebx,%rax
  0x0000000112628465: cmp    0xc(%r8),%ebx
  0x0000000112628469: jae    0x00000001126286a2
  0x000000011262846f: movzwl 0x10(%r8,%rax,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x0000000112628475: cmp    $0x2f,%ecx
  0x0000000112628478: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x0000000112628482: movabs $0x188,%rax
  0x000000011262848c: jne    0x000000011262849c
  0x0000000112628492: movabs $0x198,%rax
  0x000000011262849c: mov    (%rcx,%rax,1),%r9
  0x00000001126284a0: lea    0x1(%r9),%r9
  0x00000001126284a4: mov    %r9,(%rcx,%rax,1)
  0x00000001126284a8: jne    0x00000001126284e8  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x00000001126284ae: cmp    $0x2f,%r8d
  0x00000001126284b2: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126284bc: movabs $0x1a8,%rax
  0x00000001126284c6: jne    0x00000001126284d6
  0x00000001126284cc: movabs $0x1b8,%rax
  0x00000001126284d6: mov    (%rcx,%rax,1),%r9
  0x00000001126284da: lea    0x1(%r9),%r9
  0x00000001126284de: mov    %r9,(%rcx,%rax,1)
  0x00000001126284e2: je     0x00000001126285bd  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x00000001126284e8: inc    %ebx
  0x00000001126284ea: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126284f4: mov    0xe0(%rcx),%eax
  0x00000001126284fa: add    $0x8,%eax
  0x00000001126284fd: mov    %eax,0xe0(%rcx)
  0x0000000112628503: movabs $0x129e6dcf0,%rcx  ;   {metadata({method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011262850d: and    $0xfff8,%eax
  0x0000000112628513: cmp    $0x0,%eax
  0x0000000112628516: je     0x00000001126286ab  ; OopMap{rsi=Oop rdx=Oop off=892}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000011262851c: test   %eax,-0x33d8422(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112628522: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011262852c: incl   0x1d8(%rcx)
  0x0000000112628532: mov    %r8,%rcx
  0x0000000112628535: jmpq   0x00000001126282e8  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000011262853a: cmp    $0x2f,%ecx
  0x000000011262853d: movabs $0x129f55f20,%rcx  ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x0000000112628547: movabs $0x1f0,%r8
  0x0000000112628551: jne    0x0000000112628561
  0x0000000112628557: movabs $0x200,%r8
  0x0000000112628561: mov    (%rcx,%r8,1),%rbx
  0x0000000112628565: lea    0x1(%rbx),%rbx
  0x0000000112628569: mov    %rbx,(%rcx,%r8,1)
  0x000000011262856d: jne    0x00000001126285ab  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x0000000112628573: mov    %rsi,%rcx
  0x0000000112628576: movabs $0x129f55f20,%r8   ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x0000000112628580: addq   $0x1,0x210(%r8)
  0x0000000112628588: mov    %rdi,%r8
  0x000000011262858b: dec    %r8d
  0x000000011262858e: mov    %rdi,%rcx          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x0000000112628591: nop
  0x0000000112628592: nop
  0x0000000112628593: nop
  0x0000000112628594: nop
  0x0000000112628595: nop
  0x0000000112628596: nop
  0x0000000112628597: callq  0x0000000112553020  ; OopMap{off=1020}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000011262859c: add    $0x80,%rsp
  0x00000001126285a3: pop    %rbp
  0x00000001126285a4: test   %eax,-0x33d84aa(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126285aa: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x00000001126285ab: mov    %rdx,%rax
  0x00000001126285ae: add    $0x80,%rsp
  0x00000001126285b5: pop    %rbp
  0x00000001126285b6: test   %eax,-0x33d84bc(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126285bc: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x00000001126285bd: mov    %rsi,%rcx
  0x00000001126285c0: movabs $0x129f55f20,%r8   ;   {metadata(method data for {method} {0x0000000129e6dcf0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x00000001126285ca: addq   $0x1,0x1c8(%r8)
  0x00000001126285d2: dec    %ebx
  0x00000001126285d4: mov    %rdi,%rcx
  0x00000001126285d7: mov    %rbx,%r8           ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x00000001126285da: nop
  0x00000001126285db: nop
  0x00000001126285dc: nop
  0x00000001126285dd: nop
  0x00000001126285de: nop
  0x00000001126285df: callq  0x0000000112553020  ; OopMap{off=1092}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x00000001126285e4: add    $0x80,%rsp
  0x00000001126285eb: pop    %rbp
  0x00000001126285ec: test   %eax,-0x33d84f2(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126285f2: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x00000001126285f3: mov    %ecx,0x6c(%rsp)
  0x00000001126285f7: mov    %edi,0x68(%rsp)
  0x00000001126285fb: mov    %rdx,0x60(%rsp)
  0x0000000112628600: mov    %rsi,0x58(%rsp)
  0x0000000112628605: data32 xchg %ax,%ax
  0x0000000112628608: jmpq   0x00000001126286d1  ;   {no_reloc}
  0x000000011262860d: add    %al,(%rax)
  0x000000011262860f: add    %al,(%rax)
  0x0000000112628611: add    %ch,%cl
  0x0000000112628613: (bad)  
  0x0000000112628614: add    %al,(%rax)
  0x0000000112628616: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x0000000112628619: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x0000000129d10d80} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011262861c: fdivrs 0x129e8(%rbx)
  0x0000000112628622: add    %al,(%rax)
  0x0000000112628624: addq   $0x1,0x148(%r9)
  0x000000011262862c: mov    %rbx,%rdx
  0x000000011262862f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 646)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x0000000112628632: mov    %ebx,0x70(%rsp)
  0x0000000112628636: mov    %rax,0x50(%rsp)
  0x000000011262863b: nop
  0x000000011262863c: nop
  0x000000011262863d: nop
  0x000000011262863e: nop
  0x000000011262863f: callq  0x0000000112553020  ; OopMap{[80]=Oop [96]=Oop [88]=Oop off=1188}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 646)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x0000000112628644: mov    0x50(%rsp),%rax
  0x0000000112628649: jmpq   0x0000000112628713
  0x000000011262864e: mov    %rcx,0x8(%rsp)
  0x0000000112628653: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262865b: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=1216}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x0000000112628660: jmpq   0x0000000112628206
  0x0000000112628665: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdx=Oop off=1226}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000011262866a: mov    %rcx,0x8(%rsp)
  0x000000011262866f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112628677: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=1244}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000011262867c: jmpq   0x00000001126282d0
  0x0000000112628681: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdx=Oop off=1254}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x0000000112628686: mov    %r8,0x8(%rsp)
  0x000000011262868b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112628693: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=1272}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x0000000112628698: jmpq   0x00000001126283e5
  0x000000011262869d: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1282}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x00000001126286a2: mov    %rbx,(%rsp)
  0x00000001126286a6: callq  0x0000000112606c00  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1291}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x00000001126286ab: mov    %rcx,0x8(%rsp)
  0x00000001126286b0: movq   $0x36,(%rsp)
  0x00000001126286b8: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=1309}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x00000001126286bd: jmpq   0x000000011262851c
  0x00000001126286c2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001126286cc: mov    $0xa050f00,%eax
  0x00000001126286d1: callq  0x00000001126082e0  ; OopMap{[88]=Oop [96]=Oop off=1334}
                                                ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x00000001126286d6: jmpq   0x0000000112628608
  0x00000001126286db: mov    %rdx,%rdx
  0x00000001126286de: callq  0x0000000112607760  ; OopMap{[88]=Oop [96]=Oop off=1347}
                                                ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x00000001126286e3: jmpq   0x0000000112628617
  0x00000001126286e8: nop
  0x00000001126286e9: nop
  0x00000001126286ea: mov    0x2a8(%r15),%rax
  0x00000001126286f1: movabs $0x0,%r10
  0x00000001126286fb: mov    %r10,0x2a8(%r15)
  0x0000000112628702: movabs $0x0,%r10
  0x000000011262870c: mov    %r10,0x2b0(%r15)
  0x0000000112628713: add    $0x80,%rsp
  0x000000011262871a: pop    %rbp
  0x000000011262871b: jmpq   0x0000000112606860  ;   {runtime_call}
[Stub Code]
  0x0000000112628720: nop                       ;   {no_reloc}
  0x0000000112628721: nop
  0x0000000112628722: nop
  0x0000000112628723: nop
  0x0000000112628724: nop
  0x0000000112628725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262872f: jmpq   0x000000011262872f  ;   {runtime_call}
  0x0000000112628734: nop
  0x0000000112628735: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262873f: jmpq   0x000000011262873f  ;   {runtime_call}
  0x0000000112628744: nop
  0x0000000112628745: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262874f: jmpq   0x000000011262874f  ;   {runtime_call}
[Exception Handler]
  0x0000000112628754: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112628759: mov    %rsp,-0x28(%rsp)
  0x000000011262875e: sub    $0x80,%rsp
  0x0000000112628765: mov    %rax,0x78(%rsp)
  0x000000011262876a: mov    %rcx,0x70(%rsp)
  0x000000011262876f: mov    %rdx,0x68(%rsp)
  0x0000000112628774: mov    %rbx,0x60(%rsp)
  0x0000000112628779: mov    %rbp,0x50(%rsp)
  0x000000011262877e: mov    %rsi,0x48(%rsp)
  0x0000000112628783: mov    %rdi,0x40(%rsp)
  0x0000000112628788: mov    %r8,0x38(%rsp)
  0x000000011262878d: mov    %r9,0x30(%rsp)
  0x0000000112628792: mov    %r10,0x28(%rsp)
  0x0000000112628797: mov    %r11,0x20(%rsp)
  0x000000011262879c: mov    %r12,0x18(%rsp)
  0x00000001126287a1: mov    %r13,0x10(%rsp)
  0x00000001126287a6: mov    %r14,0x8(%rsp)
  0x00000001126287ab: mov    %r15,(%rsp)
  0x00000001126287af: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x00000001126287b9: movabs $0x112628759,%rsi  ;   {internal_word}
  0x00000001126287c3: mov    %rsp,%rdx
  0x00000001126287c6: and    $0xfffffffffffffff0,%rsp
  0x00000001126287ca: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126287cf: hlt    
[Deopt Handler Code]
  0x00000001126287d0: movabs $0x1126287d0,%r10  ;   {section_word}
  0x00000001126287da: push   %r10
  0x00000001126287dc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126287e1: hlt    
  0x00000001126287e2: hlt    
  0x00000001126287e3: hlt    
  0x00000001126287e4: hlt    
  0x00000001126287e5: hlt    
  0x00000001126287e6: hlt    
  0x00000001126287e7: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x00000001126281a0' size='3136' address='0x0000000112627fd0' relocation_offset='296' insts_offset='464' stub_offset='1872' scopes_data_offset='2104' scopes_pcs_offset='2488' dependencies_offset='3096' nul_chk_table_offset='3104' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='123' backedge_count='6462' iicount='123' stamp='0.207'/>
<writer thread='7171'/>
<task_queued compile_id='34' method='java/lang/String hashCode ()I' bytes='55' count='1067' backedge_count='20480' iicount='1067' stamp='0.207' comment='tiered' hot_count='1067'/>
<task_queued compile_id='35' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3584' iicount='3584' level='1' stamp='0.207' comment='tiered' hot_count='3584'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112628c50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129da7198} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000112628de0: mov    %eax,-0x14000(%rsp)
  0x0000000112628de7: push   %rbp
  0x0000000112628de8: sub    $0x40,%rsp
  0x0000000112628dec: movabs $0x129f56590,%rdi  ;   {metadata(method data for {method} {0x0000000129da7198} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628df6: mov    0xdc(%rdi),%ebx
  0x0000000112628dfc: add    $0x8,%ebx
  0x0000000112628dff: mov    %ebx,0xdc(%rdi)
  0x0000000112628e05: movabs $0x129da7198,%rdi  ;   {metadata({method} {0x0000000129da7198} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e0f: and    $0x1ff8,%ebx
  0x0000000112628e15: cmp    $0x0,%ebx
  0x0000000112628e18: je     0x0000000112628f46  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x0000000112628e1e: movabs $0x129f56590,%rdi  ;   {metadata(method data for {method} {0x0000000129da7198} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e28: addq   $0x1,0x108(%rdi)
  0x0000000112628e30: movabs $0x129f566e8,%rdi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e3a: mov    0xdc(%rdi),%ebx
  0x0000000112628e40: add    $0x8,%ebx
  0x0000000112628e43: mov    %ebx,0xdc(%rdi)
  0x0000000112628e49: movabs $0x129da7230,%rdi  ;   {metadata({method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e53: and    $0x7ffff8,%ebx
  0x0000000112628e59: cmp    $0x0,%ebx
  0x0000000112628e5c: je     0x0000000112628f5d
  0x0000000112628e62: movabs $0x129f566e8,%rdi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e6c: addq   $0x1,0x108(%rdi)
  0x0000000112628e74: mov    %rsi,%rdi
  0x0000000112628e77: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000112628e7a: mov    %edi,0x28(%rsp)
  0x0000000112628e7e: nop
  0x0000000112628e7f: callq  0x0000000112553420  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x0000000112628e84: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000112628f74
  0x0000000112628e87: mov    %rax,%rdx
  0x0000000112628e8a: movabs $0x129f566e8,%rsi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000112628e94: mov    0x8(%rdx),%edx
  0x0000000112628e97: shl    $0x3,%rdx
  0x0000000112628e9b: cmp    0x120(%rsi),%rdx
  0x0000000112628ea2: jne    0x0000000112628eb1
  0x0000000112628ea4: addq   $0x1,0x128(%rsi)
  0x0000000112628eac: jmpq   0x0000000112628f17
  0x0000000112628eb1: cmp    0x130(%rsi),%rdx
  0x0000000112628eb8: jne    0x0000000112628ec7
  0x0000000112628eba: addq   $0x1,0x138(%rsi)
  0x0000000112628ec2: jmpq   0x0000000112628f17
  0x0000000112628ec7: cmpq   $0x0,0x120(%rsi)
  0x0000000112628ed2: jne    0x0000000112628eeb
  0x0000000112628ed4: mov    %rdx,0x120(%rsi)
  0x0000000112628edb: movq   $0x1,0x128(%rsi)
  0x0000000112628ee6: jmpq   0x0000000112628f17
  0x0000000112628eeb: cmpq   $0x0,0x130(%rsi)
  0x0000000112628ef6: jne    0x0000000112628f0f
  0x0000000112628ef8: mov    %rdx,0x130(%rsi)
  0x0000000112628eff: movq   $0x1,0x138(%rsi)
  0x0000000112628f0a: jmpq   0x0000000112628f17
  0x0000000112628f0f: addq   $0x1,0x118(%rsi)
  0x0000000112628f17: mov    0x28(%rsp),%edx
  0x0000000112628f1b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000112628f1e: nop
  0x0000000112628f1f: nop
  0x0000000112628f20: nop
  0x0000000112628f21: nop
  0x0000000112628f22: nop
  0x0000000112628f23: nop
  0x0000000112628f24: nop
  0x0000000112628f25: movabs $0xffffffffffffffff,%rax
  0x0000000112628f2f: callq  0x0000000112553220  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x0000000112628f34: and    $0xffff,%eax
  0x0000000112628f3a: add    $0x40,%rsp
  0x0000000112628f3e: pop    %rbp
  0x0000000112628f3f: test   %eax,-0x33d8e45(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112628f45: retq   
  0x0000000112628f46: mov    %rdi,0x8(%rsp)
  0x0000000112628f4b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112628f53: callq  0x000000011260aea0  ; OopMap{off=376}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x0000000112628f58: jmpq   0x0000000112628e1e
  0x0000000112628f5d: mov    %rdi,0x8(%rsp)
  0x0000000112628f62: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112628f6a: callq  0x000000011260aea0  ; OopMap{off=399}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000112628f6f: jmpq   0x0000000112628e62
  0x0000000112628f74: callq  0x00000001126072c0  ; OopMap{rax=Oop off=409}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000112628f79: nop
  0x0000000112628f7a: nop
  0x0000000112628f7b: mov    0x2a8(%r15),%rax
  0x0000000112628f82: movabs $0x0,%r10
  0x0000000112628f8c: mov    %r10,0x2a8(%r15)
  0x0000000112628f93: movabs $0x0,%r10
  0x0000000112628f9d: mov    %r10,0x2b0(%r15)
  0x0000000112628fa4: add    $0x40,%rsp
  0x0000000112628fa8: pop    %rbp
  0x0000000112628fa9: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112628fae: hlt    
  0x0000000112628faf: hlt    
  0x0000000112628fb0: hlt    
  0x0000000112628fb1: hlt    
  0x0000000112628fb2: hlt    
  0x0000000112628fb3: hlt    
  0x0000000112628fb4: hlt    
  0x0000000112628fb5: hlt    
  0x0000000112628fb6: hlt    
  0x0000000112628fb7: hlt    
  0x0000000112628fb8: hlt    
  0x0000000112628fb9: hlt    
  0x0000000112628fba: hlt    
  0x0000000112628fbb: hlt    
  0x0000000112628fbc: hlt    
  0x0000000112628fbd: hlt    
  0x0000000112628fbe: hlt    
  0x0000000112628fbf: hlt    
[Stub Code]
  0x0000000112628fc0: nop                       ;   {no_reloc}
  0x0000000112628fc1: nop
  0x0000000112628fc2: nop
  0x0000000112628fc3: nop
  0x0000000112628fc4: nop
  0x0000000112628fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112628fcf: jmpq   0x0000000112628fcf  ;   {runtime_call}
  0x0000000112628fd4: nop
  0x0000000112628fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112628fdf: jmpq   0x0000000112628fdf  ;   {runtime_call}
[Exception Handler]
  0x0000000112628fe4: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112628fe9: mov    %rsp,-0x28(%rsp)
  0x0000000112628fee: sub    $0x80,%rsp
  0x0000000112628ff5: mov    %rax,0x78(%rsp)
  0x0000000112628ffa: mov    %rcx,0x70(%rsp)
  0x0000000112628fff: mov    %rdx,0x68(%rsp)
  0x0000000112629004: mov    %rbx,0x60(%rsp)
  0x0000000112629009: mov    %rbp,0x50(%rsp)
  0x000000011262900e: mov    %rsi,0x48(%rsp)
  0x0000000112629013: mov    %rdi,0x40(%rsp)
  0x0000000112629018: mov    %r8,0x38(%rsp)
  0x000000011262901d: mov    %r9,0x30(%rsp)
  0x0000000112629022: mov    %r10,0x28(%rsp)
  0x0000000112629027: mov    %r11,0x20(%rsp)
  0x000000011262902c: mov    %r12,0x18(%rsp)
  0x0000000112629031: mov    %r13,0x10(%rsp)
  0x0000000112629036: mov    %r14,0x8(%rsp)
  0x000000011262903b: mov    %r15,(%rsp)
  0x000000011262903f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112629049: movabs $0x112628fe9,%rsi  ;   {internal_word}
  0x0000000112629053: mov    %rsp,%rdx
  0x0000000112629056: and    $0xfffffffffffffff0,%rsp
  0x000000011262905a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262905f: hlt    
[Deopt Handler Code]
  0x0000000112629060: movabs $0x112629060,%r10  ;   {section_word}
  0x000000011262906a: push   %r10
  0x000000011262906c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112629071: hlt    
  0x0000000112629072: hlt    
  0x0000000112629073: hlt    
  0x0000000112629074: hlt    
  0x0000000112629075: hlt    
  0x0000000112629076: hlt    
  0x0000000112629077: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x0000000112628de0' size='1336' address='0x0000000112628c50' relocation_offset='296' insts_offset='400' stub_offset='880' scopes_data_offset='1080' scopes_pcs_offset='1152' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/Character toLowerCase (C)C' bytes='6' count='431' iicount='431' stamp='0.209'/>
<writer thread='7171'/>
<task_queued compile_id='36' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='0.209' comment='tiered' hot_count='512'/>
<writer thread='19203'/>
Decoding compiled method 0x000000011262bf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011262c0a0: mov    0x8(%rsi),%r10d
  0x000000011262c0a4: shl    $0x3,%r10
  0x000000011262c0a8: cmp    %r10,%rax
  0x000000011262c0ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262c0b1: data32 xchg %ax,%ax
  0x000000011262c0b4: nopl   0x0(%rax,%rax,1)
  0x000000011262c0bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262c0c0: mov    %eax,-0x14000(%rsp)
  0x000000011262c0c7: push   %rbp
  0x000000011262c0c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)

  0x000000011262c0cc: mov    %rsi,%rbx
  0x000000011262c0cf: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1454)

  0x000000011262c0d2: test   %eax,%eax
  0x000000011262c0d4: jne    0x000000011262c1b4  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1455)

  0x000000011262c0da: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1455)

  0x000000011262c0de: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ; implicit exception: dispatches to 0x000000011262c1f1
  0x000000011262c0e3: test   %ebp,%ebp
  0x000000011262c0e5: jle    0x000000011262c1dd  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)

  0x000000011262c0eb: test   %ebp,%ebp
  0x000000011262c0ed: jbe    0x000000011262c1c4
  0x000000011262c0f3: mov    %ebp,%r11d
  0x000000011262c0f6: dec    %r11d
  0x000000011262c0f9: cmp    %ebp,%r11d
  0x000000011262c0fc: jae    0x000000011262c1c4  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)

  0x000000011262c102: movzwl 0x10(%r12,%r8,8),%esi  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1459)

  0x000000011262c108: mov    %ebp,%r10d
  0x000000011262c10b: add    $0xfffffffffffffffd,%r10d
  0x000000011262c10f: mov    %esi,%eax
  0x000000011262c111: shl    $0x5,%eax
  0x000000011262c114: lea    (%r12,%r8,8),%rdi
  0x000000011262c118: mov    $0x1,%r8d
  0x000000011262c11e: mov    $0x80000000,%r9d
  0x000000011262c124: cmp    %r10d,%r11d
  0x000000011262c127: cmovl  %r9d,%r10d
  0x000000011262c12b: cmp    $0x1,%r10d
  0x000000011262c12f: jle    0x000000011262c18b
  0x000000011262c131: sub    %esi,%eax
  0x000000011262c133: jmp    0x000000011262c142
  0x000000011262c135: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262c140: sub    %esi,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x000000011262c142: movzwl 0x10(%rdi,%r8,2),%r11d
  0x000000011262c148: add    %r11d,%eax
  0x000000011262c14b: movslq %r8d,%r11
  0x000000011262c14e: movzwl 0x12(%rdi,%r11,2),%ecx
  0x000000011262c154: movzwl 0x16(%rdi,%r11,2),%r9d
  0x000000011262c15a: movzwl 0x14(%rdi,%r11,2),%r11d
  0x000000011262c160: mov    %eax,%esi
  0x000000011262c162: shl    $0x5,%esi
  0x000000011262c165: sub    %eax,%esi
  0x000000011262c167: add    %ecx,%esi
  0x000000011262c169: mov    %esi,%edx
  0x000000011262c16b: shl    $0x5,%edx
  0x000000011262c16e: sub    %esi,%edx
  0x000000011262c170: add    %r11d,%edx
  0x000000011262c173: mov    %edx,%esi
  0x000000011262c175: shl    $0x5,%esi
  0x000000011262c178: sub    %edx,%esi
  0x000000011262c17a: add    %r9d,%esi          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1459)

  0x000000011262c17d: mov    %esi,%eax
  0x000000011262c17f: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x000000011262c182: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1458)

  0x000000011262c186: cmp    %r10d,%r8d
  0x000000011262c189: jl     0x000000011262c140  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x000000011262c18b: cmp    %ebp,%r8d
  0x000000011262c18e: jge    0x000000011262c1c0  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)

  0x000000011262c190: movzwl 0x10(%rdi,%r8,2),%r10d
  0x000000011262c196: sub    %esi,%eax
  0x000000011262c198: add    %r10d,%eax         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1459)

  0x000000011262c19b: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1458)

  0x000000011262c19e: cmp    %ebp,%r8d
  0x000000011262c1a1: jge    0x000000011262c1b1  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x000000011262c1a3: mov    %eax,%r11d
  0x000000011262c1a6: shl    $0x5,%r11d         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x000000011262c1aa: mov    %eax,%esi
  0x000000011262c1ac: mov    %r11d,%eax
  0x000000011262c1af: jmp    0x000000011262c190
  0x000000011262c1b1: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)

  0x000000011262c1b4: add    $0x20,%rsp
  0x000000011262c1b8: pop    %rbp
  0x000000011262c1b9: test   %eax,-0x33dc1bf(%rip)        # 0x000000010f250000
                                                ;   {poll_return}
  0x000000011262c1bf: retq   
  0x000000011262c1c0: mov    %esi,%eax
  0x000000011262c1c2: jmp    0x000000011262c1b1
  0x000000011262c1c4: mov    $0xffffff86,%esi
  0x000000011262c1c9: mov    %rbx,%rbp
  0x000000011262c1cc: mov    %r8d,(%rsp)
  0x000000011262c1d0: data32 xchg %ax,%ax
  0x000000011262c1d3: callq  0x00000001125121a0  ; OopMap{rbp=Oop [0]=NarrowOop off=312}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)
                                                ;   {runtime_call}
  0x000000011262c1d8: callq  0x000000011086a158  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)
                                                ;   {runtime_call}
  0x000000011262c1dd: mov    $0xffffff65,%esi
  0x000000011262c1e2: mov    %rbx,(%rsp)
  0x000000011262c1e6: nop
  0x000000011262c1e7: callq  0x00000001125121a0  ; OopMap{[0]=Oop off=332}
                                                ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)
                                                ;   {runtime_call}
  0x000000011262c1ec: callq  0x000000011086a158  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)
                                                ;   {runtime_call}
  0x000000011262c1f1: mov    $0xfffffff6,%esi
  0x000000011262c1f6: nop
  0x000000011262c1f7: callq  0x00000001125121a0  ; OopMap{off=348}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x000000011262c1fc: callq  0x000000011086a158  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x000000011262c201: hlt    
  0x000000011262c202: hlt    
  0x000000011262c203: hlt    
  0x000000011262c204: hlt    
  0x000000011262c205: hlt    
  0x000000011262c206: hlt    
  0x000000011262c207: hlt    
  0x000000011262c208: hlt    
  0x000000011262c209: hlt    
  0x000000011262c20a: hlt    
  0x000000011262c20b: hlt    
  0x000000011262c20c: hlt    
  0x000000011262c20d: hlt    
  0x000000011262c20e: hlt    
  0x000000011262c20f: hlt    
  0x000000011262c210: hlt    
  0x000000011262c211: hlt    
  0x000000011262c212: hlt    
  0x000000011262c213: hlt    
  0x000000011262c214: hlt    
  0x000000011262c215: hlt    
  0x000000011262c216: hlt    
  0x000000011262c217: hlt    
  0x000000011262c218: hlt    
  0x000000011262c219: hlt    
  0x000000011262c21a: hlt    
  0x000000011262c21b: hlt    
  0x000000011262c21c: hlt    
  0x000000011262c21d: hlt    
  0x000000011262c21e: hlt    
  0x000000011262c21f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262c220: jmpq   0x00000001125793a0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011262c225: callq  0x000000011262c22a
  0x000000011262c22a: subq   $0x5,(%rsp)
  0x000000011262c22f: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262c234: hlt    
  0x000000011262c235: hlt    
  0x000000011262c236: hlt    
  0x000000011262c237: hlt    
<nmethod compile_id='34' compiler='C2' level='4' entry='0x000000011262c0a0' size='1336' address='0x000000011262bf50' relocation_offset='296' insts_offset='336' stub_offset='720' scopes_data_offset='752' scopes_pcs_offset='880' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/String hashCode ()I' bytes='55' count='1198' backedge_count='22301' iicount='1198' stamp='0.211'/>
<make_not_entrant thread='19203' compile_id='2' compiler='C1' level='3' stamp='0.211'/>
<writer thread='7171'/>
<task_queued compile_id='37' method='java/nio/Buffer position ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.211' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262bc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262bda0: mov    0x8(%rsi),%r10d
  0x000000011262bda4: shl    $0x3,%r10
  0x000000011262bda8: cmp    %rax,%r10
  0x000000011262bdab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262bdb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262bdbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262bdc0: mov    %eax,-0x14000(%rsp)
  0x000000011262bdc7: push   %rbp
  0x000000011262bdc8: sub    $0x30,%rsp
  0x000000011262bdcc: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000011262bdcf: mov    %rsi,0x20(%rsp)
  0x000000011262bdd4: callq  0x00000001126074e0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000011262bdd9: add    $0x30,%rsp
  0x000000011262bddd: pop    %rbp
  0x000000011262bdde: test   %eax,-0x33dbce4(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262bde4: retq   
  0x000000011262bde5: nop
  0x000000011262bde6: nop
  0x000000011262bde7: mov    0x2a8(%r15),%rax
  0x000000011262bdee: movabs $0x0,%r10
  0x000000011262bdf8: mov    %r10,0x2a8(%r15)
  0x000000011262bdff: movabs $0x0,%r10
  0x000000011262be09: mov    %r10,0x2b0(%r15)
  0x000000011262be10: add    $0x30,%rsp
  0x000000011262be14: pop    %rbp
  0x000000011262be15: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262be1a: hlt    
  0x000000011262be1b: hlt    
  0x000000011262be1c: hlt    
  0x000000011262be1d: hlt    
  0x000000011262be1e: hlt    
  0x000000011262be1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262be20: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262be25: mov    %rsp,-0x28(%rsp)
  0x000000011262be2a: sub    $0x80,%rsp
  0x000000011262be31: mov    %rax,0x78(%rsp)
  0x000000011262be36: mov    %rcx,0x70(%rsp)
  0x000000011262be3b: mov    %rdx,0x68(%rsp)
  0x000000011262be40: mov    %rbx,0x60(%rsp)
  0x000000011262be45: mov    %rbp,0x50(%rsp)
  0x000000011262be4a: mov    %rsi,0x48(%rsp)
  0x000000011262be4f: mov    %rdi,0x40(%rsp)
  0x000000011262be54: mov    %r8,0x38(%rsp)
  0x000000011262be59: mov    %r9,0x30(%rsp)
  0x000000011262be5e: mov    %r10,0x28(%rsp)
  0x000000011262be63: mov    %r11,0x20(%rsp)
  0x000000011262be68: mov    %r12,0x18(%rsp)
  0x000000011262be6d: mov    %r13,0x10(%rsp)
  0x000000011262be72: mov    %r14,0x8(%rsp)
  0x000000011262be77: mov    %r15,(%rsp)
  0x000000011262be7b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262be85: movabs $0x11262be25,%rsi  ;   {internal_word}
  0x000000011262be8f: mov    %rsp,%rdx
  0x000000011262be92: and    $0xfffffffffffffff0,%rsp
  0x000000011262be96: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262be9b: hlt    
[Deopt Handler Code]
  0x000000011262be9c: movabs $0x11262be9c,%r10  ;   {section_word}
  0x000000011262bea6: push   %r10
  0x000000011262bea8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262bead: hlt    
  0x000000011262beae: hlt    
  0x000000011262beaf: hlt    
<nmethod compile_id='35' compiler='C1' level='1' entry='0x000000011262bda0' size='712' address='0x000000011262bc50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3992' iicount='3992' stamp='0.212'/>
<make_not_entrant thread='20739' compile_id='1' compiler='C1' level='3' stamp='0.212'/>
Decoding compiled method 0x000000011262b690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e0c570} &apos;newNode&apos; &apos;(ILjav
<writer thread='7171'/>
[Loaded java.io.IOException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
a/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011262b800: mov    0x8(%rsi),%r10d
  0x000000011262b804: shl    $0x3,%r10
  0x000000011262b808: cmp    %rax,%r10
  0x000000011262b80b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262b811: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262b81c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262b820: mov    %eax,-0x14000(%rsp)
  0x000000011262b827: push   %rbp
  0x000000011262b828: sub    $0x60,%rsp
  0x000000011262b82c: mov    %rdx,%rbx
  0x000000011262b82f: mov    %rcx,%r11
  0x000000011262b832: movabs $0x129f569f0,%rdx  ;   {metadata(method data for {method} {0x0000000129e0c570} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262b83c: mov    0xdc(%rdx),%edi
  0x000000011262b842: add    $0x8,%edi
  0x000000011262b845: mov    %edi,0xdc(%rdx)
  0x000000011262b84b: movabs $0x129e0c570,%rdx  ;   {metadata({method} {0x0000000129e0c570} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262b855: and    $0x1ff8,%edi
  0x000000011262b85b: cmp    $0x0,%edi
  0x000000011262b85e: je     0x000000011262b992
  0x000000011262b864: movabs $0x7c001e270,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x000000011262b86e: mov    0x60(%r15),%rax
  0x000000011262b872: lea    0x20(%rax),%rdi
  0x000000011262b876: cmp    0x70(%r15),%rdi
  0x000000011262b87a: ja     0x000000011262b9a9
  0x000000011262b880: mov    %rdi,0x60(%r15)
  0x000000011262b884: mov    0xa8(%rdx),%rcx
  0x000000011262b88b: mov    %rcx,(%rax)
  0x000000011262b88e: mov    %rdx,%rcx
  0x000000011262b891: shr    $0x3,%rcx
  0x000000011262b895: mov    %ecx,0x8(%rax)
  0x000000011262b898: xor    %rcx,%rcx
  0x000000011262b89b: mov    %ecx,0xc(%rax)
  0x000000011262b89e: xor    %rcx,%rcx
  0x000000011262b8a1: mov    %rcx,0x10(%rax)
  0x000000011262b8a5: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.HashMap::newNode@0 (line 1734)

  0x000000011262b8a9: mov    %rax,%rsi
  0x000000011262b8ac: movabs $0x129f569f0,%rdi  ;   {metadata(method data for {method} {0x0000000129e0c570} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262b8b6: addq   $0x1,0x108(%rdi)
  0x000000011262b8be: movabs $0x129f56b40,%rsi  ;   {metadata(method data for {method} {0x0000000129e0dab8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011262b8c8: mov    0xdc(%rsi),%edi
  0x000000011262b8ce: add    $0x8,%edi
  0x000000011262b8d1: mov    %edi,0xdc(%rsi)
  0x000000011262b8d7: movabs $0x129e0dab8,%rsi  ;   {metadata({method} {0x0000000129e0dab8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011262b8e1: and    $0x7ffff8,%edi
  0x000000011262b8e7: cmp    $0x0,%edi
  0x000000011262b8ea: je     0x000000011262b9b6
  0x000000011262b8f0: mov    %rax,%rsi
  0x000000011262b8f3: movabs $0x129f56b40,%rdi  ;   {metadata(method data for {method} {0x0000000129e0dab8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011262b8fd: addq   $0x1,0x108(%rdi)
  0x000000011262b905: movabs $0x129e7d930,%rsi  ;   {metadata(method data for {method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011262b90f: mov    0xdc(%rsi),%edi
  0x000000011262b915: add    $0x8,%edi
  0x000000011262b918: mov    %edi,0xdc(%rsi)
  0x000000011262b91e: movabs $0x129d0d488,%rsi  ;   {metadata({method} {0x0000000129d0d488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011262b928: and    $0x7ffff8,%edi
  0x000000011262b92e: cmp    $0x0,%edi
  0x000000011262b931: je     0x000000011262b9cd
  0x000000011262b937: mov    %ebx,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1734)

  0x000000011262b93a: mov    %r11,%r10
  0x000000011262b93d: shr    $0x3,%r10
  0x000000011262b941: mov    %r10d,0x10(%rax)
  0x000000011262b945: mov    %rax,%rsi
  0x000000011262b948: shr    $0x9,%rsi
  0x000000011262b94c: movabs $0x10e129000,%rdi
  0x000000011262b956: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1734)

  0x000000011262b95a: mov    %r8,%r10
  0x000000011262b95d: shr    $0x3,%r10
  0x000000011262b961: mov    %r10d,0x14(%rax)
  0x000000011262b965: mov    %rax,%rsi
  0x000000011262b968: shr    $0x9,%rsi
  0x000000011262b96c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1734)

  0x000000011262b970: mov    %r9,%r10
  0x000000011262b973: shr    $0x3,%r10
  0x000000011262b977: mov    %r10d,0x18(%rax)
  0x000000011262b97b: mov    %rax,%rsi
  0x000000011262b97e: shr    $0x9,%rsi
  0x000000011262b982: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1734)

  0x000000011262b986: add    $0x60,%rsp
  0x000000011262b98a: pop    %rbp
  0x000000011262b98b: test   %eax,-0x33db891(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262b991: retq   
  0x000000011262b992: mov    %rdx,0x8(%rsp)
  0x000000011262b997: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262b99f: callq  0x000000011260aea0  ; OopMap{rsi=Oop r11=Oop r8=Oop r9=Oop off=420}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1734)
                                                ;   {runtime_call}
  0x000000011262b9a4: jmpq   0x000000011262b864
  0x000000011262b9a9: mov    %rdx,%rdx
  0x000000011262b9ac: callq  0x0000000112607a20  ; OopMap{r11=Oop r8=Oop r9=Oop off=433}
                                                ;*new  ; - java.util.HashMap::newNode@0 (line 1734)
                                                ;   {runtime_call}
  0x000000011262b9b1: jmpq   0x000000011262b8a9
  0x000000011262b9b6: mov    %rsi,0x8(%rsp)
  0x000000011262b9bb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262b9c3: callq  0x000000011260aea0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=456}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1734)
                                                ;   {runtime_call}
  0x000000011262b9c8: jmpq   0x000000011262b8f0
  0x000000011262b9cd: mov    %rsi,0x8(%rsp)
  0x000000011262b9d2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262b9da: callq  0x000000011260aea0  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1734)
                                                ;   {runtime_call}
  0x000000011262b9df: jmpq   0x000000011262b937
  0x000000011262b9e4: nop
  0x000000011262b9e5: nop
  0x000000011262b9e6: mov    0x2a8(%r15),%rax
  0x000000011262b9ed: movabs $0x0,%r10
  0x000000011262b9f7: mov    %r10,0x2a8(%r15)
  0x000000011262b9fe: movabs $0x0,%r10
  0x000000011262ba08: mov    %r10,0x2b0(%r15)
  0x000000011262ba0f: add    $0x60,%rsp
  0x000000011262ba13: pop    %rbp
  0x000000011262ba14: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262ba19: hlt    
  0x000000011262ba1a: hlt    
  0x000000011262ba1b: hlt    
  0x000000011262ba1c: hlt    
  0x000000011262ba1d: hlt    
  0x000000011262ba1e: hlt    
  0x000000011262ba1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262ba20: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262ba25: mov    %rsp,-0x28(%rsp)
  0x000000011262ba2a: sub    $0x80,%rsp
  0x000000011262ba31: mov    %rax,0x78(%rsp)
  0x000000011262ba36: mov    %rcx,0x70(%rsp)
  0x000000011262ba3b: mov    %rdx,0x68(%rsp)
  0x000000011262ba40: mov    %rbx,0x60(%rsp)
  0x000000011262ba45: mov    %rbp,0x50(%rsp)
  0x000000011262ba4a: mov    %rsi,0x48(%rsp)
  0x000000011262ba4f: mov    %rdi,0x40(%rsp)
  0x000000011262ba54: mov    %r8,0x38(%rsp)
  0x000000011262ba59: mov    %r9,0x30(%rsp)
  0x000000011262ba5e: mov    %r10,0x28(%rsp)
  0x000000011262ba63: mov    %r11,0x20(%rsp)
  0x000000011262ba68: mov    %r12,0x18(%rsp)
  0x000000011262ba6d: mov    %r13,0x10(%rsp)
  0x000000011262ba72: mov    %r14,0x8(%rsp)
  0x000000011262ba77: mov    %r15,(%rsp)
  0x000000011262ba7b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262ba85: movabs $0x11262ba25,%rsi  ;   {internal_word}
  0x000000011262ba8f: mov    %rsp,%rdx
  0x000000011262ba92: and    $0xfffffffffffffff0,%rsp
  0x000000011262ba96: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262ba9b: hlt    
[Deopt Handler Code]
  0x000000011262ba9c: movabs $0x11262ba9c,%r10  ;   {section_word}
  0x000000011262baa6: push   %r10
  0x000000011262baa8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262baad: hlt    
  0x000000011262baae: hlt    
  0x000000011262baaf: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x000000011262b800' size='1400' address='0x000000011262b690' relocation_offset='296' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1216' dependencies_offset='1392' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='342' iicount='342' stamp='0.215'/>
<writer thread='7171'/>
[Loaded java.util.zip.ZipException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedActionException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x000000011262b350:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e0c938} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000011262b4a0: mov    0x8(%rsi),%r10d
  0x000000011262b4a4: shl    $0x3,%r10
  0x000000011262b4a8: cmp    %rax,%r10
  0x000000011262b4ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262b4b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262b4bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262b4c0: mov    %eax,-0x14000(%rsp)
  0x000000011262b4c7: push   %rbp
  0x000000011262b4c8: sub    $0x30,%rsp
  0x000000011262b4cc: movabs $0x129f573f8,%rdi  ;   {metadata(method data for {method} {0x0000000129e0c938} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262b4d6: mov    0xdc(%rdi),%ebx
  0x000000011262b4dc: add    $0x8,%ebx
  0x000000011262b4df: mov    %ebx,0xdc(%rdi)
  0x000000011262b4e5: movabs $0x129e0c938,%rdi  ;   {metadata({method} {0x0000000129e0c938} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011262b4ef: and    $0x1ff8,%ebx
  0x000000011262b4f5: cmp    $0x0,%ebx
  0x000000011262b4f8: je     0x000000011262b50a  ;*return
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1767)

  0x000000011262b4fe: add    $0x30,%rsp
  0x000000011262b502: pop    %rbp
  0x000000011262b503: test   %eax,-0x33db409(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262b509: retq   
  0x000000011262b50a: mov    %rdi,0x8(%rsp)
  0x000000011262b50f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262b517: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1767)
                                                ;   {runtime_call}
  0x000000011262b51c: jmp    0x000000011262b4fe
  0x000000011262b51e: nop
  0x000000011262b51f: nop
  0x000000011262b520: mov    0x2a8(%r15),%rax
  0x000000011262b527: movabs $0x0,%r10
  0x000000011262b531: mov    %r10,0x2a8(%r15)
  0x000000011262b538: movabs $0x0,%r10
  0x000000011262b542: mov    %r10,0x2b0(%r15)
  0x000000011262b549: add    $0x30,%rsp
  0x000000011262b54d: pop    %rbp
  0x000000011262b54e: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262b553: hlt    
  0x000000011262b554: hlt    
  0x000000011262b555: hlt    
  0x000000011262b556: hlt    
  0x000000011262b557: hlt    
  0x000000011262b558: hlt    
  0x000000011262b559: hlt    
  0x000000011262b55a: hlt    
  0x000000011262b55b: hlt    
  0x000000011262b55c: hlt    
  0x000000011262b55d: hlt    
  0x000000011262b55e: hlt    
  0x000000011262b55f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262b560: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262b565: mov    %rsp,-0x28(%rsp)
  0x000000011262b56a: sub    $0x80,%rsp
  0x000000011262b571: mov    %rax,0x78(%rsp)
  0x000000011262b576: mov    %rcx,0x70(%rsp)
  0x000000011262b57b: mov    %rdx,0x68(%rsp)
  0x000000011262b580: mov    %rbx,0x60(%rsp)
  0x000000011262b585: mov    %rbp,0x50(%rsp)
  0x000000011262b58a: mov    %rsi,0x48(%rsp)
  0x000000011262b58f: mov    %rdi,0x40(%rsp)
  0x000000011262b594: mov    %r8,0x38(%rsp)
  0x000000011262b599: mov    %r9,0x30(%rsp)
  0x000000011262b59e: mov    %r10,0x28(%rsp)
  0x000000011262b5a3: mov    %r11,0x20(%rsp)
  0x000000011262b5a8: mov    %r12,0x18(%rsp)
  0x000000011262b5ad: mov    %r13,0x10(%rsp)
  0x000000011262b5b2: mov    %r14,0x8(%rsp)
  0x000000011262b5b7: mov    %r15,(%rsp)
  0x000000011262b5bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262b5c5: movabs $0x11262b565,%rsi  ;   {internal_word}
  0x000000011262b5cf: mov    %rsp,%rdx
  0x000000011262b5d2: and    $0xfffffffffffffff0,%rsp
  0x000000011262b5d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262b5db: hlt    
[Deopt Handler Code]
  0x000000011262b5dc: movabs $0x11262b5dc,%r10  ;   {section_word}
  0x000000011262b5e6: push   %r10
  0x000000011262b5e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262b5ed: hlt    
  0x000000011262b5ee: hlt    
  0x000000011262b5ef: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x000000011262b4a0' size='776' address='0x000000011262b350' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='342' iicount='342' stamp='0.216'/>
Decoding compiled method 0x000000011262ae90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011262b000: mov    %eax,-0x14000(%rsp)
  0x000000011262b007: push   %rbp
  0x000000011262b008: sub    $0x30,%rsp
  0x000000011262b00c: movabs $0x129f566e8,%rdi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262b016: mov    0xdc(%rdi),%ebx
  0x000000011262b01c: add    $0x8,%ebx
  0x000000011262b01f: mov    %ebx,0xdc(%rdi)
  0x000000011262b025: movabs $0x129da7230,%rdi  ;   {metadata({method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262b02f: and    $0x1ff8,%ebx
  0x000000011262b035: cmp    $0x0,%ebx
  0x000000011262b038: je     0x000000011262b120  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x000000011262b03e: movabs $0x129f566e8,%rdi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262b048: addq   $0x1,0x108(%rdi)
  0x000000011262b050: mov    %rsi,%rdi
  0x000000011262b053: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x000000011262b056: mov    %edi,0x20(%rsp)
  0x000000011262b05a: nop
  0x000000011262b05b: nop
  0x000000011262b05c: nop
  0x000000011262b05d: nop
  0x000000011262b05e: nop
  0x000000011262b05f: callq  0x0000000112553420  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x000000011262b064: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011262b137
  0x000000011262b067: mov    %rax,%rdx
  0x000000011262b06a: movabs $0x129f566e8,%rsi  ;   {metadata(method data for {method} {0x0000000129da7230} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262b074: mov    0x8(%rdx),%edx
  0x000000011262b077: shl    $0x3,%rdx
  0x000000011262b07b: cmp    0x120(%rsi),%rdx
  0x000000011262b082: jne    0x000000011262b091
  0x000000011262b084: addq   $0x1,0x128(%rsi)
  0x000000011262b08c: jmpq   0x000000011262b0f7
  0x000000011262b091: cmp    0x130(%rsi),%rdx
  0x000000011262b098: jne    0x000000011262b0a7
  0x000000011262b09a: addq   $0x1,0x138(%rsi)
  0x000000011262b0a2: jmpq   0x000000011262b0f7
  0x000000011262b0a7: cmpq   $0x0,0x120(%rsi)
  0x000000011262b0b2: jne    0x000000011262b0cb
  0x000000011262b0b4: mov    %rdx,0x120(%rsi)
  0x000000011262b0bb: movq   $0x1,0x128(%rsi)
  0x000000011262b0c6: jmpq   0x000000011262b0f7
  0x000000011262b0cb: cmpq   $0x0,0x130(%rsi)
  0x000000011262b0d6: jne    0x000000011262b0ef
  0x000000011262b0d8: mov    %rdx,0x130(%rsi)
  0x000000011262b0df: movq   $0x1,0x138(%rsi)
  0x000000011262b0ea: jmpq   0x000000011262b0f7
  0x000000011262b0ef: addq   $0x1,0x118(%rsi)
  0x000000011262b0f7: mov    0x20(%rsp),%edx
  0x000000011262b0fb: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x000000011262b0fe: nop
  0x000000011262b0ff: nop
  0x000000011262b100: nop
  0x000000011262b101: nop
  0x000000011262b102: nop
  0x000000011262b103: nop
  0x000000011262b104: nop
  0x000000011262b105: movabs $0xffffffffffffffff,%rax
  0x000000011262b10f: callq  0x0000000112553220  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x000000011262b114: add    $0x30,%rsp
  0x000000011262b118: pop    %rbp
  0x000000011262b119: test   %eax,-0x33db01f(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262b11f: retq   
  0x000000011262b120: mov    %rdi,0x8(%rsp)
  0x000000011262b125: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262b12d: callq  0x000000011260aea0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x000000011262b132: jmpq   0x000000011262b03e
  0x000000011262b137: callq  0x00000001126072c0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x000000011262b13c: nop
  0x000000011262b13d: nop
  0x000000011262b13e: mov    0x2a8(%r15),%rax
  0x000000011262b145: movabs $0x0,%r10
  0x000000011262b14f: mov    %r10,0x2a8(%r15)
  0x000000011262b156: movabs $0x0,%r10
  0x000000011262b160: mov    %r10,0x2b0(%r15)
  0x000000011262b167: add    $0x30,%rsp
  0x000000011262b16b: pop    %rbp
  0x000000011262b16c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262b171: hlt    
  0x000000011262b172: hlt    
  0x000000011262b173: hlt    
  0x000000011262b174: hlt    
  0x000000011262b175: hlt    
  0x000000011262b176: hlt    
  0x000000011262b177: hlt    
  0x000000011262b178: hlt    
  0x000000011262b179: hlt    
  0x000000011262b17a: hlt    
  0x000000011262b17b: hlt    
  0x000000011262b17c: hlt    
  0x000000011262b17d: hlt    
  0x000000011262b17e: hlt    
  0x000000011262b17f: hlt    
[Stub Code]
  0x000000011262b180: nop                       ;   {no_reloc}
  0x000000011262b181: nop
  0x000000011262b182: nop
  0x000000011262b183: nop
  0x000000011262b184: nop
  0x000000011262b185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262b18f: jmpq   0x000000011262b18f  ;   {runtime_call}
  0x000000011262b194: nop
  0x000000011262b195: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262b19f: jmpq   0x000000011262b19f  ;   {runtime_call}
[Exception Handler]
  0x000000011262b1a4: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011262b1a9: mov    %rsp,-0x28(%rsp)
  0x000000011262b1ae: sub    $0x80,%rsp
  0x000000011262b1b5: mov    %rax,0x78(%rsp)
  0x000000011262b1ba: mov    %rcx,0x70(%rsp)
  0x000000011262b1bf: mov    %rdx,0x68(%rsp)
  0x000000011262b1c4: mov    %rbx,0x60(%rsp)
  0x000000011262b1c9: mov    %rbp,0x50(%rsp)
  0x000000011262b1ce: mov    %rsi,0x48(%rsp)
  0x000000011262b1d3: mov    %rdi,0x40(%rsp)
  0x000000011262b1d8: mov    %r8,0x38(%rsp)
  0x000000011262b1dd: mov    %r9,0x30(%rsp)
  0x000000011262b1e2: mov    %r10,0x28(%rsp)
  0x000000011262b1e7: mov    %r11,0x20(%rsp)
  0x000000011262b1ec: mov    %r12,0x18(%rsp)
  0x000000011262b1f1: mov    %r13,0x10(%rsp)
  0x000000011262b1f6: mov    %r14,0x8(%rsp)
  0x000000011262b1fb: mov    %r15,(%rsp)
  0x000000011262b1ff: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262b209: movabs $0x11262b1a9,%rsi  ;   {internal_word}
  0x000000011262b213: mov    %rsp,%rdx
  0x000000011262b216: and    $0xfffffffffffffff0,%rsp
  0x000000011262b21a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262b21f: hlt    
[Deopt Handler Code]
  0x000000011262b220: movabs $0x11262b220,%r10  ;   {section_word}
  0x000000011262b22a: push   %r10
  0x000000011262b22c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262b231: hlt    
  0x000000011262b232: hlt    
  0x000000011262b233: hlt    
  0x000000011262b234: hlt    
  0x000000011262b235: hlt    
  0x000000011262b236: hlt    
  0x000000011262b237: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x000000011262b000' size='1160' address='0x000000011262ae90' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='458' iicount='458' stamp='0.217'/>
<writer thread='7171'/>
<task_queued compile_id='38' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='512' iicount='512' level='1' stamp='0.217' comment='tiered' hot_count='512'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262aa50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d12060} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011262abc0: mov    0x8(%rsi),%r10d
  0x000000011262abc4: shl    $0x3,%r10
  0x000000011262abc8: cmp    %rax,%r10
  0x000000011262abcb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262abd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262abdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262abe0: mov    %eax,-0x14000(%rsp)
  0x000000011262abe7: push   %rbp
  0x000000011262abe8: sub    $0x30,%rsp
  0x000000011262abec: movabs $0x129f56870,%rcx  ;   {metadata(method data for {method} {0x0000000129d12060} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011262abf6: mov    0xdc(%rcx),%edi
  0x000000011262abfc: add    $0x8,%edi
  0x000000011262abff: mov    %edi,0xdc(%rcx)
  0x000000011262ac05: movabs $0x129d12060,%rcx  ;   {metadata({method} {0x0000000129d12060} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011262ac0f: and    $0x1ff8,%edi
  0x000000011262ac15: cmp    $0x0,%edi
  0x000000011262ac18: je     0x000000011262acc8  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1491)

  0x000000011262ac1e: mov    %rsi,%rcx
  0x000000011262ac21: movabs $0x129f56870,%rdi  ;   {metadata(method data for {method} {0x0000000129d12060} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011262ac2b: mov    0x8(%rcx),%ecx
  0x000000011262ac2e: shl    $0x3,%rcx
  0x000000011262ac32: cmp    0x110(%rdi),%rcx
  0x000000011262ac39: jne    0x000000011262ac48
  0x000000011262ac3b: addq   $0x1,0x118(%rdi)
  0x000000011262ac43: jmpq   0x000000011262acae
  0x000000011262ac48: cmp    0x120(%rdi),%rcx
  0x000000011262ac4f: jne    0x000000011262ac5e
  0x000000011262ac51: addq   $0x1,0x128(%rdi)
  0x000000011262ac59: jmpq   0x000000011262acae
  0x000000011262ac5e: cmpq   $0x0,0x110(%rdi)
  0x000000011262ac69: jne    0x000000011262ac82
  0x000000011262ac6b: mov    %rcx,0x110(%rdi)
  0x000000011262ac72: movq   $0x1,0x118(%rdi)
  0x000000011262ac7d: jmpq   0x000000011262acae
  0x000000011262ac82: cmpq   $0x0,0x120(%rdi)
  0x000000011262ac8d: jne    0x000000011262aca6
  0x000000011262ac8f: mov    %rcx,0x120(%rdi)
  0x000000011262ac96: movq   $0x1,0x128(%rdi)
  0x000000011262aca1: jmpq   0x000000011262acae
  0x000000011262aca6: addq   $0x1,0x108(%rdi)
  0x000000011262acae: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1491)

  0x000000011262acb3: nop
  0x000000011262acb4: nop
  0x000000011262acb5: nop
  0x000000011262acb6: nop
  0x000000011262acb7: callq  0x0000000112553020  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1491)
                                                ;   {optimized virtual_call}
  0x000000011262acbc: add    $0x30,%rsp
  0x000000011262acc0: pop    %rbp
  0x000000011262acc1: test   %eax,-0x33dabc7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262acc7: retq   
  0x000000011262acc8: mov    %rcx,0x8(%rsp)
  0x000000011262accd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262acd5: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1491)
                                                ;   {runtime_call}
  0x000000011262acda: jmpq   0x000000011262ac1e
  0x000000011262acdf: nop
  0x000000011262ace0: nop
  0x000000011262ace1: mov    0x2a8(%r15),%rax
  0x000000011262ace8: movabs $0x0,%r10
  0x000000011262acf2: mov    %r10,0x2a8(%r15)
  0x000000011262acf9: movabs $0x0,%r10
  0x000000011262ad03: mov    %r10,0x2b0(%r15)
  0x000000011262ad0a: add    $0x30,%rsp
  0x000000011262ad0e: pop    %rbp
  0x000000011262ad0f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262ad14: hlt    
  0x000000011262ad15: hlt    
  0x000000011262ad16: hlt    
  0x000000011262ad17: hlt    
  0x000000011262ad18: hlt    
  0x000000011262ad19: hlt    
  0x000000011262ad1a: hlt    
  0x000000011262ad1b: hlt    
  0x000000011262ad1c: hlt    
  0x000000011262ad1d: hlt    
  0x000000011262ad1e: hlt    
  0x000000011262ad1f: hlt    
[Stub Code]
  0x000000011262ad20: nop                       ;   {no_reloc}
  0x000000011262ad21: nop
  0x000000011262ad22: nop
  0x000000011262ad23: nop
  0x000000011262ad24: nop
  0x000000011262ad25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262ad2f: jmpq   0x000000011262ad2f  ;   {runtime_call}
[Exception Handler]
  0x000000011262ad34: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011262ad39: mov    %rsp,-0x28(%rsp)
  0x000000011262ad3e: sub    $0x80,%rsp
  0x000000011262ad45: mov    %rax,0x78(%rsp)
  0x000000011262ad4a: mov    %rcx,0x70(%rsp)
  0x000000011262ad4f: mov    %rdx,0x68(%rsp)
  0x000000011262ad54: mov    %rbx,0x60(%rsp)
  0x000000011262ad59: mov    %rbp,0x50(%rsp)
  0x000000011262ad5e: mov    %rsi,0x48(%rsp)
  0x000000011262ad63: mov    %rdi,0x40(%rsp)
  0x000000011262ad68: mov    %r8,0x38(%rsp)
  0x000000011262ad6d: mov    %r9,0x30(%rsp)
  0x000000011262ad72: mov    %r10,0x28(%rsp)
  0x000000011262ad77: mov    %r11,0x20(%rsp)
  0x000000011262ad7c: mov    %r12,0x18(%rsp)
  0x000000011262ad81: mov    %r13,0x10(%rsp)
  0x000000011262ad86: mov    %r14,0x8(%rsp)
  0x000000011262ad8b: mov    %r15,(%rsp)
  0x000000011262ad8f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262ad99: movabs $0x11262ad39,%rsi  ;   {internal_word}
  0x000000011262ada3: mov    %rsp,%rdx
  0x000000011262ada6: and    $0xfffffffffffffff0,%rsp
  0x000000011262adaa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262adaf: hlt    
[Deopt Handler Code]
  0x000000011262adb0: movabs $0x11262adb0,%r10  ;   {section_word}
  0x000000011262adba: push   %r10
  0x000000011262adbc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262adc1: hlt    
  0x000000011262adc2: hlt    
  0x000000011262adc3: hlt    
  0x000000011262adc4: hlt    
  0x000000011262adc5: hlt    
  0x000000011262adc6: hlt    
  0x000000011262adc7: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x000000011262abc0' size='1040' address='0x000000011262aa50' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='532' iicount='532' stamp='0.219'/>
<writer thread='7171'/>
<task_queued compile_id='39' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='400' iicount='400' level='3' stamp='0.219' comment='tiered' hot_count='400'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262a790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d35030} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262a8e0: mov    0x8(%rsi),%r10d
  0x000000011262a8e4: shl    $0x3,%r10
  0x000000011262a8e8: cmp    %rax,%r10
  0x000000011262a8eb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262a8f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262a8fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262a900: mov    %eax,-0x14000(%rsp)
  0x000000011262a907: push   %rbp
  0x000000011262a908: sub    $0x30,%rsp
  0x000000011262a90c: mov    0xc(%rsi),%eax
  0x000000011262a90f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 202)

  0x000000011262a913: add    $0x30,%rsp
  0x000000011262a917: pop    %rbp
  0x000000011262a918: test   %eax,-0x33da81e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262a91e: retq   
  0x000000011262a91f: nop
  0x000000011262a920: nop
  0x000000011262a921: mov    0x2a8(%r15),%rax
  0x000000011262a928: movabs $0x0,%r10
  0x000000011262a932: mov    %r10,0x2a8(%r15)
  0x000000011262a939: movabs $0x0,%r10
  0x000000011262a943: mov    %r10,0x2b0(%r15)
  0x000000011262a94a: add    $0x30,%rsp
  0x000000011262a94e: pop    %rbp
  0x000000011262a94f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262a954: hlt    
  0x000000011262a955: hlt    
  0x000000011262a956: hlt    
  0x000000011262a957: hlt    
  0x000000011262a958: hlt    
  0x000000011262a959: hlt    
  0x000000011262a95a: hlt    
  0x000000011262a95b: hlt    
  0x000000011262a95c: hlt    
  0x000000011262a95d: hlt    
  0x000000011262a95e: hlt    
  0x000000011262a95f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262a960: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262a965: mov    %rsp,-0x28(%rsp)
  0x000000011262a96a: sub    $0x80,%rsp
  0x000000011262a971: mov    %rax,0x78(%rsp)
  0x000000011262a976: mov    %rcx,0x70(%rsp)
  0x000000011262a97b: mov    %rdx,0x68(%rsp)
  0x000000011262a980: mov    %rbx,0x60(%rsp)
  0x000000011262a985: mov    %rbp,0x50(%rsp)
  0x000000011262a98a: mov    %rsi,0x48(%rsp)
  0x000000011262a98f: mov    %rdi,0x40(%rsp)
  0x000000011262a994: mov    %r8,0x38(%rsp)
  0x000000011262a999: mov    %r9,0x30(%rsp)
  0x000000011262a99e: mov    %r10,0x28(%rsp)
  0x000000011262a9a3: mov    %r11,0x20(%rsp)
  0x000000011262a9a8: mov    %r12,0x18(%rsp)
  0x000000011262a9ad: mov    %r13,0x10(%rsp)
  0x000000011262a9b2: mov    %r14,0x8(%rsp)
  0x000000011262a9b7: mov    %r15,(%rsp)
  0x000000011262a9bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262a9c5: movabs $0x11262a965,%rsi  ;   {internal_word}
  0x000000011262a9cf: mov    %rsp,%rdx
  0x000000011262a9d2: and    $0xfffffffffffffff0,%rsp
  0x000000011262a9d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262a9db: hlt    
[Deopt Handler Code]
  0x000000011262a9dc: movabs $0x11262a9dc,%r10  ;   {section_word}
  0x000000011262a9e6: push   %r10
  0x000000011262a9e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262a9ed: hlt    
  0x000000011262a9ee: hlt    
  0x000000011262a9ef: hlt    
<nmethod compile_id='38' compiler='C1' level='1' entry='0x000000011262a8e0' size='680' address='0x000000011262a790' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='523' iicount='523' stamp='0.220'/>
<writer thread='7171'/>
<task_queued compile_id='40' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='256' iicount='256' level='1' stamp='0.220' comment='tiered' hot_count='256'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262a3d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262a540: mov    0x8(%rsi),%r10d
  0x000000011262a544: shl    $0x3,%r10
  0x000000011262a548: cmp    %rax,%r10
  0x000000011262a54b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262a551: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262a55c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262a560: mov    %eax,-0x14000(%rsp)
  0x000000011262a567: push   %rbp
  0x000000011262a568: sub    $0x30,%rsp
  0x000000011262a56c: movabs $0x129f07cc0,%rdi  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262a576: mov    0xdc(%rdi),%ebx
  0x000000011262a57c: add    $0x8,%ebx
  0x000000011262a57f: mov    %ebx,0xdc(%rdi)
  0x000000011262a585: movabs $0x129d84e38,%rdi  ;   {metadata({method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262a58f: and    $0x1ff8,%ebx
  0x000000011262a595: cmp    $0x0,%ebx
  0x000000011262a598: je     0x000000011262a5d5  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000011262a59e: mov    %rsi,%rdi
  0x000000011262a5a1: movabs $0x129f07cc0,%rbx  ;   {metadata(method data for {method} {0x0000000129d84e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011262a5ab: addq   $0x1,0x108(%rbx)
  0x000000011262a5b3: mov    %rsi,%rdi
  0x000000011262a5b6: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000011262a5b9: mov    %rdi,0x20(%rsp)
  0x000000011262a5be: nop
  0x000000011262a5bf: callq  0x0000000112553020  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000011262a5c4: mov    0x20(%rsp),%rax
  0x000000011262a5c9: add    $0x30,%rsp
  0x000000011262a5cd: pop    %rbp
  0x000000011262a5ce: test   %eax,-0x33da4d4(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262a5d4: retq   
  0x000000011262a5d5: mov    %rdi,0x8(%rsp)
  0x000000011262a5da: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262a5e2: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000011262a5e7: jmp    0x000000011262a59e
  0x000000011262a5e9: nop
  0x000000011262a5ea: nop
  0x000000011262a5eb: mov    0x2a8(%r15),%rax
  0x000000011262a5f2: movabs $0x0,%r10
  0x000000011262a5fc: mov    %r10,0x2a8(%r15)
  0x000000011262a603: movabs $0x0,%r10
  0x000000011262a60d: mov    %r10,0x2b0(%r15)
  0x000000011262a614: add    $0x30,%rsp
  0x000000011262a618: pop    %rbp
  0x000000011262a619: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262a61e: hlt    
  0x000000011262a61f: hlt    
[Stub Code]
  0x000000011262a620: nop                       ;   {no_reloc}
  0x000000011262a621: nop
  0x000000011262a622: nop
  0x000000011262a623: nop
  0x000000011262a624: nop
  0x000000011262a625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262a62f: jmpq   0x000000011262a62f  ;   {runtime_call}
[Exception Handler]
  0x000000011262a634: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011262a639: mov    %rsp,-0x28(%rsp)
  0x000000011262a63e: sub    $0x80,%rsp
  0x000000011262a645: mov    %rax,0x78(%rsp)
  0x000000011262a64a: mov    %rcx,0x70(%rsp)
  0x000000011262a64f: mov    %rdx,0x68(%rsp)
  0x000000011262a654: mov    %rbx,0x60(%rsp)
  0x000000011262a659: mov    %rbp,0x50(%rsp)
  0x000000011262a65e: mov    %rsi,0x48(%rsp)
  0x000000011262a663: mov    %rdi,0x40(%rsp)
  0x000000011262a668: mov    %r8,0x38(%rsp)
  0x000000011262a66d: mov    %r9,0x30(%rsp)
  0x000000011262a672: mov    %r10,0x28(%rsp)
  0x000000011262a677: mov    %r11,0x20(%rsp)
  0x000000011262a67c: mov    %r12,0x18(%rsp)
  0x000000011262a681: mov    %r13,0x10(%rsp)
  0x000000011262a686: mov    %r14,0x8(%rsp)
  0x000000011262a68b: mov    %r15,(%rsp)
  0x000000011262a68f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262a699: movabs $0x11262a639,%rsi  ;   {internal_word}
  0x000000011262a6a3: mov    %rsp,%rdx
  0x000000011262a6a6: and    $0xfffffffffffffff0,%rsp
  0x000000011262a6aa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262a6af: hlt    
[Deopt Handler Code]
  0x000000011262a6b0: movabs $0x11262a6b0,%r10  ;   {section_word}
  0x000000011262a6ba: push   %r10
  0x000000011262a6bc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262a6c1: hlt    
  0x000000011262a6c2: hlt    
  0x000000011262a6c3: hlt    
  0x000000011262a6c4: hlt    
  0x000000011262a6c5: hlt    
  0x000000011262a6c6: hlt    
  0x000000011262a6c7: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x000000011262a540' size='912' address='0x000000011262a3d0' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='417' iicount='417' stamp='0.221'/>
<writer thread='7171'/>
<task_queued compile_id='41' method='java/lang/String length ()I' bytes='6' count='1536' iicount='1536' level='1' stamp='0.221' comment='tiered' hot_count='1536'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262a090:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d10c30} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262a1e0: mov    0x8(%rsi),%r10d
  0x000000011262a1e4: shl    $0x3,%r10
  0x000000011262a1e8: cmp    %rax,%r10
  0x000000011262a1eb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262a1f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262a1fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262a200: mov    %eax,-0x14000(%rsp)
  0x000000011262a207: push   %rbp
  0x000000011262a208: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.String::length@0 (line 611)

  0x000000011262a20c: mov    0xc(%rsi),%eax
  0x000000011262a20f: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)

  0x000000011262a213: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; implicit exception: dispatches to 0x000000011262a222
  0x000000011262a216: add    $0x30,%rsp
  0x000000011262a21a: pop    %rbp
  0x000000011262a21b: test   %eax,-0x33da121(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262a221: retq   
  0x000000011262a222: callq  0x00000001126072c0  ; OopMap{off=71}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ;   {runtime_call}
  0x000000011262a227: nop
  0x000000011262a228: nop
  0x000000011262a229: mov    0x2a8(%r15),%rax
  0x000000011262a230: movabs $0x0,%r10
  0x000000011262a23a: mov    %r10,0x2a8(%r15)
  0x000000011262a241: movabs $0x0,%r10
  0x000000011262a24b: mov    %r10,0x2b0(%r15)
  0x000000011262a252: add    $0x30,%rsp
  0x000000011262a256: pop    %rbp
  0x000000011262a257: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262a25c: hlt    
  0x000000011262a25d: hlt    
  0x000000011262a25e: hlt    
  0x000000011262a25f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262a260: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262a265: mov    %rsp,-0x28(%rsp)
  0x000000011262a26a: sub    $0x80,%rsp
  0x000000011262a271: mov    %rax,0x78(%rsp)
  0x000000011262a276: mov    %rcx,0x70(%rsp)
  0x000000011262a27b: mov    %rdx,0x68(%rsp)
  0x000000011262a280: mov    %rbx,0x60(%rsp)
  0x000000011262a285: mov    %rbp,0x50(%rsp)
  0x000000011262a28a: mov    %rsi,0x48(%rsp)
  0x000000011262a28f: mov    %rdi,0x40(%rsp)
  0x000000011262a294: mov    %r8,0x38(%rsp)
  0x000000011262a299: mov    %r9,0x30(%rsp)
  0x000000011262a29e: mov    %r10,0x28(%rsp)
  0x000000011262a2a3: mov    %r11,0x20(%rsp)
  0x000000011262a2a8: mov    %r12,0x18(%rsp)
  0x000000011262a2ad: mov    %r13,0x10(%rsp)
  0x000000011262a2b2: mov    %r14,0x8(%rsp)
  0x000000011262a2b7: mov    %r15,(%rsp)
  0x000000011262a2bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262a2c5: movabs $0x11262a265,%rsi  ;   {internal_word}
  0x000000011262a2cf: mov    %rsp,%rdx
  0x000000011262a2d2: and    $0xfffffffffffffff0,%rsp
  0x000000011262a2d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262a2db: hlt    
[Deopt Handler Code]
  0x000000011262a2dc: movabs $0x11262a2dc,%r10  ;   {section_word}
  0x000000011262a2e6: push   %r10
  0x000000011262a2e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262a2ed: hlt    
  0x000000011262a2ee: hlt    
  0x000000011262a2ef: hlt    
<nmethod compile_id='41' compiler='C1' level='1' entry='0x000000011262a1e0' size='768' address='0x000000011262a090' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='648' dependencies_offset='744' nul_chk_table_offset='752' method='java/lang/String length ()I' bytes='6' count='1563' iicount='1563' stamp='0.222'/>
<make_not_entrant thread='20739' compile_id='7' compiler='C1' level='3' stamp='0.222'/>
<writer thread='7171'/>
<task_queued compile_id='42' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='216' backedge_count='13312' iicount='216' level='3' stamp='0.222' comment='tiered' hot_count='216'/>
<task_queued compile_id='43' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.222' comment='tiered' hot_count='128'/>
<task_queued compile_id='44' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='512' backedge_count='805' iicount='512' level='3' stamp='0.223' comment='tiered' hot_count='512'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262c4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011262c6c0: mov    0x8(%rsi),%r10d
  0x000000011262c6c4: shl    $0x3,%r10
  0x000000011262c6c8: cmp    %rax,%r10
  0x000000011262c6cb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262c6d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262c6dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262c6e0: mov    %eax,-0x14000(%rsp)
  0x000000011262c6e7: push   %rbp
  0x000000011262c6e8: sub    $0x80,%rsp
  0x000000011262c6ef: mov    %rsi,0x48(%rsp)
  0x000000011262c6f4: mov    %rdx,0x60(%rsp)
  0x000000011262c6f9: mov    %r9,0x70(%rsp)
  0x000000011262c6fe: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c708: mov    0xdc(%rax),%edi
  0x000000011262c70e: add    $0x8,%edi
  0x000000011262c711: mov    %edi,0xdc(%rax)
  0x000000011262c717: movabs $0x129e57dc8,%rax  ;   {metadata({method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c721: and    $0x1ff8,%edi
  0x000000011262c727: cmp    $0x0,%edi
  0x000000011262c72a: je     0x000000011262cfb5  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x000000011262c730: mov    %rcx,%rdi
  0x000000011262c733: add    %r8d,%edi
  0x000000011262c736: mov    %edi,0x68(%rsp)
  0x000000011262c73a: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000011262cfcc
  0x000000011262c73e: movabs $0x129f57c50,%rbx  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c748: addq   $0x1,0x108(%rbx)
  0x000000011262c750: movabs $0x129ecff78,%rbx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262c75a: mov    0xdc(%rbx),%r11d
  0x000000011262c761: add    $0x8,%r11d
  0x000000011262c765: mov    %r11d,0xdc(%rbx)
  0x000000011262c76c: movabs $0x129de28e0,%rbx  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262c776: and    $0x7ffff8,%r11d
  0x000000011262c77d: cmp    $0x0,%r11d
  0x000000011262c781: je     0x000000011262cfd1
  0x000000011262c787: cmp    %eax,%r8d
  0x000000011262c78a: movabs $0x129ecff78,%rbx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262c794: movabs $0x108,%r11
  0x000000011262c79e: jg     0x000000011262c7ae
  0x000000011262c7a4: movabs $0x118,%r11
  0x000000011262c7ae: mov    (%rbx,%r11,1),%r13
  0x000000011262c7b2: lea    0x1(%r13),%r13
  0x000000011262c7b6: mov    %r13,(%rbx,%r11,1)
  0x000000011262c7ba: jg     0x000000011262c7d5  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011262c7c0: movabs $0x129ecff78,%rax  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262c7ca: incl   0x128(%rax)
  0x000000011262c7d0: jmpq   0x000000011262c7d8  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011262c7d5: mov    %rax,%r8           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011262c7d8: mov    $0x0,%eax
  0x000000011262c7dd: jmpq   0x000000011262c89a  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000011262c7e2: nopw   0x0(%rax,%rax,1)
  0x000000011262c7e8: movslq %ecx,%rbx
  0x000000011262c7eb: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000011262cfe8
  0x000000011262c7ee: jae    0x000000011262cff2
  0x000000011262c7f4: movzwl 0x10(%rdx,%rbx,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000011262c7f9: cmp    $0x80,%ebx
  0x000000011262c7ff: movabs $0x129f57c50,%r11  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c809: movabs $0x138,%r13
  0x000000011262c813: jge    0x000000011262c823
  0x000000011262c819: movabs $0x148,%r13
  0x000000011262c823: mov    (%r11,%r13,1),%r14
  0x000000011262c827: lea    0x1(%r14),%r14
  0x000000011262c82b: mov    %r14,(%r11,%r13,1)
  0x000000011262c82f: jge    0x000000011262c8d8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000011262c835: mov    %rax,%r11
  0x000000011262c838: inc    %r11d
  0x000000011262c83b: inc    %ecx
  0x000000011262c83d: movslq %eax,%r13
  0x000000011262c840: cmp    0xc(%r9),%eax
  0x000000011262c844: jae    0x000000011262cffb
  0x000000011262c84a: mov    %bl,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000011262c84f: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c859: mov    0xe0(%rax),%ebx
  0x000000011262c85f: add    $0x8,%ebx
  0x000000011262c862: mov    %ebx,0xe0(%rax)
  0x000000011262c868: movabs $0x129e57dc8,%rax  ;   {metadata({method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c872: and    $0xfff8,%ebx
  0x000000011262c878: cmp    $0x0,%ebx
  0x000000011262c87b: je     0x000000011262d004  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=449}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000011262c881: test   %eax,-0x33dc787(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011262c887: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c891: incl   0x158(%rax)
  0x000000011262c897: mov    %r11,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000011262c89a: cmp    %r8d,%eax
  0x000000011262c89d: movabs $0x129f57c50,%rbx  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c8a7: movabs $0x118,%r11
  0x000000011262c8b1: jge    0x000000011262c8c1
  0x000000011262c8b7: movabs $0x128,%r11
  0x000000011262c8c1: mov    (%rbx,%r11,1),%r13
  0x000000011262c8c5: lea    0x1(%r13),%r13
  0x000000011262c8c9: mov    %r13,(%rbx,%r11,1)
  0x000000011262c8cd: jl     0x000000011262c7e8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000011262c8d3: nopl   0x0(%rax,%rax,1)
  0x000000011262c8d8: cmp    %edi,%ecx
  0x000000011262c8da: movabs $0x129f57c50,%rbx  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c8e4: movabs $0x170,%r8
  0x000000011262c8ee: jge    0x000000011262c8fe
  0x000000011262c8f4: movabs $0x180,%r8
  0x000000011262c8fe: mov    (%rbx,%r8,1),%r11
  0x000000011262c902: lea    0x1(%r11),%r11
  0x000000011262c906: mov    %r11,(%rbx,%r8,1)
  0x000000011262c90a: jge    0x000000011262cfa0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000011262c910: mov    %rcx,%rbx
  0x000000011262c913: inc    %ebx
  0x000000011262c915: movslq %ecx,%r8
  0x000000011262c918: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000011262d01b
  0x000000011262c91b: jae    0x000000011262d025
  0x000000011262c921: movzwl 0x10(%rdx,%r8,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x000000011262c927: cmp    $0x80,%ecx
  0x000000011262c92d: movabs $0x129f57c50,%r8   ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c937: movabs $0x190,%r11
  0x000000011262c941: jge    0x000000011262c951
  0x000000011262c947: movabs $0x1a0,%r11
  0x000000011262c951: mov    (%r8,%r11,1),%r13
  0x000000011262c955: lea    0x1(%r13),%r13
  0x000000011262c959: mov    %r13,(%r8,%r11,1)
  0x000000011262c95d: jge    0x000000011262c990  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x000000011262c963: mov    %rax,%r8
  0x000000011262c966: inc    %r8d
  0x000000011262c969: movslq %eax,%r11
  0x000000011262c96c: cmp    0xc(%r9),%eax
  0x000000011262c970: jae    0x000000011262d02e
  0x000000011262c976: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x000000011262c97b: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c985: incl   0x1b0(%rax)
  0x000000011262c98b: jmpq   0x000000011262cf2d  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x000000011262c990: cmp    $0x800,%ecx
  0x000000011262c996: movabs $0x129f57c50,%r8   ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262c9a0: movabs $0x1c8,%r11
  0x000000011262c9aa: jge    0x000000011262c9ba
  0x000000011262c9b0: movabs $0x1d8,%r11
  0x000000011262c9ba: mov    (%r8,%r11,1),%r13
  0x000000011262c9be: lea    0x1(%r13),%r13
  0x000000011262c9c2: mov    %r13,(%r8,%r11,1)
  0x000000011262c9c6: jge    0x000000011262ca24  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x000000011262c9cc: mov    %rcx,%r8
  0x000000011262c9cf: sar    $0x6,%r8d
  0x000000011262c9d3: or     $0xc0,%r8d
  0x000000011262c9da: movslq %eax,%r11
  0x000000011262c9dd: cmp    0xc(%r9),%eax
  0x000000011262c9e1: jae    0x000000011262d037
  0x000000011262c9e7: mov    %r8b,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x000000011262c9ec: inc    %eax
  0x000000011262c9ee: mov    %rax,%r8
  0x000000011262c9f1: inc    %r8d
  0x000000011262c9f4: and    $0x3f,%ecx
  0x000000011262c9f7: or     $0x80,%ecx
  0x000000011262c9fd: movslq %eax,%r11
  0x000000011262ca00: cmp    0xc(%r9),%eax
  0x000000011262ca04: jae    0x000000011262d040
  0x000000011262ca0a: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x000000011262ca0f: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262ca19: incl   0x1e8(%rax)
  0x000000011262ca1f: jmpq   0x000000011262cf2d  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x000000011262ca24: movabs $0x129f57c50,%r8   ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262ca2e: addq   $0x1,0x200(%r8)
  0x000000011262ca36: movabs $0x129f57ff8,%r8   ;   {metadata(method data for {method} {0x0000000129da4f10} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262ca40: mov    0xdc(%r8),%r11d
  0x000000011262ca47: add    $0x8,%r11d
  0x000000011262ca4b: mov    %r11d,0xdc(%r8)
  0x000000011262ca52: movabs $0x129da4f10,%r8   ;   {metadata({method} {0x0000000129da4f10} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262ca5c: and    $0x7ffff8,%r11d
  0x000000011262ca63: cmp    $0x0,%r11d
  0x000000011262ca67: je     0x000000011262d049
  0x000000011262ca6d: cmp    $0xd800,%ecx
  0x000000011262ca73: movabs $0x129f57ff8,%r8   ;   {metadata(method data for {method} {0x0000000129da4f10} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262ca7d: movabs $0x108,%r11
  0x000000011262ca87: jl     0x000000011262ca97
  0x000000011262ca8d: movabs $0x118,%r11
  0x000000011262ca97: mov    (%r8,%r11,1),%r13
  0x000000011262ca9b: lea    0x1(%r13),%r13
  0x000000011262ca9f: mov    %r13,(%r8,%r11,1)
  0x000000011262caa3: jl     0x000000011262cae5  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011262caa9: cmp    $0xe000,%ecx
  0x000000011262caaf: movabs $0x129f57ff8,%r8   ;   {metadata(method data for {method} {0x0000000129da4f10} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262cab9: movabs $0x128,%r11
  0x000000011262cac3: jge    0x000000011262cad3
  0x000000011262cac9: movabs $0x138,%r11
  0x000000011262cad3: mov    (%r8,%r11,1),%r13
  0x000000011262cad7: lea    0x1(%r13),%r13
  0x000000011262cadb: mov    %r13,(%r8,%r11,1)
  0x000000011262cadf: jl     0x000000011262caf0  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011262cae5: mov    $0x0,%r8d
  0x000000011262caeb: jmpq   0x000000011262cb07  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011262caf0: movabs $0x129f57ff8,%r8   ;   {metadata(method data for {method} {0x0000000129da4f10} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262cafa: incl   0x148(%r8)
  0x000000011262cb01: mov    $0x1,%r8d          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011262cb07: cmp    $0x0,%r8d
  0x000000011262cb0b: movabs $0x129f57c50,%r8   ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cb15: movabs $0x210,%r11
  0x000000011262cb1f: je     0x000000011262cb2f
  0x000000011262cb25: movabs $0x220,%r11
  0x000000011262cb2f: mov    (%r8,%r11,1),%r13
  0x000000011262cb33: lea    0x1(%r13),%r13
  0x000000011262cb37: mov    %r13,(%r8,%r11,1)
  0x000000011262cb3b: je     0x000000011262cec1  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x000000011262cb41: mov    0x30(%rsi),%r8d
  0x000000011262cb45: shl    $0x3,%r8           ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x000000011262cb49: cmp    $0x0,%r8
  0x000000011262cb4d: movabs $0x129f57c50,%r8   ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cb57: movabs $0x230,%r11
  0x000000011262cb61: jne    0x000000011262cb71
  0x000000011262cb67: movabs $0x240,%r11
  0x000000011262cb71: mov    (%r8,%r11,1),%r13
  0x000000011262cb75: lea    0x1(%r13),%r13
  0x000000011262cb79: mov    %r13,(%r8,%r11,1)
  0x000000011262cb7d: mov    %ecx,0x5c(%rsp)
  0x000000011262cb81: mov    %ebx,0x58(%rsp)
  0x000000011262cb85: mov    %eax,0x6c(%rsp)
  0x000000011262cb89: jne    0x000000011262cbee  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x000000011262cb8f: nop
  0x000000011262cb90: jmpq   0x000000011262d06f  ;   {no_reloc}
  0x000000011262cb95: add    %al,(%rax)
  0x000000011262cb97: add    %al,(%rax)
  0x000000011262cb99: add    %ch,%cl
  0x000000011262cb9b: fiaddl (%rax,%rax,1)
  0x000000011262cb9e: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x000000011262cba1: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cba4: push   %rax
  0x000000011262cba5: jl     0x000000011262cb9c
  0x000000011262cba7: sub    %eax,(%rcx)
  0x000000011262cba9: add    %al,(%rax)
  0x000000011262cbab: add    %cl,-0x7d(%rcx)
  0x000000011262cbae: test   %edx,0x2(%rax)
  0x000000011262cbb1: add    %al,(%rax)
  0x000000011262cbb3: add    %ecx,-0x75(%rax)
  0x000000011262cbb6: lock mov %rax,0x50(%rsp)  ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x000000011262cbbc: nop
  0x000000011262cbbd: nop
  0x000000011262cbbe: nop
  0x000000011262cbbf: callq  0x0000000112553020  ; OopMap{[72]=Oop [80]=Oop [96]=Oop [112]=Oop off=1284}
                                                ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x000000011262cbc4: mov    0x48(%rsp),%rsi
  0x000000011262cbc9: mov    0x50(%rsp),%rax
  0x000000011262cbce: mov    %rax,%r10
  0x000000011262cbd1: shr    $0x3,%r10
  0x000000011262cbd5: mov    %r10d,0x30(%rsi)
  0x000000011262cbd9: mov    %rsi,%rdx
  0x000000011262cbdc: shr    $0x9,%rdx
  0x000000011262cbe0: movabs $0x10e129000,%rcx
  0x000000011262cbea: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x000000011262cbee: mov    0x30(%rsi),%edi
  0x000000011262cbf1: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x000000011262cbf5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011262d086
  0x000000011262cbf8: mov    %rdi,%rdx
  0x000000011262cbfb: movabs $0x129f57c50,%rcx  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cc05: mov    0x8(%rdx),%edx
  0x000000011262cc08: shl    $0x3,%rdx
  0x000000011262cc0c: cmp    0x268(%rcx),%rdx
  0x000000011262cc13: jne    0x000000011262cc22
  0x000000011262cc15: addq   $0x1,0x270(%rcx)
  0x000000011262cc1d: jmpq   0x000000011262cc88
  0x000000011262cc22: cmp    0x278(%rcx),%rdx
  0x000000011262cc29: jne    0x000000011262cc38
  0x000000011262cc2b: addq   $0x1,0x280(%rcx)
  0x000000011262cc33: jmpq   0x000000011262cc88
  0x000000011262cc38: cmpq   $0x0,0x268(%rcx)
  0x000000011262cc43: jne    0x000000011262cc5c
  0x000000011262cc45: mov    %rdx,0x268(%rcx)
  0x000000011262cc4c: movq   $0x1,0x270(%rcx)
  0x000000011262cc57: jmpq   0x000000011262cc88
  0x000000011262cc5c: cmpq   $0x0,0x278(%rcx)
  0x000000011262cc67: jne    0x000000011262cc80
  0x000000011262cc69: mov    %rdx,0x278(%rcx)
  0x000000011262cc70: movq   $0x1,0x280(%rcx)
  0x000000011262cc7b: jmpq   0x000000011262cc88
  0x000000011262cc80: addq   $0x1,0x260(%rcx)
  0x000000011262cc88: mov    0x58(%rsp),%ebx
  0x000000011262cc8c: dec    %ebx
  0x000000011262cc8e: mov    0x5c(%rsp),%edx
  0x000000011262cc92: mov    0x60(%rsp),%rcx
  0x000000011262cc97: mov    %rbx,%r8
  0x000000011262cc9a: mov    0x68(%rsp),%r9d
  0x000000011262cc9f: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000011262cca2: nop
  0x000000011262cca3: nop
  0x000000011262cca4: nop
  0x000000011262cca5: movabs $0xffffffffffffffff,%rax
  0x000000011262ccaf: callq  0x0000000112553220  ; OopMap{[96]=Oop [112]=Oop [72]=Oop off=1524}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x000000011262ccb4: cmp    $0x0,%eax
  0x000000011262ccb7: movabs $0x129f57c50,%rsi  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262ccc1: movabs $0x290,%rdi
  0x000000011262cccb: jge    0x000000011262ccdb
  0x000000011262ccd1: movabs $0x2a0,%rdi
  0x000000011262ccdb: mov    (%rsi,%rdi,1),%rbx
  0x000000011262ccdf: lea    0x1(%rbx),%rbx
  0x000000011262cce3: mov    %rbx,(%rsi,%rdi,1)
  0x000000011262cce7: jge    0x000000011262ce09  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x000000011262cced: mov    0x48(%rsp),%rsi
  0x000000011262ccf2: mov    %rsi,%rax
  0x000000011262ccf5: movabs $0x129f57c50,%rdi  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262ccff: mov    0x8(%rax),%eax
  0x000000011262cd02: shl    $0x3,%rax
  0x000000011262cd06: cmp    0x2b8(%rdi),%rax
  0x000000011262cd0d: jne    0x000000011262cd1c
  0x000000011262cd0f: addq   $0x1,0x2c0(%rdi)
  0x000000011262cd17: jmpq   0x000000011262cd82
  0x000000011262cd1c: cmp    0x2c8(%rdi),%rax
  0x000000011262cd23: jne    0x000000011262cd32
  0x000000011262cd25: addq   $0x1,0x2d0(%rdi)
  0x000000011262cd2d: jmpq   0x000000011262cd82
  0x000000011262cd32: cmpq   $0x0,0x2b8(%rdi)
  0x000000011262cd3d: jne    0x000000011262cd56
  0x000000011262cd3f: mov    %rax,0x2b8(%rdi)
  0x000000011262cd46: movq   $0x1,0x2c0(%rdi)
  0x000000011262cd51: jmpq   0x000000011262cd82
  0x000000011262cd56: cmpq   $0x0,0x2c8(%rdi)
  0x000000011262cd61: jne    0x000000011262cd7a
  0x000000011262cd63: mov    %rax,0x2c8(%rdi)
  0x000000011262cd6a: movq   $0x1,0x2d0(%rdi)
  0x000000011262cd75: jmpq   0x000000011262cd82
  0x000000011262cd7a: addq   $0x1,0x2b0(%rdi)
  0x000000011262cd82: mov    0x20(%rsi),%eax
  0x000000011262cd85: shl    $0x3,%rax          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x000000011262cd89: movabs $0x76ab162c0,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x000000011262cd93: cmp    %r10,%rax
  0x000000011262cd96: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cda0: movabs $0x2e0,%rdi
  0x000000011262cdaa: je     0x000000011262cdba
  0x000000011262cdb0: movabs $0x2f0,%rdi
  0x000000011262cdba: mov    (%rax,%rdi,1),%rbx
  0x000000011262cdbe: lea    0x1(%rbx),%rbx
  0x000000011262cdc2: mov    %rbx,(%rax,%rdi,1)
  0x000000011262cdc6: jne    0x000000011262cf8c  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x000000011262cdcc: mov    0x6c(%rsp),%edi
  0x000000011262cdd0: mov    0x70(%rsp),%r9
  0x000000011262cdd5: mov    %rdi,%rax
  0x000000011262cdd8: inc    %eax
  0x000000011262cdda: movsbl 0x2c(%rsi),%ebx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x000000011262cdde: movslq %edi,%rdx
  0x000000011262cde1: cmp    0xc(%r9),%edi
  0x000000011262cde5: jae    0x000000011262d08b
  0x000000011262cdeb: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x000000011262cdf0: movabs $0x129f57c50,%rdi  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cdfa: incl   0x300(%rdi)
  0x000000011262ce00: mov    0x58(%rsp),%ebx
  0x000000011262ce04: jmpq   0x000000011262cea9  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x000000011262ce09: mov    0x6c(%rsp),%edi
  0x000000011262ce0d: mov    0x70(%rsp),%r9
  0x000000011262ce12: mov    0x48(%rsp),%rsi
  0x000000011262ce17: mov    %rax,%rbx
  0x000000011262ce1a: sar    $0x12,%ebx
  0x000000011262ce1d: or     $0xf0,%ebx
  0x000000011262ce23: movslq %edi,%rdx
  0x000000011262ce26: cmp    0xc(%r9),%edi
  0x000000011262ce2a: jae    0x000000011262d094
  0x000000011262ce30: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x000000011262ce35: inc    %edi
  0x000000011262ce37: mov    %rax,%rbx
  0x000000011262ce3a: sar    $0xc,%ebx
  0x000000011262ce3d: and    $0x3f,%ebx
  0x000000011262ce40: or     $0x80,%ebx
  0x000000011262ce46: movslq %edi,%rdx
  0x000000011262ce49: cmp    0xc(%r9),%edi
  0x000000011262ce4d: jae    0x000000011262d09d
  0x000000011262ce53: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x000000011262ce58: inc    %edi
  0x000000011262ce5a: mov    %rax,%rbx
  0x000000011262ce5d: sar    $0x6,%ebx
  0x000000011262ce60: and    $0x3f,%ebx
  0x000000011262ce63: or     $0x80,%ebx
  0x000000011262ce69: movslq %edi,%rdx
  0x000000011262ce6c: cmp    0xc(%r9),%edi
  0x000000011262ce70: jae    0x000000011262d0a6
  0x000000011262ce76: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000011262ce7b: inc    %edi
  0x000000011262ce7d: mov    %rdi,%rbx
  0x000000011262ce80: inc    %ebx
  0x000000011262ce82: and    $0x3f,%eax
  0x000000011262ce85: or     $0x80,%eax
  0x000000011262ce8b: movslq %edi,%rdx
  0x000000011262ce8e: cmp    0xc(%r9),%edi
  0x000000011262ce92: jae    0x000000011262d0af
  0x000000011262ce98: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x000000011262ce9d: mov    0x58(%rsp),%edi
  0x000000011262cea1: inc    %edi
  0x000000011262cea3: mov    %rbx,%rax
  0x000000011262cea6: mov    %rdi,%rbx
  0x000000011262cea9: movabs $0x129f57c50,%rdi  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262ceb3: incl   0x318(%rdi)
  0x000000011262ceb9: mov    %rax,%r8
  0x000000011262cebc: jmpq   0x000000011262cf2d  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x000000011262cec1: mov    %rax,%rdi
  0x000000011262cec4: mov    %rcx,%rax
  0x000000011262cec7: sar    $0xc,%eax
  0x000000011262ceca: or     $0xe0,%eax
  0x000000011262ced0: movslq %edi,%rdx
  0x000000011262ced3: cmp    0xc(%r9),%edi
  0x000000011262ced7: jae    0x000000011262d0b8
  0x000000011262cedd: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x000000011262cee2: mov    %rdi,%rax
  0x000000011262cee5: inc    %eax
  0x000000011262cee7: mov    %rcx,%rdi
  0x000000011262ceea: sar    $0x6,%edi
  0x000000011262ceed: and    $0x3f,%edi
  0x000000011262cef0: or     $0x80,%edi
  0x000000011262cef6: movslq %eax,%rdx
  0x000000011262cef9: cmp    0xc(%r9),%eax
  0x000000011262cefd: jae    0x000000011262d0c1
  0x000000011262cf03: mov    %dil,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x000000011262cf08: inc    %eax
  0x000000011262cf0a: mov    %rax,%rdi
  0x000000011262cf0d: inc    %edi
  0x000000011262cf0f: and    $0x3f,%ecx
  0x000000011262cf12: or     $0x80,%ecx
  0x000000011262cf18: movslq %eax,%rdx
  0x000000011262cf1b: cmp    0xc(%r9),%eax
  0x000000011262cf1f: jae    0x000000011262d0ca
  0x000000011262cf25: mov    %cl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x000000011262cf2a: mov    %rdi,%r8           ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011262cf2d: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cf37: mov    0xe0(%rax),%edi
  0x000000011262cf3d: add    $0x8,%edi
  0x000000011262cf40: mov    %edi,0xe0(%rax)
  0x000000011262cf46: movabs $0x129e57dc8,%rax  ;   {metadata({method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cf50: and    $0xfff8,%edi
  0x000000011262cf56: cmp    $0x0,%edi
  0x000000011262cf59: je     0x000000011262d0d3  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2207}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011262cf5f: test   %eax,-0x33dce65(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011262cf65: movabs $0x129f57c50,%rax  ;   {metadata(method data for {method} {0x0000000129e57dc8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011262cf6f: incl   0x330(%rax)
  0x000000011262cf75: mov    %r8,%rdi
  0x000000011262cf78: mov    %rbx,%rcx
  0x000000011262cf7b: mov    %rdi,%rax
  0x000000011262cf7e: mov    0x68(%rsp),%edi
  0x000000011262cf82: mov    0x60(%rsp),%rdx
  0x000000011262cf87: jmpq   0x000000011262c8d8  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011262cf8c: mov    $0xffffffff,%eax
  0x000000011262cf91: add    $0x80,%rsp
  0x000000011262cf98: pop    %rbp
  0x000000011262cf99: test   %eax,-0x33dce9f(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262cf9f: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x000000011262cfa0: mov    %rax,%rdi
  0x000000011262cfa3: mov    %rdi,%rax
  0x000000011262cfa6: add    $0x80,%rsp
  0x000000011262cfad: pop    %rbp
  0x000000011262cfae: test   %eax,-0x33dceb4(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262cfb4: retq   
  0x000000011262cfb5: mov    %rax,0x8(%rsp)
  0x000000011262cfba: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262cfc2: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2311}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x000000011262cfc7: jmpq   0x000000011262c730
  0x000000011262cfcc: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2321}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000011262cfd1: mov    %rbx,0x8(%rsp)
  0x000000011262cfd6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262cfde: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2339}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x000000011262cfe3: jmpq   0x000000011262c787
  0x000000011262cfe8: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2349}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011262cfed: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2354}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011262cff2: mov    %rcx,(%rsp)
  0x000000011262cff6: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2363}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011262cffb: mov    %rax,(%rsp)
  0x000000011262cfff: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2372}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000011262d004: mov    %rax,0x8(%rsp)
  0x000000011262d009: movq   $0x33,(%rsp)
  0x000000011262d011: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2390}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x000000011262d016: jmpq   0x000000011262c881
  0x000000011262d01b: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2400}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011262d020: callq  0x00000001126072c0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2405}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011262d025: mov    %rcx,(%rsp)
  0x000000011262d029: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2414}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011262d02e: mov    %rax,(%rsp)
  0x000000011262d032: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2423}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x000000011262d037: mov    %rax,(%rsp)
  0x000000011262d03b: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2432}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x000000011262d040: mov    %rax,(%rsp)
  0x000000011262d044: callq  0x0000000112606c00  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2441}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x000000011262d049: mov    %r8,0x8(%rsp)
  0x000000011262d04e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262d056: callq  0x000000011260aea0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2459}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x000000011262d05b: jmpq   0x000000011262ca6d
  0x000000011262d060: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011262d06a: mov    $0xa050f00,%eax
  0x000000011262d06f: callq  0x00000001126082e0  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2484}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000011262d074: jmpq   0x000000011262cb90
  0x000000011262d079: mov    %rdx,%rdx
  0x000000011262d07c: callq  0x0000000112607760  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2497}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000011262d081: jmpq   0x000000011262cb9f
  0x000000011262d086: callq  0x00000001126072c0  ; OopMap{[96]=Oop [112]=Oop rsi=Oop [72]=Oop rdi=Oop off=2507}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x000000011262d08b: mov    %rdi,(%rsp)
  0x000000011262d08f: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2516}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x000000011262d094: mov    %rdi,(%rsp)
  0x000000011262d098: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2525}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x000000011262d09d: mov    %rdi,(%rsp)
  0x000000011262d0a1: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2534}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x000000011262d0a6: mov    %rdi,(%rsp)
  0x000000011262d0aa: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2543}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x000000011262d0af: mov    %rdi,(%rsp)
  0x000000011262d0b3: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2552}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x000000011262d0b8: mov    %rdi,(%rsp)
  0x000000011262d0bc: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2561}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x000000011262d0c1: mov    %rax,(%rsp)
  0x000000011262d0c5: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2570}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x000000011262d0ca: mov    %rax,(%rsp)
  0x000000011262d0ce: callq  0x0000000112606c00  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2579}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x000000011262d0d3: mov    %rax,0x8(%rsp)
  0x000000011262d0d8: movq   $0x161,(%rsp)
  0x000000011262d0e0: callq  0x000000011260aea0  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2597}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x000000011262d0e5: jmpq   0x000000011262cf5f
  0x000000011262d0ea: nop
  0x000000011262d0eb: nop
  0x000000011262d0ec: mov    0x2a8(%r15),%rax
  0x000000011262d0f3: movabs $0x0,%r10
  0x000000011262d0fd: mov    %r10,0x2a8(%r15)
  0x000000011262d104: movabs $0x0,%r10
  0x000000011262d10e: mov    %r10,0x2b0(%r15)
  0x000000011262d115: add    $0x80,%rsp
  0x000000011262d11c: pop    %rbp
  0x000000011262d11d: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262d122: hlt    
  0x000000011262d123: hlt    
  0x000000011262d124: hlt    
  0x000000011262d125: hlt    
  0x000000011262d126: hlt    
  0x000000011262d127: hlt    
  0x000000011262d128: hlt    
  0x000000011262d129: hlt    
  0x000000011262d12a: hlt    
  0x000000011262d12b: hlt    
  0x000000011262d12c: hlt    
  0x000000011262d12d: hlt    
  0x000000011262d12e: hlt    
  0x000000011262d12f: hlt    
  0x000000011262d130: hlt    
  0x000000011262d131: hlt    
  0x000000011262d132: hlt    
  0x000000011262d133: hlt    
  0x000000011262d134: hlt    
  0x000000011262d135: hlt    
  0x000000011262d136: hlt    
  0x000000011262d137: hlt    
  0x000000011262d138: hlt    
  0x000000011262d139: hlt    
  0x000000011262d13a: hlt    
  0x000000011262d13b: hlt    
  0x000000011262d13c: hlt    
  0x000000011262d13d: hlt    
  0x000000011262d13e: hlt    
  0x000000011262d13f: hlt    
[Stub Code]
  0x000000011262d140: nop                       ;   {no_reloc}
  0x000000011262d141: nop
  0x000000011262d142: nop
  0x000000011262d143: nop
  0x000000011262d144: nop
  0x000000011262d145: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262d14f: jmpq   0x000000011262d14f  ;   {runtime_call}
  0x000000011262d154: nop
  0x000000011262d155: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262d15f: jmpq   0x000000011262d15f  ;   {runtime_call}
[Exception Handler]
  0x000000011262d164: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011262d169: mov    %rsp,-0x28(%rsp)
  0x000000011262d16e: sub    $0x80,%rsp
  0x000000011262d175: mov    %rax,0x78(%rsp)
  0x000000011262d17a: mov    %rcx,0x70(%rsp)
  0x000000011262d17f: mov    %rdx,0x68(%rsp)
  0x000000011262d184: mov    %rbx,0x60(%rsp)
  0x000000011262d189: mov    %rbp,0x50(%rsp)
  0x000000011262d18e: mov    %rsi,0x48(%rsp)
  0x000000011262d193: mov    %rdi,0x40(%rsp)
  0x000000011262d198: mov    %r8,0x38(%rsp)
  0x000000011262d19d: mov    %r9,0x30(%rsp)
  0x000000011262d1a2: mov    %r10,0x28(%rsp)
  0x000000011262d1a7: mov    %r11,0x20(%rsp)
  0x000000011262d1ac: mov    %r12,0x18(%rsp)
  0x000000011262d1b1: mov    %r13,0x10(%rsp)
  0x000000011262d1b6: mov    %r14,0x8(%rsp)
  0x000000011262d1bb: mov    %r15,(%rsp)
  0x000000011262d1bf: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262d1c9: movabs $0x11262d169,%rsi  ;   {internal_word}
  0x000000011262d1d3: mov    %rsp,%rdx
  0x000000011262d1d6: and    $0xfffffffffffffff0,%rsp
  0x000000011262d1da: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262d1df: hlt    
[Deopt Handler Code]
  0x000000011262d1e0: movabs $0x11262d1e0,%r10  ;   {section_word}
  0x000000011262d1ea: push   %r10
  0x000000011262d1ec: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262d1f1: hlt    
  0x000000011262d1f2: hlt    
  0x000000011262d1f3: hlt    
  0x000000011262d1f4: hlt    
  0x000000011262d1f5: hlt    
  0x000000011262d1f6: hlt    
  0x000000011262d1f7: hlt    
<nmethod compile_id='42' compiler='C1' level='3' entry='0x000000011262c6c0' size='5552' address='0x000000011262c4d0' relocation_offset='296' insts_offset='496' stub_offset='3184' scopes_data_offset='3400' scopes_pcs_offset='4176' dependencies_offset='5488' nul_chk_table_offset='5496' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='255' backedge_count='15086' iicount='255' stamp='0.231'/>
<writer thread='7171'/>
<task_queued compile_id='45' method='java/util/Vector size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.231' comment='tiered' hot_count='128'/>
<task_queued compile_id='46' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.231' comment='tiered' hot_count='128'/>
<task_queued compile_id='47' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.231' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112629950:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000112629ac0: mov    0x8(%rsi),%r10d
  0x0000000112629ac4: shl    $0x3,%r10
  0x0000000112629ac8: cmp    %rax,%r10
  0x0000000112629acb: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112629ad1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112629adc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112629ae0: mov    %eax,-0x14000(%rsp)
  0x0000000112629ae7: push   %rbp
  0x0000000112629ae8: sub    $0x30,%rsp
  0x0000000112629aec: movabs $0x129f58170,%rax  ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629af6: mov    0xdc(%rax),%edi
  0x0000000112629afc: add    $0x8,%edi
  0x0000000112629aff: mov    %edi,0xdc(%rax)
  0x0000000112629b05: movabs $0x129d11dc0,%rax  ;   {metadata({method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629b0f: and    $0x1ff8,%edi
  0x0000000112629b15: cmp    $0x0,%edi
  0x0000000112629b18: je     0x0000000112629ccd  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1391)

  0x0000000112629b1e: mov    0xc(%rsi),%eax
  0x0000000112629b21: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1391)

  0x0000000112629b25: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x0000000112629ce4
  0x0000000112629b28: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1393)

  0x0000000112629b2c: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1395)
                                                ; implicit exception: dispatches to 0x0000000112629ce9
  0x0000000112629b2f: cmp    $0x0,%ecx
  0x0000000112629b32: movabs $0x129f58170,%rbx  ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629b3c: movabs $0x108,%rdx
  0x0000000112629b46: jl     0x0000000112629b56
  0x0000000112629b4c: movabs $0x118,%rdx
  0x0000000112629b56: mov    (%rbx,%rdx,1),%r8
  0x0000000112629b5a: lea    0x1(%r8),%r8
  0x0000000112629b5e: mov    %r8,(%rbx,%rdx,1)
  0x0000000112629b62: jl     0x0000000112629c9a  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1397)

  0x0000000112629b68: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1397)
                                                ; implicit exception: dispatches to 0x0000000112629cee
  0x0000000112629b6b: sub    %edi,%ebx
  0x0000000112629b6d: cmp    %ebx,%ecx
  0x0000000112629b6f: movabs $0x129f58170,%rbx  ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629b79: movabs $0x128,%rdx
  0x0000000112629b83: jle    0x0000000112629b93
  0x0000000112629b89: movabs $0x138,%rdx
  0x0000000112629b93: mov    (%rbx,%rdx,1),%r8
  0x0000000112629b97: lea    0x1(%r8),%r8
  0x0000000112629b9b: mov    %r8,(%rbx,%rdx,1)
  0x0000000112629b9f: jg     0x0000000112629c9a  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1397)

  0x0000000112629ba5: mov    $0x0,%ebx
  0x0000000112629baa: jmpq   0x0000000112629c5a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1400)

  0x0000000112629baf: nop
  0x0000000112629bb0: mov    %rcx,%rdx
  0x0000000112629bb3: inc    %edx
  0x0000000112629bb5: movslq %ecx,%r8
  0x0000000112629bb8: cmp    0xc(%rax),%ecx
  0x0000000112629bbb: jae    0x0000000112629cf3
  0x0000000112629bc1: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1401)

  0x0000000112629bc7: mov    %rbx,%r8
  0x0000000112629bca: inc    %r8d
  0x0000000112629bcd: movslq %ebx,%r9
  0x0000000112629bd0: cmp    0xc(%rsi),%ebx
  0x0000000112629bd3: jae    0x0000000112629cfc
  0x0000000112629bd9: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1401)

  0x0000000112629bdf: movabs $0x129f58170,%r9   ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629be9: mov    0xe0(%r9),%r11d
  0x0000000112629bf0: add    $0x8,%r11d
  0x0000000112629bf4: mov    %r11d,0xe0(%r9)
  0x0000000112629bfb: movabs $0x129d11dc0,%r9   ;   {metadata({method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629c05: and    $0xfff8,%r11d
  0x0000000112629c0c: cmp    $0x0,%r11d
  0x0000000112629c10: je     0x0000000112629d05  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)

  0x0000000112629c16: test   %eax,-0x33d9b1c(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112629c1c: cmp    %ebx,%ecx
  0x0000000112629c1e: movabs $0x129f58170,%rbx  ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629c28: movabs $0x168,%rcx
  0x0000000112629c32: je     0x0000000112629c42
  0x0000000112629c38: movabs $0x178,%rcx
  0x0000000112629c42: mov    (%rbx,%rcx,1),%r9
  0x0000000112629c46: lea    0x1(%r9),%r9
  0x0000000112629c4a: mov    %r9,(%rbx,%rcx,1)
  0x0000000112629c4e: jne    0x0000000112629cab  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)

  0x0000000112629c54: mov    %r8,%rbx
  0x0000000112629c57: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1400)

  0x0000000112629c5a: dec    %edi
  0x0000000112629c5c: cmp    $0x0,%edi
  0x0000000112629c5f: movabs $0x129f58170,%rdx  ;   {metadata(method data for {method} {0x0000000129d11dc0} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000112629c69: movabs $0x148,%r8
  0x0000000112629c73: jl     0x0000000112629c83
  0x0000000112629c79: movabs $0x158,%r8
  0x0000000112629c83: mov    (%rdx,%r8,1),%r9
  0x0000000112629c87: lea    0x1(%r9),%r9
  0x0000000112629c8b: mov    %r9,(%rdx,%r8,1)
  0x0000000112629c8f: jl     0x0000000112629cbc
  0x0000000112629c95: jmpq   0x0000000112629bb0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1400)

  0x0000000112629c9a: mov    $0x0,%eax
  0x0000000112629c9f: add    $0x30,%rsp
  0x0000000112629ca3: pop    %rbp
  0x0000000112629ca4: test   %eax,-0x33d9baa(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112629caa: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1398)

  0x0000000112629cab: mov    $0x0,%eax
  0x0000000112629cb0: add    $0x30,%rsp
  0x0000000112629cb4: pop    %rbp
  0x0000000112629cb5: test   %eax,-0x33d9bbb(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112629cbb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1402)

  0x0000000112629cbc: mov    $0x1,%eax
  0x0000000112629cc1: add    $0x30,%rsp
  0x0000000112629cc5: pop    %rbp
  0x0000000112629cc6: test   %eax,-0x33d9bcc(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112629ccc: retq   
  0x0000000112629ccd: mov    %rax,0x8(%rsp)
  0x0000000112629cd2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112629cda: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1391)
                                                ;   {runtime_call}
  0x0000000112629cdf: jmpq   0x0000000112629b1e
  0x0000000112629ce4: callq  0x00000001126072c0  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1393)
                                                ;   {runtime_call}
  0x0000000112629ce9: callq  0x00000001126072c0  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1395)
                                                ;   {runtime_call}
  0x0000000112629cee: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1397)
                                                ;   {runtime_call}
  0x0000000112629cf3: mov    %rcx,(%rsp)
  0x0000000112629cf7: callq  0x0000000112606c00  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1401)
                                                ;   {runtime_call}
  0x0000000112629cfc: mov    %rbx,(%rsp)
  0x0000000112629d00: callq  0x0000000112606c00  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1401)
                                                ;   {runtime_call}
  0x0000000112629d05: mov    %r9,0x8(%rsp)
  0x0000000112629d0a: movq   $0x41,(%rsp)
  0x0000000112629d12: callq  0x000000011260aea0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)
                                                ;   {runtime_call}
  0x0000000112629d17: jmpq   0x0000000112629c16
  0x0000000112629d1c: nop
  0x0000000112629d1d: nop
  0x0000000112629d1e: mov    0x2a8(%r15),%rax
  0x0000000112629d25: movabs $0x0,%r10
  0x0000000112629d2f: mov    %r10,0x2a8(%r15)
  0x0000000112629d36: movabs $0x0,%r10
  0x0000000112629d40: mov    %r10,0x2b0(%r15)
  0x0000000112629d47: add    $0x30,%rsp
  0x0000000112629d4b: pop    %rbp
  0x0000000112629d4c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112629d51: hlt    
  0x0000000112629d52: hlt    
  0x0000000112629d53: hlt    
  0x0000000112629d54: hlt    
  0x0000000112629d55: hlt    
  0x0000000112629d56: hlt    
  0x0000000112629d57: hlt    
  0x0000000112629d58: hlt    
  0x0000000112629d59: hlt    
  0x0000000112629d5a: hlt    
  0x0000000112629d5b: hlt    
  0x0000000112629d5c: hlt    
  0x0000000112629d5d: hlt    
  0x0000000112629d5e: hlt    
  0x0000000112629d5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112629d60: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112629d65: mov    %rsp,-0x28(%rsp)
  0x0000000112629d6a: sub    $0x80,%rsp
  0x0000000112629d71: mov    %rax,0x78(%rsp)
  0x0000000112629d76: mov    %rcx,0x70(%rsp)
  0x0000000112629d7b: mov    %rdx,0x68(%rsp)
  0x0000000112629d80: mov    %rbx,0x60(%rsp)
  0x0000000112629d85: mov    %rbp,0x50(%rsp)
  0x0000000112629d8a: mov    %rsi,0x48(%rsp)
  0x0000000112629d8f: mov    %rdi,0x40(%rsp)
  0x0000000112629d94: mov    %r8,0x38(%rsp)
  0x0000000112629d99: mov    %r9,0x30(%rsp)
  0x0000000112629d9e: mov    %r10,0x28(%rsp)
  0x0000000112629da3: mov    %r11,0x20(%rsp)
  0x0000000112629da8: mov    %r12,0x18(%rsp)
  0x0000000112629dad: mov    %r13,0x10(%rsp)
  0x0000000112629db2: mov    %r14,0x8(%rsp)
  0x0000000112629db7: mov    %r15,(%rsp)
  0x0000000112629dbb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112629dc5: movabs $0x112629d65,%rsi  ;   {internal_word}
  0x0000000112629dcf: mov    %rsp,%rdx
  0x0000000112629dd2: and    $0xfffffffffffffff0,%rsp
  0x0000000112629dd6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112629ddb: hlt    
[Deopt Handler Code]
  0x0000000112629ddc: movabs $0x112629ddc,%r10  ;   {section_word}
  0x0000000112629de6: push   %r10
  0x0000000112629de8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112629ded: hlt    
  0x0000000112629dee: hlt    
  0x0000000112629def: hlt    
<nmethod compile_id='44' compiler='C1' level='3' entry='0x0000000112629ac0' size='1824' address='0x0000000112629950' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='537' backedge_count='1262' iicount='537' stamp='0.234'/>
<writer thread='7171'/>
<task_queued compile_id='48' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.234' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126293d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000112629540: mov    0x8(%rsi),%r10d
  0x0000000112629544: shl    $0x3,%r10
  0x0000000112629548: cmp    %rax,%r10
  0x000000011262954b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112629551: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262955c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112629560: mov    %eax,-0x14000(%rsp)
  0x0000000112629567: push   %rbp
  0x0000000112629568: sub    $0x40,%rsp
  0x000000011262956c: movabs $0x129f58320,%rax  ;   {metadata(method data for {method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000112629576: mov    0xdc(%rax),%edi
  0x000000011262957c: add    $0x8,%edi
  0x000000011262957f: mov    %edi,0xdc(%rax)
  0x0000000112629585: movabs $0x129ecbd18,%rax  ;   {metadata({method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262958f: and    $0x1ff8,%edi
  0x0000000112629595: cmp    $0x0,%edi
  0x0000000112629598: je     0x00000001126296a6  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000011262959e: movabs $0x129f58320,%rax  ;   {metadata(method data for {method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000001126295a8: addq   $0x1,0x118(%rax)
  0x00000001126295b0: movabs $0x129f48d00,%rax  ;   {metadata(method data for {method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000001126295ba: mov    0xdc(%rax),%esi
  0x00000001126295c0: add    $0x8,%esi
  0x00000001126295c3: mov    %esi,0xdc(%rax)
  0x00000001126295c9: movabs $0x129ecb548,%rax  ;   {metadata({method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000001126295d3: and    $0x7ffff8,%esi
  0x00000001126295d9: cmp    $0x0,%esi
  0x00000001126295dc: je     0x00000001126296bd
  0x00000001126295e2: mov    %rdx,%rax
  0x00000001126295e5: and    $0xffff,%eax
  0x00000001126295eb: movabs $0x76ab484e8,%rsi  ;   {oop([I)}
  0x00000001126295f5: movslq %eax,%rdi
  0x00000001126295f8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000001126296d4
  0x00000001126295fb: jae    0x00000001126296de
  0x0000000112629601: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000112629605: mov    %rax,%rsi
  0x0000000112629608: and    $0x20000,%esi
  0x000000011262960e: cmp    $0x0,%esi
  0x0000000112629611: movabs $0x129f58320,%rsi  ;   {metadata(method data for {method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262961b: movabs $0x138,%rdi
  0x0000000112629625: je     0x0000000112629635
  0x000000011262962b: movabs $0x148,%rdi
  0x0000000112629635: mov    (%rsi,%rdi,1),%rbx
  0x0000000112629639: lea    0x1(%rbx),%rbx
  0x000000011262963d: mov    %rbx,(%rsi,%rdi,1)
  0x0000000112629641: je     0x0000000112629697  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000112629647: mov    %rax,%rsi
  0x000000011262964a: and    $0x7fc0000,%esi
  0x0000000112629650: cmp    $0x7fc0000,%esi
  0x0000000112629656: movabs $0x129f58320,%rsi  ;   {metadata(method data for {method} {0x0000000129ecbd18} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000112629660: movabs $0x158,%rdi
  0x000000011262966a: je     0x000000011262967a
  0x0000000112629670: movabs $0x168,%rdi
  0x000000011262967a: mov    (%rsi,%rdi,1),%rbx
  0x000000011262967e: lea    0x1(%rbx),%rbx
  0x0000000112629682: mov    %rbx,(%rsi,%rdi,1)
  0x0000000112629686: je     0x0000000112629697  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x000000011262968c: shl    $0x5,%eax
  0x000000011262968f: sar    $0x17,%eax
  0x0000000112629692: add    %edx,%eax
  0x0000000112629694: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000112629697: mov    %rdx,%rax
  0x000000011262969a: add    $0x40,%rsp
  0x000000011262969e: pop    %rbp
  0x000000011262969f: test   %eax,-0x33d95a5(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126296a5: retq   
  0x00000001126296a6: mov    %rax,0x8(%rsp)
  0x00000001126296ab: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126296b3: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x00000001126296b8: jmpq   0x000000011262959e
  0x00000001126296bd: mov    %rax,0x8(%rsp)
  0x00000001126296c2: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126296ca: callq  0x000000011260aea0  ; OopMap{off=399}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001126296cf: jmpq   0x00000001126295e2
  0x00000001126296d4: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=409}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001126296d9: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=414}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001126296de: mov    %rax,(%rsp)
  0x00000001126296e2: callq  0x0000000112606c00  ; OopMap{rsi=Oop off=423}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001126296e7: nop
  0x00000001126296e8: nop
  0x00000001126296e9: mov    0x2a8(%r15),%rax
  0x00000001126296f0: movabs $0x0,%r10
  0x00000001126296fa: mov    %r10,0x2a8(%r15)
  0x0000000112629701: movabs $0x0,%r10
  0x000000011262970b: mov    %r10,0x2b0(%r15)
  0x0000000112629712: add    $0x40,%rsp
  0x0000000112629716: pop    %rbp
  0x0000000112629717: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262971c: hlt    
  0x000000011262971d: hlt    
  0x000000011262971e: hlt    
  0x000000011262971f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112629720: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112629725: mov    %rsp,-0x28(%rsp)
  0x000000011262972a: sub    $0x80,%rsp
  0x0000000112629731: mov    %rax,0x78(%rsp)
  0x0000000112629736: mov    %rcx,0x70(%rsp)
  0x000000011262973b: mov    %rdx,0x68(%rsp)
  0x0000000112629740: mov    %rbx,0x60(%rsp)
  0x0000000112629745: mov    %rbp,0x50(%rsp)
  0x000000011262974a: mov    %rsi,0x48(%rsp)
  0x000000011262974f: mov    %rdi,0x40(%rsp)
  0x0000000112629754: mov    %r8,0x38(%rsp)
  0x0000000112629759: mov    %r9,0x30(%rsp)
  0x000000011262975e: mov    %r10,0x28(%rsp)
  0x0000000112629763: mov    %r11,0x20(%rsp)
  0x0000000112629768: mov    %r12,0x18(%rsp)
  0x000000011262976d: mov    %r13,0x10(%rsp)
  0x0000000112629772: mov    %r14,0x8(%rsp)
  0x0000000112629777: mov    %r15,(%rsp)
  0x000000011262977b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112629785: movabs $0x112629725,%rsi  ;   {internal_word}
  0x000000011262978f: mov    %rsp,%rdx
  0x0000000112629792: and    $0xfffffffffffffff0,%rsp
  0x0000000112629796: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262979b: hlt    
[Deopt Handler Code]
  0x000000011262979c: movabs $0x11262979c,%r10  ;   {section_word}
  0x00000001126297a6: push   %r10
  0x00000001126297a8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126297ad: hlt    
  0x00000001126297ae: hlt    
  0x00000001126297af: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x0000000112629540' size='1344' address='0x00000001126293d0' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1120' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='603' iicount='603' stamp='0.236'/>
<writer thread='7171'/>
<task_queued compile_id='49' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='512' iicount='512' level='3' stamp='0.236' comment='tiered' hot_count='512'/>
<task_queued compile_id='50' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='512' iicount='512' level='3' stamp='0.236' comment='tiered' hot_count='512'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262da90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129df3050} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262dbe0: mov    %eax,-0x14000(%rsp)
  0x000000011262dbe7: push   %rbp
  0x000000011262dbe8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x000000011262dbec: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x000000011262dbfb
  0x000000011262dbef: add    $0x30,%rsp
  0x000000011262dbf3: pop    %rbp
  0x000000011262dbf4: test   %eax,-0x33ddafa(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262dbfa: retq   
  0x000000011262dbfb: callq  0x00000001126072c0  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x000000011262dc00: nop
  0x000000011262dc01: nop
  0x000000011262dc02: mov    0x2a8(%r15),%rax
  0x000000011262dc09: movabs $0x0,%r10
  0x000000011262dc13: mov    %r10,0x2a8(%r15)
  0x000000011262dc1a: movabs $0x0,%r10
  0x000000011262dc24: mov    %r10,0x2b0(%r15)
  0x000000011262dc2b: add    $0x30,%rsp
  0x000000011262dc2f: pop    %rbp
  0x000000011262dc30: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262dc35: hlt    
  0x000000011262dc36: hlt    
  0x000000011262dc37: hlt    
  0x000000011262dc38: hlt    
  0x000000011262dc39: hlt    
  0x000000011262dc3a: hlt    
  0x000000011262dc3b: hlt    
  0x000000011262dc3c: hlt    
  0x000000011262dc3d: hlt    
  0x000000011262dc3e: hlt    
  0x000000011262dc3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262dc40: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262dc45: mov    %rsp,-0x28(%rsp)
  0x000000011262dc4a: sub    $0x80,%rsp
  0x000000011262dc51: mov    %rax,0x78(%rsp)
  0x000000011262dc56: mov    %rcx,0x70(%rsp)
  0x000000011262dc5b: mov    %rdx,0x68(%rsp)
  0x000000011262dc60: mov    %rbx,0x60(%rsp)
  0x000000011262dc65: mov    %rbp,0x50(%rsp)
  0x000000011262dc6a: mov    %rsi,0x48(%rsp)
  0x000000011262dc6f: mov    %rdi,0x40(%rsp)
  0x000000011262dc74: mov    %r8,0x38(%rsp)
  0x000000011262dc79: mov    %r9,0x30(%rsp)
  0x000000011262dc7e: mov    %r10,0x28(%rsp)
  0x000000011262dc83: mov    %r11,0x20(%rsp)
  0x000000011262dc88: mov    %r12,0x18(%rsp)
  0x000000011262dc8d: mov    %r13,0x10(%rsp)
  0x000000011262dc92: mov    %r14,0x8(%rsp)
  0x000000011262dc97: mov    %r15,(%rsp)
  0x000000011262dc9b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262dca5: movabs $0x11262dc45,%rsi  ;   {internal_word}
  0x000000011262dcaf: mov    %rsp,%rdx
  0x000000011262dcb2: and    $0xfffffffffffffff0,%rsp
  0x000000011262dcb6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262dcbb: hlt    
[Deopt Handler Code]
  0x000000011262dcbc: movabs $0x11262dcbc,%r10  ;   {section_word}
  0x000000011262dcc6: push   %r10
  0x000000011262dcc8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262dccd: hlt    
  0x000000011262dcce: hlt    
  0x000000011262dccf: hlt    
<nmethod compile_id='40' compiler='C1' level='1' entry='0x000000011262dbe0' size='712' address='0x000000011262da90' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='318' iicount='318' stamp='0.237'/>
<writer thread='7171'/>
<task_queued compile_id='51' method='sun/util/calendar/CalendarDate isNormalized ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.237' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262dd90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011262df00: mov    0x8(%rsi),%r10d
  0x000000011262df04: shl    $0x3,%r10
  0x000000011262df08: cmp    %rax,%r10
  0x000000011262df0b: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262df11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262df1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262df20: mov    %eax,-0x14000(%rsp)
  0x000000011262df27: push   %rbp
  0x000000011262df28: sub    $0x40,%rsp
  0x000000011262df2c: movabs $0x129f58848,%rax  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262df36: mov    0xdc(%rax),%edi
  0x000000011262df3c: add    $0x8,%edi
  0x000000011262df3f: mov    %edi,0xdc(%rax)
  0x000000011262df45: movabs $0x129ecc350,%rax  ;   {metadata({method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262df4f: and    $0x1ff8,%edi
  0x000000011262df55: cmp    $0x0,%edi
  0x000000011262df58: je     0x000000011262e0a3  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@0 (line 222)

  0x000000011262df5e: movabs $0x129f58848,%rax  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262df68: addq   $0x1,0x118(%rax)
  0x000000011262df70: movabs $0x129f48d00,%rax  ;   {metadata(method data for {method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262df7a: mov    0xdc(%rax),%esi
  0x000000011262df80: add    $0x8,%esi
  0x000000011262df83: mov    %esi,0xdc(%rax)
  0x000000011262df89: movabs $0x129ecb548,%rax  ;   {metadata({method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262df93: and    $0x7ffff8,%esi
  0x000000011262df99: cmp    $0x0,%esi
  0x000000011262df9c: je     0x000000011262e0ba
  0x000000011262dfa2: mov    %rdx,%rax
  0x000000011262dfa5: and    $0xffff,%eax
  0x000000011262dfab: movabs $0x76ab484e8,%rsi  ;   {oop([I)}
  0x000000011262dfb5: movslq %eax,%rdi
  0x000000011262dfb8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000011262e0d1
  0x000000011262dfbb: jae    0x000000011262e0db
  0x000000011262dfc1: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)

  0x000000011262dfc5: mov    %rax,%rsi
  0x000000011262dfc8: and    $0x10000,%esi
  0x000000011262dfce: cmp    $0x0,%esi
  0x000000011262dfd1: movabs $0x129f58848,%rsi  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262dfdb: movabs $0x138,%rdi
  0x000000011262dfe5: je     0x000000011262dff5
  0x000000011262dfeb: movabs $0x148,%rdi
  0x000000011262dff5: mov    (%rsi,%rdi,1),%rbx
  0x000000011262dff9: lea    0x1(%rbx),%rbx
  0x000000011262dffd: mov    %rbx,(%rsi,%rdi,1)
  0x000000011262e001: je     0x000000011262e094  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@12 (line 225)

  0x000000011262e007: mov    %rax,%rsi
  0x000000011262e00a: and    $0x7fc0000,%esi
  0x000000011262e010: cmp    $0x7fc0000,%esi
  0x000000011262e016: movabs $0x129f58848,%rsi  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262e020: movabs $0x158,%rdi
  0x000000011262e02a: je     0x000000011262e03a
  0x000000011262e030: movabs $0x168,%rdi
  0x000000011262e03a: mov    (%rsi,%rdi,1),%rbx
  0x000000011262e03e: lea    0x1(%rbx),%rbx
  0x000000011262e042: mov    %rbx,(%rsi,%rdi,1)
  0x000000011262e046: jne    0x000000011262e07c  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@21 (line 226)

  0x000000011262e04c: cmp    $0xb5,%edx
  0x000000011262e052: je     0x000000011262e062  ;*lookupswitch
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@41 (line 231)

  0x000000011262e058: mov    $0xffffffff,%edx
  0x000000011262e05d: jmpq   0x000000011262e094  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@69 (line 238)

  0x000000011262e062: movabs $0x129f58848,%rax  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262e06c: incl   0x1c0(%rax)
  0x000000011262e072: mov    $0x39c,%edx
  0x000000011262e077: jmpq   0x000000011262e094  ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@64 (line 233)

  0x000000011262e07c: shl    $0x5,%eax
  0x000000011262e07f: sar    $0x17,%eax
  0x000000011262e082: sub    %eax,%edx
  0x000000011262e084: movabs $0x129f58848,%rax  ;   {metadata(method data for {method} {0x0000000129ecc350} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011262e08e: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@37 (line 229)

  0x000000011262e094: mov    %rdx,%rax
  0x000000011262e097: add    $0x40,%rsp
  0x000000011262e09b: pop    %rbp
  0x000000011262e09c: test   %eax,-0x33ddfa2(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262e0a2: retq   
  0x000000011262e0a3: mov    %rax,0x8(%rsp)
  0x000000011262e0a8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262e0b0: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=437}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@-1 (line 222)
                                                ;   {runtime_call}
  0x000000011262e0b5: jmpq   0x000000011262df5e
  0x000000011262e0ba: mov    %rax,0x8(%rsp)
  0x000000011262e0bf: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262e0c7: callq  0x000000011260aea0  ; OopMap{off=460}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000011262e0cc: jmpq   0x000000011262dfa2
  0x000000011262e0d1: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=470}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000011262e0d6: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=475}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000011262e0db: mov    %rax,(%rsp)
  0x000000011262e0df: callq  0x0000000112606c00  ; OopMap{rsi=Oop off=484}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000011262e0e4: nop
  0x000000011262e0e5: nop
  0x000000011262e0e6: mov    0x2a8(%r15),%rax
  0x000000011262e0ed: movabs $0x0,%r10
  0x000000011262e0f7: mov    %r10,0x2a8(%r15)
  0x000000011262e0fe: movabs $0x0,%r10
  0x000000011262e108: mov    %r10,0x2b0(%r15)
  0x000000011262e10f: add    $0x40,%rsp
  0x000000011262e113: pop    %rbp
  0x000000011262e114: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262e119: hlt    
  0x000000011262e11a: hlt    
  0x000000011262e11b: hlt    
  0x000000011262e11c: hlt    
  0x000000011262e11d: hlt    
  0x000000011262e11e: hlt    
  0x000000011262e11f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262e120: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262e125: mov    %rsp,-0x28(%rsp)
  0x000000011262e12a: sub    $0x80,%rsp
  0x000000011262e131: mov    %rax,0x78(%rsp)
  0x000000011262e136: mov    %rcx,0x70(%rsp)
  0x000000011262e13b: mov    %rdx,0x68(%rsp)
  0x000000011262e140: mov    %rbx,0x60(%rsp)
  0x000000011262e145: mov    %rbp,0x50(%rsp)
  0x000000011262e14a: mov    %rsi,0x48(%rsp)
  0x000000011262e14f: mov    %rdi,0x40(%rsp)
  0x000000011262e154: mov    %r8,0x38(%rsp)
  0x000000011262e159: mov    %r9,0x30(%rsp)
  0x000000011262e15e: mov    %r10,0x28(%rsp)
  0x000000011262e163: mov    %r11,0x20(%rsp)
  0x000000011262e168: mov    %r12,0x18(%rsp)
  0x000000011262e16d: mov    %r13,0x10(%rsp)
  0x000000011262e172: mov    %r14,0x8(%rsp)
  0x000000011262e177: mov    %r15,(%rsp)
  0x000000011262e17b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262e185: movabs $0x11262e125,%rsi  ;   {internal_word}
  0x000000011262e18f: mov    %rsp,%rdx
  0x000000011262e192: and    $0xfffffffffffffff0,%rsp
  0x000000011262e196: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262e19b: hlt    
[Deopt Handler Code]
  0x000000011262e19c: movabs $0x11262e19c,%r10  ;   {section_word}
  0x000000011262e1a6: push   %r10
  0x000000011262e1a8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262e1ad: hlt    
  0x000000011262e1ae: hlt    
  0x000000011262e1af: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x000000011262df00' size='1472' address='0x000000011262dd90' relocation_offset='296' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1200' dependencies_offset='1440' nul_chk_table_offset='1448' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='544' iicount='544' stamp='0.239'/>
<writer thread='7171'/>
<task_queued compile_id='52' method='java/util/ArrayList size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.239' comment='tiered' hot_count='128'/>
<task_queued compile_id='53' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.239' comment='tiered' hot_count='256'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262e390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011262e500: mov    %eax,-0x14000(%rsp)
  0x000000011262e507: push   %rbp
  0x000000011262e508: sub    $0x30,%rsp
  0x000000011262e50c: movabs $0x129f58660,%rdi  ;   {metadata(method data for {method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262e516: mov    0xdc(%rdi),%ebx
  0x000000011262e51c: add    $0x8,%ebx
  0x000000011262e51f: mov    %ebx,0xdc(%rdi)
  0x000000011262e525: movabs $0x129da81a0,%rdi  ;   {metadata({method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262e52f: and    $0x1ff8,%ebx
  0x000000011262e535: cmp    $0x0,%ebx
  0x000000011262e538: je     0x000000011262e630  ;*getstatic $assertionsDisabled
                                                ; - java.lang.Character::toUpperCaseEx@0 (line 7137)

  0x000000011262e53e: movabs $0x129f58660,%rdi  ;   {metadata(method data for {method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262e548: incl   0x108(%rdi)        ;*ifne
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)

  0x000000011262e54e: movabs $0x129f58660,%rdi  ;   {metadata(method data for {method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262e558: addq   $0x1,0x168(%rdi)
  0x000000011262e560: mov    %rsi,%rdi
  0x000000011262e563: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)

  0x000000011262e566: mov    %edi,0x20(%rsp)
  0x000000011262e56a: nop
  0x000000011262e56b: nop
  0x000000011262e56c: nop
  0x000000011262e56d: nop
  0x000000011262e56e: nop
  0x000000011262e56f: callq  0x0000000112553420  ; OopMap{off=116}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ;   {static_call}
  0x000000011262e574: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011262e647
  0x000000011262e577: mov    %rax,%rdx
  0x000000011262e57a: movabs $0x129f58660,%rsi  ;   {metadata(method data for {method} {0x0000000129da81a0} &apos;toUpperCaseEx&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011262e584: mov    0x8(%rdx),%edx
  0x000000011262e587: shl    $0x3,%rdx
  0x000000011262e58b: cmp    0x180(%rsi),%rdx
  0x000000011262e592: jne    0x000000011262e5a1
  0x000000011262e594: addq   $0x1,0x188(%rsi)
  0x000000011262e59c: jmpq   0x000000011262e607
  0x000000011262e5a1: cmp    0x190(%rsi),%rdx
  0x000000011262e5a8: jne    0x000000011262e5b7
  0x000000011262e5aa: addq   $0x1,0x198(%rsi)
  0x000000011262e5b2: jmpq   0x000000011262e607
  0x000000011262e5b7: cmpq   $0x0,0x180(%rsi)
  0x000000011262e5c2: jne    0x000000011262e5db
  0x000000011262e5c4: mov    %rdx,0x180(%rsi)
  0x000000011262e5cb: movq   $0x1,0x188(%rsi)
  0x000000011262e5d6: jmpq   0x000000011262e607
  0x000000011262e5db: cmpq   $0x0,0x190(%rsi)
  0x000000011262e5e6: jne    0x000000011262e5ff
  0x000000011262e5e8: mov    %rdx,0x190(%rsi)
  0x000000011262e5ef: movq   $0x1,0x198(%rsi)
  0x000000011262e5fa: jmpq   0x000000011262e607
  0x000000011262e5ff: addq   $0x1,0x178(%rsi)
  0x000000011262e607: mov    0x20(%rsp),%edx
  0x000000011262e60b: mov    %rax,%rsi          ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)

  0x000000011262e60e: nop
  0x000000011262e60f: nop
  0x000000011262e610: nop
  0x000000011262e611: nop
  0x000000011262e612: nop
  0x000000011262e613: nop
  0x000000011262e614: nop
  0x000000011262e615: movabs $0xffffffffffffffff,%rax
  0x000000011262e61f: callq  0x0000000112553220  ; OopMap{off=292}
                                                ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {virtual_call}
  0x000000011262e624: add    $0x30,%rsp
  0x000000011262e628: pop    %rbp
  0x000000011262e629: test   %eax,-0x33de52f(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262e62f: retq   
  0x000000011262e630: mov    %rdi,0x8(%rsp)
  0x000000011262e635: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262e63d: callq  0x000000011260aea0  ; OopMap{off=322}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ;   {runtime_call}
  0x000000011262e642: jmpq   0x000000011262e53e
  0x000000011262e647: callq  0x00000001126072c0  ; OopMap{rax=Oop off=332}
                                                ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {runtime_call}
  0x000000011262e64c: nop
  0x000000011262e64d: nop
  0x000000011262e64e: mov    0x2a8(%r15),%rax
  0x000000011262e655: movabs $0x0,%r10
  0x000000011262e65f: mov    %r10,0x2a8(%r15)
  0x000000011262e666: movabs $0x0,%r10
  0x000000011262e670: mov    %r10,0x2b0(%r15)
  0x000000011262e677: add    $0x30,%rsp
  0x000000011262e67b: pop    %rbp
  0x000000011262e67c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262e681: hlt    
  0x000000011262e682: hlt    
  0x000000011262e683: hlt    
  0x000000011262e684: hlt    
  0x000000011262e685: hlt    
  0x000000011262e686: hlt    
  0x000000011262e687: hlt    
  0x000000011262e688: hlt    
  0x000000011262e689: hlt    
  0x000000011262e68a: hlt    
  0x000000011262e68b: hlt    
  0x000000011262e68c: hlt    
  0x000000011262e68d: hlt    
  0x000000011262e68e: hlt    
  0x000000011262e68f: hlt    
  0x000000011262e690: hlt    
  0x000000011262e691: hlt    
  0x000000011262e692: hlt    
  0x000000011262e693: hlt    
  0x000000011262e694: hlt    
  0x000000011262e695: hlt    
  0x000000011262e696: hlt    
  0x000000011262e697: hlt    
  0x000000011262e698: hlt    
  0x000000011262e699: hlt    
  0x000000011262e69a: hlt    
  0x000000011262e69b: hlt    
  0x000000011262e69c: hlt    
  0x000000011262e69d: hlt    
  0x000000011262e69e: hlt    
  0x000000011262e69f: hlt    
[Stub Code]
  0x000000011262e6a0: nop                       ;   {no_reloc}
  0x000000011262e6a1: nop
  0x000000011262e6a2: nop
  0x000000011262e6a3: nop
  0x000000011262e6a4: nop
  0x000000011262e6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262e6af: jmpq   0x000000011262e6af  ;   {runtime_call}
  0x000000011262e6b4: nop
  0x000000011262e6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011262e6bf: jmpq   0x000000011262e6bf  ;   {runtime_call}
[Exception Handler]
  0x000000011262e6c4: callq  0x000000011260bf60  ;   {runtime_call}
  0x000000011262e6c9: mov    %rsp,-0x28(%rsp)
  0x000000011262e6ce: sub    $0x80,%rsp
  0x000000011262e6d5: mov    %rax,0x78(%rsp)
  0x000000011262e6da: mov    %rcx,0x70(%rsp)
  0x000000011262e6df: mov    %rdx,0x68(%rsp)
  0x000000011262e6e4: mov    %rbx,0x60(%rsp)
  0x000000011262e6e9: mov    %rbp,0x50(%rsp)
  0x000000011262e6ee: mov    %rsi,0x48(%rsp)
  0x000000011262e6f3: mov    %rdi,0x40(%rsp)
  0x000000011262e6f8: mov    %r8,0x38(%rsp)
  0x000000011262e6fd: mov    %r9,0x30(%rsp)
  0x000000011262e702: mov    %r10,0x28(%rsp)
  0x000000011262e707: mov    %r11,0x20(%rsp)
  0x000000011262e70c: mov    %r12,0x18(%rsp)
  0x000000011262e711: mov    %r13,0x10(%rsp)
  0x000000011262e716: mov    %r14,0x8(%rsp)
  0x000000011262e71b: mov    %r15,(%rsp)
  0x000000011262e71f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262e729: movabs $0x11262e6c9,%rsi  ;   {internal_word}
  0x000000011262e733: mov    %rsp,%rdx
  0x000000011262e736: and    $0xfffffffffffffff0,%rsp
  0x000000011262e73a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262e73f: hlt    
[Deopt Handler Code]
  0x000000011262e740: movabs $0x11262e740,%r10  ;   {section_word}
  0x000000011262e74a: push   %r10
  0x000000011262e74c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262e751: hlt    
  0x000000011262e752: hlt    
  0x000000011262e753: hlt    
  0x000000011262e754: hlt    
  0x000000011262e755: hlt    
  0x000000011262e756: hlt    
  0x000000011262e757: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x000000011262e500' size='1216' address='0x000000011262e390' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='976' scopes_pcs_offset='1032' dependencies_offset='1192' nul_chk_table_offset='1200' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='544' iicount='544' stamp='0.241'/>
<writer thread='7171'/>
<task_queued compile_id='54' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.241' comment='tiered' hot_count='256'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262e890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d91630} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262e9e0: mov    0x8(%rsi),%r10d
  0x000000011262e9e4: 
<writer thread='7171'/>
[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
shl    $0x3,%r10
  0x000000011262e9e8: cmp    %rax,%r10
  0x000000011262e9eb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262e9f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262e9fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262ea00: mov    %eax,-0x14000(%rsp)
  0x000000011262ea07: push   %rbp
  0x000000011262ea08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000011262ea0c: mov    0x10(%rsi),%eax
  0x000000011262ea0f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x000000011262ea13: add    $0x30,%rsp
  0x000000011262ea17: pop    %rbp
  0x000000011262ea18: test   %eax,-0x33de91e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262ea1e: retq   
  0x000000011262ea1f: nop
  0x000000011262ea20: nop
  0x000000011262ea21: mov    0x2a8(%r15),%rax
  0x000000011262ea28: movabs $0x0,%r10
  0x000000011262ea32: mov    %r10,0x2a8(%r15)
  0x000000011262ea39: movabs $0x0,%r10
  0x000000011262ea43: mov    %r10,0x2b0(%r15)
  0x000000011262ea4a: add    $0x30,%rsp
  0x000000011262ea4e: pop    %rbp
  0x000000011262ea4f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262ea54: hlt    
  0x000000011262ea55: hlt    
  0x000000011262ea56: hlt    
  0x000000011262ea57: hlt    
  0x000000011262ea58: hlt    
  0x000000011262ea59: hlt    
  0x000000011262ea5a: hlt    
  0x000000011262ea5b: hlt    
  0x000000011262ea5c: hlt    
  0x000000011262ea5d: hlt    
  0x000000011262ea5e: hlt    
  0x000000011262ea5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262ea60: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262ea65: mov    %rsp,-0x28(%rsp)
  0x000000011262ea6a: sub    $0x80,%rsp
  0x000000011262ea71: mov    %rax,0x78(%rsp)
  0x000000011262ea76: mov    %rcx,0x70(%rsp)
  0x000000011262ea7b: mov    %rdx,0x68(%rsp)
  0x000000011262ea80: mov    %rbx,0x60(%rsp)
  0x000000011262ea85: mov    %rbp,0x50(%rsp)
  0x000000011262ea8a: mov    %rsi,0x48(%rsp)
  0x000000011262ea8f: mov    %rdi,0x40(%rsp)
  0x000000011262ea94: mov    %r8,0x38(%rsp)
  0x000000011262ea99: mov    %r9,0x30(%rsp)
  0x000000011262ea9e: mov    %r10,0x28(%rsp)
  0x000000011262eaa3: mov    %r11,0x20(%rsp)
  0x000000011262eaa8: mov    %r12,0x18(%rsp)
  0x000000011262eaad: mov    %r13,0x10(%rsp)
  0x000000011262eab2: mov    %r14,0x8(%rsp)
  0x000000011262eab7: mov    %r15,(%rsp)
  0x000000011262eabb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262eac5: movabs $0x11262ea65,%rsi  ;   {internal_word}
  0x000000011262eacf: mov    %rsp,%rdx
  0x000000011262ead2: and    $0xfffffffffffffff0,%rsp
  0x000000011262ead6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262eadb: hlt    
[Deopt Handler Code]
  0x000000011262eadc: movabs $0x11262eadc,%r10  ;   {section_word}
  0x000000011262eae6: push   %r10
  0x000000011262eae8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262eaed: hlt    
  0x000000011262eaee: hlt    
  0x000000011262eaef: hlt    
<nmethod compile_id='53' compiler='C1' level='1' entry='0x000000011262e9e0' size='704' address='0x000000011262e890' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='277' iicount='277' stamp='0.242'/>
Decoding compiled method 0x000000011262eb90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98a18} &apos;getProtocol&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262ece0: mov    0x8(%rsi),%r10d
  0x000000011262ece4: shl    $0x3,%r10
  0x000000011262ece8: cmp    %rax,%r10
  0x000000011262eceb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262ecf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262ecfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262ed00: mov    %eax,-0x14000(%rsp)
  0x000000011262ed07: push   %rbp
  0x000000011262ed08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getProtocol@0 (line 792)

  0x000000011262ed0c: mov    0x14(%rsi),%eax
  0x000000011262ed0f: shl    $0x3,%rax          ;*getfield protocol
                                                ; - java.net.URL::getProtocol@1 (line 792)

  0x000000011262ed13: add    $0x30,%rsp
  0x000000011262ed17: pop    %rbp
  0x000000011262ed18: test   %eax,-0x33dec1e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262ed1e: retq   
  0x000000011262ed1f: nop
  0x000000011262ed20: nop
  0x000000011262ed21: mov    0x2a8(%r15),%rax
  0x000000011262ed28: movabs $0x0,%r10
  0x000000011262ed32: mov    %r10,0x2a8(%r15)
  0x000000011262ed39: movabs $0x0,%r10
  0x000000011262ed43: mov    %r10,0x2b0(%r15)
  0x000000011262ed4a: add    $0x30,%rsp
  0x000000011262ed4e: pop    %rbp
  0x000000011262ed4f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262ed54: hlt    
  0x000000011262ed55: hlt    
  0x000000011262ed56: hlt    
  0x000000011262ed57: hlt    
  0x000000011262ed58: hlt    
  0x000000011262ed59: hlt    
  0x000000011262ed5a: hlt    
  0x000000011262ed5b: hlt    
  0x000000011262ed5c: hlt    
  0x000000011262ed5d: hlt    
  0x000000011262ed5e: hlt    
  0x000000011262ed5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262ed60: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262ed65: mov    %rsp,-0x28(%rsp)
  0x000000011262ed6a: sub    $0x80,%rsp
  0x000000011262ed71: mov    %rax,0x78(%rsp)
  0x000000011262ed76: mov    %rcx,0x70(%rsp)
  0x000000011262ed7b: mov    %rdx,0x68(%rsp)
  0x000000011262ed80: mov    %rbx,0x60(%rsp)
  0x000000011262ed85: mov    %rbp,0x50(%rsp)
  0x000000011262ed8a: mov    %rsi,0x48(%rsp)
  0x000000011262ed8f: mov    %rdi,0x40(%rsp)
  0x000000011262ed94: mov    %r8,0x38(%rsp)
  0x000000011262ed99: mov    %r9,0x30(%rsp)
  0x000000011262ed9e: mov    %r10,0x28(%rsp)
  0x000000011262eda3: mov    %r11,0x20(%rsp)
  0x000000011262eda8: mov    %r12,0x18(%rsp)
  0x000000011262edad: mov    %r13,0x10(%rsp)
  0x000000011262edb2: mov    %r14,0x8(%rsp)
  0x000000011262edb7: mov    %r15,(%rsp)
  0x000000011262edbb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262edc5: movabs $0x11262ed65,%rsi  ;   {internal_word}
  0x000000011262edcf: mov    %rsp,%rdx
  0x000000011262edd2: and    $0xfffffffffffffff0,%rsp
  0x000000011262edd6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262eddb: hlt    
[Deopt Handler Code]
  0x000000011262eddc: movabs $0x11262eddc,%r10  ;   {section_word}
  0x000000011262ede6: push   %r10
  0x000000011262ede8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262eded: hlt    
  0x000000011262edee: hlt    
  0x000000011262edef: hlt    
<nmethod compile_id='43' compiler='C1' level='1' entry='0x000000011262ece0' size='704' address='0x000000011262eb90' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='286' iicount='286' stamp='0.242'/>
Decoding compiled method 0x000000011262ee90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98b48} &apos;getFile&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262efe0: mov    0x8(%rsi),%r10d
  0x000000011262efe4: shl    $0x3,%r10
  0x000000011262efe8: cmp    %rax,%r10
  0x000000011262efeb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262eff1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262effc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262f000: mov    %eax,-0x14000(%rsp)
  0x000000011262f007: push   %rbp
  0x000000011262f008: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 819)

  0x000000011262f00c: mov    0x1c(%rsi),%eax
  0x000000011262f00f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 819)

  0x000000011262f013: add    $0x30,%rsp
  0x000000011262f017: pop    %rbp
  0x000000011262f018: test   %eax,-0x33def1e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262f01e: retq   
  0x000000011262f01f: nop
  0x000000011262f020: nop
  0x000000011262f021: mov    0x2a8(%r15),%rax
  0x000000011262f028: movabs $0x0,%r10
  0x000000011262f032: mov    %r10,0x2a8(%r15)
  0x000000011262f039: movabs $0x0,%r10
  0x000000011262f043: mov    %r10,0x2b0(%r15)
  0x000000011262f04a: add    $0x30,%rsp
  0x000000011262f04e: pop    %rbp
  0x000000011262f04f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262f054: hlt    
  0x000000011262f055: hlt    
  0x000000011262f056: hlt    
  0x000000011262f057: hlt    
  0x000000011262f058: hlt    
  0x000000011262f059: hlt    
  0x000000011262f05a: hlt    
  0x000000011262f05b: hlt    
  0x000000011262f05c: hlt    
  0x000000011262f05d: hlt    
  0x000000011262f05e: hlt    
  0x000000011262f05f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262f060: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262f065: mov    %rsp,-0x28(%rsp)
  0x000000011262f06a: sub    $0x80,%rsp
  0x000000011262f071: mov    %rax,0x78(%rsp)
  0x000000011262f076: mov    %rcx,0x70(%rsp)
  0x000000011262f07b: mov    %rdx,0x68(%rsp)
  0x000000011262f080: mov    %rbx,0x60(%rsp)
  0x000000011262f085: mov    %rbp,0x50(%rsp)
  0x000000011262f08a: mov    %rsi,0x48(%rsp)
  0x000000011262f08f: mov    %rdi,0x40(%rsp)
  0x000000011262f094: mov    %r8,0x38(%rsp)
  0x000000011262f099: mov    %r9,0x30(%rsp)
  0x000000011262f09e: mov    %r10,0x28(%rsp)
  0x000000011262f0a3: mov    %r11,0x20(%rsp)
  0x000000011262f0a8: mov    %r12,0x18(%rsp)
  0x000000011262f0ad: mov    %r13,0x10(%rsp)
  0x000000011262f0b2: mov    %r14,0x8(%rsp)
  0x000000011262f0b7: mov    %r15,(%rsp)
  0x000000011262f0bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262f0c5: movabs $0x11262f065,%rsi  ;   {internal_word}
  0x000000011262f0cf: mov    %rsp,%rdx
  0x000000011262f0d2: and    $0xfffffffffffffff0,%rsp
  0x000000011262f0d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262f0db: hlt    
[Deopt Handler Code]
  0x000000011262f0dc: movabs $0x11262f0dc,%r10  ;   {section_word}
  0x000000011262f0e6: push   %r10
  0x000000011262f0e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262f0ed: hlt    
  0x000000011262f0ee: hlt    
  0x000000011262f0ef: hlt    
<nmethod compile_id='48' compiler='C1' level='1' entry='0x000000011262efe0' size='704' address='0x000000011262ee90' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='220' iicount='220' stamp='0.243'/>
<writer thread='7171'/>
<task_queued compile_id='55' method='java/lang/Math max (II)I' bytes='11' count='640' iicount='640' level='3' stamp='0.243' comment='tiered' hot_count='640'/>
<task_queued compile_id='56' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.243' comment='tiered' hot_count='128'/>
<task_queued compile_id='57' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.243' comment='tiered' hot_count='128'/>
<task_queued compile_id='58' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.243' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262f190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98850} &apos;getAuthority&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262f2e0: mov    0x8(%rsi),%r10d
  0x000000011262f2e4: shl    $0x3,%r10
  0x000000011262f2e8: cmp    %rax,%r10
  0x000000011262f2eb: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262f2f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262f2fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262f300: mov    %eax,-0x14000(%rsp)
  0x000000011262f307: push   %rbp
  0x000000011262f308: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getAuthority@0 (line 761)

  0x000000011262f30c: mov    0x24(%rsi),%eax
  0x000000011262f30f: shl    $0x3,%rax          ;*getfield authority
                                                ; - java.net.URL::getAuthority@1 (line 761)

  0x000000011262f313: add    $0x30,%rsp
  0x000000011262f317: pop    %rbp
  0x000000011262f318: test   %eax,-0x33df21e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262f31e: retq   
  0x000000011262f31f: nop
  0x000000011262f320: nop
  0x000000011262f321: mov    0x2a8(%r15),%rax
  0x000000011262f328: movabs $0x0,%r10
  0x000000011262f332: mov    %r10,0x2a8(%r15)
  0x000000011262f339: movabs $0x0,%r10
  0x000000011262f343: mov    %r10,0x2b0(%r15)
  0x000000011262f34a: add    $0x30,%rsp
  0x000000011262f34e: pop    %rbp
  0x000000011262f34f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262f354: hlt    
  0x000000011262f355: hlt    
  0x000000011262f356: hlt    
  0x000000011262f357: hlt    
  0x000000011262f358: hlt    
  0x000000011262f359: hlt    
  0x000000011262f35a: hlt    
  0x000000011262f35b: hlt    
  0x000000011262f35c: hlt    
  0x000000011262f35d: hlt    
  0x000000011262f35e: hlt    
  0x000000011262f35f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262f360: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262f365: mov    %rsp,-0x28(%rsp)
  0x000000011262f36a: sub    $0x80,%rsp
  0x000000011262f371: mov    %rax,0x78(%rsp)
  0x000000011262f376: mov    %rcx,0x70(%rsp)
  0x000000011262f37b: mov    %rdx,0x68(%rsp)
  0x000000011262f380: mov    %rbx,0x60(%rsp)
  0x000000011262f385: mov    %rbp,0x50(%rsp)
  0x000000011262f38a: mov    %rsi,0x48(%rsp)
  0x000000011262f38f: mov    %rdi,0x40(%rsp)
  0x000000011262f394: mov    %r8,0x38(%rsp)
  0x000000011262f399: mov    %r9,0x30(%rsp)
  0x000000011262f39e: mov    %r10,0x28(%rsp)
  0x000000011262f3a3: mov    %r11,0x20(%rsp)
  0x000000011262f3a8: mov    %r12,0x18(%rsp)
  0x000000011262f3ad: mov    %r13,0x10(%rsp)
  0x000000011262f3b2: mov    %r14,0x8(%rsp)
  0x000000011262f3b7: mov    %r15,(%rsp)
  0x000000011262f3bb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262f3c5: movabs $0x11262f365,%rsi  ;   {internal_word}
  0x000000011262f3cf: mov    %rsp,%rdx
  0x000000011262f3d2: and    $0xfffffffffffffff0,%rsp
  0x000000011262f3d6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262f3db: hlt    
[Deopt Handler Code]
  0x000000011262f3dc: movabs $0x11262f3dc,%r10  ;   {section_word}
  0x000000011262f3e6: push   %r10
  0x000000011262f3e8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262f3ed: hlt    
  0x000000011262f3ee: hlt    
  0x000000011262f3ef: hlt    
<nmethod compile_id='46' compiler='C1' level='1' entry='0x000000011262f2e0' size='704' address='0x000000011262f190' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='245' iicount='245' stamp='0.244'/>
<writer thread='7171'/>
<task_queued compile_id='59' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.244' comment='tiered' hot_count='128'/>
<task_queued compile_id='60' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.244' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262f490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011262f600: mov    %eax,-0x14000(%rsp)
  0x000000011262f607: push   %rbp
  0x000000011262f608: sub    $0x30,%rsp
  0x000000011262f60c: movabs $0x129f59a50,%rax  ;   {metadata(method data for {method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262f616: mov    0xdc(%rax),%edi
  0x000000011262f61c: add    $0x8,%edi
  0x000000011262f61f: mov    %edi,0xdc(%rax)
  0x000000011262f625: movabs $0x129de2628,%rax  ;   {metadata({method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262f62f: and    $0x1ff8,%edi
  0x000000011262f635: cmp    $0x0,%edi
  0x000000011262f638: je     0x000000011262f69d  ;*iload_0
                                                ; - java.lang.Math::max@0 (line 1252)

  0x000000011262f63e: cmp    %edx,%esi
  0x000000011262f640: movabs $0x129f59a50,%rax  ;   {metadata(method data for {method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262f64a: movabs $0x108,%rdi
  0x000000011262f654: jl     0x000000011262f664
  0x000000011262f65a: movabs $0x118,%rdi
  0x000000011262f664: mov    (%rax,%rdi,1),%rbx
  0x000000011262f668: lea    0x1(%rbx),%rbx
  0x000000011262f66c: mov    %rbx,(%rax,%rdi,1)
  0x000000011262f670: jl     0x000000011262f68b  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)

  0x000000011262f676: movabs $0x129f59a50,%rax  ;   {metadata(method data for {method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011262f680: incl   0x128(%rax)
  0x000000011262f686: jmpq   0x000000011262f68e  ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)

  0x000000011262f68b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::max@10 (line 1252)

  0x000000011262f68e: mov    %rsi,%rax
  0x000000011262f691: add    $0x30,%rsp
  0x000000011262f695: pop    %rbp
  0x000000011262f696: test   %eax,-0x33df59c(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262f69c: retq   
  0x000000011262f69d: mov    %rax,0x8(%rsp)
  0x000000011262f6a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011262f6aa: callq  0x000000011260aea0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ;   {runtime_call}
  0x000000011262f6af: jmp    0x000000011262f63e
  0x000000011262f6b1: nop
  0x000000011262f6b2: nop
  0x000000011262f6b3: mov    0x2a8(%r15),%rax
  0x000000011262f6ba: movabs $0x0,%r10
  0x000000011262f6c4: mov    %r10,0x2a8(%r15)
  0x000000011262f6cb: movabs $0x0,%r10
  0x000000011262f6d5: mov    %r10,0x2b0(%r15)
  0x000000011262f6dc: add    $0x30,%rsp
  0x000000011262f6e0: pop    %rbp
  0x000000011262f6e1: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262f6e6: hlt    
  0x000000011262f6e7: hlt    
  0x000000011262f6e8: hlt    
  0x000000011262f6e9: hlt    
  0x000000011262f6ea: hlt    
  0x000000011262f6eb: hlt    
  0x000000011262f6ec: hlt    
  0x000000011262f6ed: hlt    
  0x000000011262f6ee: hlt    
  0x000000011262f6ef: hlt    
  0x000000011262f6f0: hlt    
  0x000000011262f6f1: hlt    
  0x000000011262f6f2: hlt    
  0x000000011262f6f3: hlt    
  0x000000011262f6f4: hlt    
  0x000000011262f6f5: hlt    
  0x000000011262f6f6: hlt    
  0x000000011262f6f7: hlt    
  0x000000011262f6f8: hlt    
  0x000000011262f6f9: hlt    
  0x000000011262f6fa: hlt    
  0x000000011262f6fb: hlt    
  0x000000011262f6fc: hlt    
  0x000000011262f6fd: hlt    
  0x000000011262f6fe: hlt    
  0x000000011262f6ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262f700: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262f705: mov    %rsp,-0x28(%rsp)
  0x000000011262f70a: sub    $0x80,%rsp
  0x000000011262f711: mov    %rax,0x78(%rsp)
  0x000000011262f716: mov    %rcx,0x70(%rsp)
  0x000000011262f71b: mov    %rdx,0x68(%rsp)
  0x000000011262f720: mov    %rbx,0x60(%rsp)
  0x000000011262f725: mov    %rbp,0x50(%rsp)
  0x000000011262f72a: mov    %rsi,0x48(%rsp)
  0x000000011262f72f: mov    %rdi,0x40(%rsp)
  0x000000011262f734: mov    %r8,0x38(%rsp)
  0x000000011262f739: mov    %r9,0x30(%rsp)
  0x000000011262f73e: mov    %r10,0x28(%rsp)
  0x000000011262f743: mov    %r11,0x20(%rsp)
  0x000000011262f748: mov    %r12,0x18(%rsp)
  0x000000011262f74d: mov    %r13,0x10(%rsp)
  0x000000011262f752: mov    %r14,0x8(%rsp)
  0x000000011262f757: mov    %r15,(%rsp)
  0x000000011262f75b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262f765: movabs $0x11262f705,%rsi  ;   {internal_word}
  0x000000011262f76f: mov    %rsp,%rdx
  0x000000011262f772: and    $0xfffffffffffffff0,%rsp
  0x000000011262f776: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262f77b: hlt    
[Deopt Handler Code]
  0x000000011262f77c: movabs $0x11262f77c,%r10  ;   {section_word}
  0x000000011262f786: push   %r10
  0x000000011262f788: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262f78d: hlt    
  0x000000011262f78e: hlt    
  0x000000011262f78f: hlt    
<nmethod compile_id='55' compiler='C1' level='3' entry='0x000000011262f600' size='936' address='0x000000011262f490' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math max (II)I' bytes='11' count='1996' iicount='1996' stamp='0.245'/>
<writer thread='7171'/>
<task_queued compile_id='61' method='sun/util/calendar/CalendarDate getYear ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.245' comment='tiered' hot_count='128'/>
<task_queued compile_id='62' method='sun/util/calendar/CalendarDate getZone ()Ljava/util/TimeZone;' bytes='5' count='128' iicount='128' level='1' stamp='0.245' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262f850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f44208} &apos;isNormalized&apos; &apos;()Z&apos; in &apos;sun/util/calendar/CalendarDate&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262f9a0: mov    0x8(%rsi),%r10d
  0x000000011262f9a4: shl    $0x3,%r10
  0x000000011262f9a8: cmp    %rax,%r10
  0x000000011262f9ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262f9b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262f9bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262f9c0: mov    %eax,-0x14000(%rsp)
  0x000000011262f9c7: push   %rbp
  0x000000011262f9c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.util.calendar.CalendarDate::isNormalized@0 (line 340)

  0x000000011262f9cc: movsbl 0x3d(%rsi),%eax    ;*getfield normalized
                                                ; - sun.util.calendar.CalendarDate::isNormalized@1 (line 340)

  0x000000011262f9d0: add    $0x30,%rsp
  0x000000011262f9d4: pop    %rbp
  0x000000011262f9d5: test   %eax,-0x33df8db(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262f9db: retq   
  0x000000011262f9dc: nop
  0x000000011262f9dd: nop
  0x000000011262f9de: mov    0x2a8(%r15),%rax
  0x000000011262f9e5: movabs $0x0,%r10
  0x000000011262f9ef: mov    %r10,0x2a8(%r15)
  0x000000011262f9f6: movabs $0x0,%r10
  0x000000011262fa00: mov    %r10,0x2b0(%r15)
  0x000000011262fa07: add    $0x30,%rsp
  0x000000011262fa0b: pop    %rbp
  0x000000011262fa0c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262fa11: hlt    
  0x000000011262fa12: hlt    
  0x000000011262fa13: hlt    
  0x000000011262fa14: hlt    
  0x000000011262fa15: hlt    
  0x000000011262fa16: hlt    
  0x000000011262fa17: hlt    
  0x000000011262fa18: hlt    
  0x000000011262fa19: hlt    
  0x000000011262fa1a: hlt    
  0x000000011262fa1b: hlt    
  0x000000011262fa1c: hlt    
  0x000000011262fa1d: hlt    
  0x000000011262fa1e: hlt    
  0x000000011262fa1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262fa20: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262fa25: mov    %rsp,-0x28(%rsp)
  0x000000011262fa2a: sub    $0x80,%rsp
  0x000000011262fa31: mov    %rax,0x78(%rsp)
  0x000000011262fa36: mov    %rcx,0x70(%rsp)
  0x000000011262fa3b: mov    %rdx,0x68(%rsp)
  0x000000011262fa40: mov    %rbx,0x60(%rsp)
  0x000000011262fa45: mov    %rbp,0x50(%rsp)
  0x000000011262fa4a: mov    %rsi,0x48(%rsp)
  0x000000011262fa4f: mov    %rdi,0x40(%rsp)
  0x000000011262fa54: mov    %r8,0x38(%rsp)
  0x000000011262fa59: mov    %r9,0x30(%rsp)
  0x000000011262fa5e: mov    %r10,0x28(%rsp)
  0x000000011262fa63: mov    %r11,0x20(%rsp)
  0x000000011262fa68: mov    %r12,0x18(%rsp)
  0x000000011262fa6d: mov    %r13,0x10(%rsp)
  0x000000011262fa72: mov    %r14,0x8(%rsp)
  0x000000011262fa77: mov    %r15,(%rsp)
  0x000000011262fa7b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262fa85: movabs $0x11262fa25,%rsi  ;   {internal_word}
  0x000000011262fa8f: mov    %rsp,%rdx
  0x000000011262fa92: and    $0xfffffffffffffff0,%rsp
  0x000000011262fa96: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262fa9b: hlt    
[Deopt Handler Code]
  0x000000011262fa9c: movabs $0x11262fa9c,%r10  ;   {section_word}
  0x000000011262faa6: push   %r10
  0x000000011262faa8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262faad: hlt    
  0x000000011262faae: hlt    
  0x000000011262faaf: hlt    
<nmethod compile_id='51' compiler='C1' level='1' entry='0x000000011262f9a0' size='704' address='0x000000011262f850' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/util/calendar/CalendarDate isNormalized ()Z' bytes='5' count='198' iicount='198' stamp='0.246'/>
Decoding compiled method 0x000000011262fb50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98720} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262fca0: mov    0x8(%rsi),%r10d
  0x000000011262fca4: shl    $0x3,%r10
  0x000000011262fca8: cmp    %rax,%r10
  0x000000011262fcab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262fcb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262fcbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262fcc0: mov    %eax,-0x14000(%rsp)
  0x000000011262fcc7: push   %rbp
  0x000000011262fcc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getPath@0 (line 740)

  0x000000011262fccc: mov    0x28(%rsi),%eax
  0x000000011262fccf: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.URL::getPath@1 (line 740)

  0x000000011262fcd3: add    $0x30,%rsp
  0x000000011262fcd7: pop    %rbp
  0x000000011262fcd8: test   %eax,-0x33dfbde(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262fcde: retq   
  0x000000011262fcdf: nop
  0x000000011262fce0: nop
  0x000000011262fce1: mov    0x2a8(%r15),%rax
  0x000000011262fce8: movabs $0x0,%r10
  0x000000011262fcf2: mov    %r10,0x2a8(%r15)
  0x000000011262fcf9: movabs $0x0,%r10
  0x000000011262fd03: mov    %r10,0x2b0(%r15)
  0x000000011262fd0a: add    $0x30,%rsp
  0x000000011262fd0e: pop    %rbp
  0x000000011262fd0f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011262fd14: hlt    
  0x000000011262fd15: hlt    
  0x000000011262fd16: hlt    
  0x000000011262fd17: hlt    
  0x000000011262fd18: hlt    
  0x000000011262fd19: hlt    
  0x000000011262fd1a: hlt    
  0x000000011262fd1b: hlt    
  0x000000011262fd1c: hlt    
  0x000000011262fd1d: hlt    
  0x000000011262fd1e: hlt    
  0x000000011262fd1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011262fd20: callq  0x000000011260bf60  ;   {no_reloc}
  0x000000011262fd25: mov    %rsp,-0x28(%rsp)
  0x000000011262fd2a: sub    $0x80,%rsp
  0x000000011262fd31: mov    %rax,0x78(%rsp)
  0x000000011262fd36: mov    %rcx,0x70(%rsp)
  0x000000011262fd3b: mov    %rdx,0x68(%rsp)
  0x000000011262fd40: mov    %rbx,0x60(%rsp)
  0x000000011262fd45: mov    %rbp,0x50(%rsp)
  0x000000011262fd4a: mov    %rsi,0x48(%rsp)
  0x000000011262fd4f: mov    %rdi,0x40(%rsp)
  0x000000011262fd54: mov    %r8,0x38(%rsp)
  0x000000011262fd59: mov    %r9,0x30(%rsp)
  0x000000011262fd5e: mov    %r10,0x28(%rsp)
  0x000000011262fd63: mov    %r11,0x20(%rsp)
  0x000000011262fd68: mov    %r12,0x18(%rsp)
  0x000000011262fd6d: mov    %r13,0x10(%rsp)
  0x000000011262fd72: mov    %r14,0x8(%rsp)
  0x000000011262fd77: mov    %r15,(%rsp)
  0x000000011262fd7b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x000000011262fd85: movabs $0x11262fd25,%rsi  ;   {internal_word}
  0x000000011262fd8f: mov    %rsp,%rdx
  0x000000011262fd92: and    $0xfffffffffffffff0,%rsp
  0x000000011262fd96: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011262fd9b: hlt    
[Deopt Handler Code]
  0x000000011262fd9c: movabs $0x11262fd9c,%r10  ;   {section_word}
  0x000000011262fda6: push   %r10
  0x000000011262fda8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011262fdad: hlt    
  0x000000011262fdae: hlt    
  0x000000011262fdaf: hlt    
<nmethod compile_id='47' compiler='C1' level='1' entry='0x000000011262fca0' size='704' address='0x000000011262fb50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='259' iicount='259' stamp='0.248'/>
<writer thread='7171'/>
<task_queued compile_id='63' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.248' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x000000011262fe50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e786e8} &apos;requestedCharsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011262ffa0: mov    0x8(%rsi),%r10d
  0x000000011262ffa4: shl    $0x3,%r10
  0x000000011262ffa8: cmp    %rax,%r10
  0x000000011262ffab: jne    0x0000000112552e20  ;   {runtime_call}
  0x000000011262ffb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011262ffbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011262ffc0: mov    %eax,-0x14000(%rsp)
  0x000000011262ffc7: push   %rbp
  0x000000011262ffc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x000000011262ffcc: mov    0x18(%rsi),%eax
  0x000000011262ffcf: shl    $0x3,%rax          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x000000011262ffd3: add    $0x30,%rsp
  0x000000011262ffd7: pop    %rbp
  0x000000011262ffd8: test   %eax,-0x33dfede(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011262ffde: retq   
  0x000000011262ffdf: nop
  0x000000011262ffe0: nop
  0x000000011262ffe1: mov    0x2a8(%r15),%rax
  0x000000011262ffe8: movabs $0x0,%r10
  0x000000011262fff2: mov    %r10,0x2a8(%r15)
  0x000000011262fff9: movabs $0x0,%r10
  0x0000000112630003: mov    %r10,0x2b0(%r15)
  0x000000011263000a: add    $0x30,%rsp
  0x000000011263000e: pop    %rbp
  0x000000011263000f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112630014: hlt    
  0x0000000112630015: hlt    
  0x0000000112630016: hlt    
  0x0000000112630017: hlt    
  0x0000000112630018: hlt    
  0x0000000112630019: hlt    
  0x000000011263001a: hlt    
  0x000000011263001b: hlt    
  0x000000011263001c: hlt    
  0x000000011263001d: hlt    
  0x000000011263001e: hlt    
  0x000000011263001f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112630020: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112630025: mov    %rsp,-0x28(%rsp)
  0x000000011263002a: sub    $0x80,%rsp
  0x0000000112630031: mov    %rax,0x78(%rsp)
  0x0000000112630036: mov    %rcx,0x70(%rsp)
  0x000000011263003b: mov    %rdx,0x68(%rsp)
  0x0000000112630040: mov    %rbx,0x60(%rsp)
  0x0000000112630045: mov    %rbp,0x50(%rsp)
  0x000000011263004a: mov    %rsi,0x48(%rsp)
  0x000000011263004f: mov    %rdi,0x40(%rsp)
  0x0000000112630054: mov    %r8,0x38(%rsp)
  0x0000000112630059: mov    %r9,0x30(%rsp)
  0x000000011263005e: mov    %r10,0x28(%rsp)
  0x0000000112630063: mov    %r11,0x20(%rsp)
  0x0000000112630068: mov    %r12,0x18(%rsp)
  0x000000011263006d: mov    %r13,0x10(%rsp)
  0x0000000112630072: mov    %r14,0x8(%rsp)
  0x0000000112630077: mov    %r15,(%rsp)
  0x000000011263007b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112630085: movabs $0x112630025,%rsi  ;   {internal_word}
  0x000000011263008f: mov    %rsp,%rdx
  0x0000000112630092: and    $0xfffffffffffffff0,%rsp
  0x0000000112630096: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263009b: hlt    
[Deopt Handler Code]
  0x000000011263009c: movabs $0x11263009c,%r10  ;   {section_word}
  0x00000001126300a6: push   %r10
  0x00000001126300a8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126300ad: hlt    
  0x00000001126300ae: hlt    
  0x00000001126300af: hlt    
<nmethod compile_id='54' compiler='C1' level='1' entry='0x000000011262ffa0' size='704' address='0x000000011262fe50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='297' iicount='297' stamp='0.249'/>
Decoding compiled method 0x0000000112630150:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129dcf450} &apos;size&apos; &apos;()I&apos; in &apos;java/util/Vector&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000001126302a0: mov    0x8(%rsi),%r10d
  0x00000001126302a4: shl    $0x3,%r10
  0x00000001126302a8: cmp    %rax,%r10
  0x00000001126302ab: jne    0x0000000112552e20  ;   {runtime_call}
  0x00000001126302b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001126302bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001126302c0: mov    %eax,-0x14000(%rsp)
  0x00000001126302c7: push   %rbp
  0x00000001126302c8: sub    $0x40,%rsp
  0x00000001126302cc: lea    0x20(%rsp),%rdi
  0x00000001126302d1: mov    %rsi,0x8(%rdi)
  0x00000001126302d5: mov    (%rsi),%rax
  0x00000001126302d8: mov    %rax,%rbx
  0x00000001126302db: and    $0x7,%rbx
  0x00000001126302df: cmp    $0x5,%rbx
  0x00000001126302e3: jne    0x000000011263036a
  0x00000001126302e9: mov    0x8(%rsi),%ebx
  0x00000001126302ec: shl    $0x3,%rbx
  0x00000001126302f0: mov    0xa8(%rbx),%rbx
  0x00000001126302f7: or     %r15,%rbx
  0x00000001126302fa: xor    %rax,%rbx
  0x00000001126302fd: and    $0xffffffffffffff87,%rbx
  0x0000000112630301: je     0x0000000112630392
  0x0000000112630307: test   $0x7,%rbx
  0x000000011263030e: jne    0x0000000112630357
  0x0000000112630310: test   $0x300,%rbx
  0x0000000112630317: jne    0x0000000112630336
  0x0000000112630319: and    $0x37f,%rax
  0x0000000112630320: mov    %rax,%rbx
  0x0000000112630323: or     %r15,%rbx
  0x0000000112630326: lock cmpxchg %rbx,(%rsi)
  0x000000011263032b: jne    0x00000001126303d5
  0x0000000112630331: jmpq   0x0000000112630392
  0x0000000112630336: mov    0x8(%rsi),%ebx
  0x0000000112630339: shl    $0x3,%rbx
  0x000000011263033d: mov    0xa8(%rbx),%rbx
  0x0000000112630344: or     %r15,%rbx
  0x0000000112630347: lock cmpxchg %rbx,(%rsi)
  0x000000011263034c: jne    0x00000001126303d5
  0x0000000112630352: jmpq   0x0000000112630392
  0x0000000112630357: mov    0x8(%rsi),%ebx
  0x000000011263035a: shl    $0x3,%rbx
  0x000000011263035e: mov    0xa8(%rbx),%rbx
  0x0000000112630365: lock cmpxchg %rbx,(%rsi)
  0x000000011263036a: mov    (%rsi),%rax
  0x000000011263036d: or     $0x1,%rax
  0x0000000112630371: mov    %rax,(%rdi)
  0x0000000112630374: lock cmpxchg %rdi,(%rsi)
  0x0000000112630379: je     0x0000000112630392
  0x000000011263037f: sub    %rsp,%rax
  0x0000000112630382: and    $0xfffffffffffff007,%rax
  0x0000000112630389: mov    %rax,(%rdi)
  0x000000011263038c: jne    0x00000001126303d5  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 315)

  0x0000000112630392: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)

  0x0000000112630395: lea    0x20(%rsp),%rax
  0x000000011263039a: mov    0x8(%rax),%rbx
  0x000000011263039e: mov    (%rbx),%rdi
  0x00000001126303a1: and    $0x7,%rdi
  0x00000001126303a5: cmp    $0x5,%rdi
  0x00000001126303a9: je     0x00000001126303c6
  0x00000001126303af: mov    (%rax),%rdi
  0x00000001126303b2: test   %rdi,%rdi
  0x00000001126303b5: je     0x00000001126303c6
  0x00000001126303bb: lock cmpxchg %rdi,(%rbx)
  0x00000001126303c0: jne    0x00000001126303e5  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 315)

  0x00000001126303c6: mov    %rsi,%rax
  0x00000001126303c9: add    $0x40,%rsp
  0x00000001126303cd: pop    %rbp
  0x00000001126303ce: test   %eax,-0x33e02d4(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126303d4: retq   
  0x00000001126303d5: mov    %rsi,0x8(%rsp)
  0x00000001126303da: mov    %rdi,(%rsp)
  0x00000001126303de: callq  0x0000000112609120  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x00000001126303e3: jmp    0x0000000112630392
  0x00000001126303e5: lea    0x20(%rsp),%rax
  0x00000001126303ea: mov    %rax,(%rsp)
  0x00000001126303ee: callq  0x0000000112608d60  ;   {runtime_call}
  0x00000001126303f3: jmp    0x00000001126303c6
  0x00000001126303f5: nop
  0x00000001126303f6: nop
  0x00000001126303f7: mov    0x2a8(%r15),%rax
  0x00000001126303fe: movabs $0x0,%r10
  0x0000000112630408: mov    %r10,0x2a8(%r15)
  0x000000011263040f: movabs $0x0,%r10
  0x0000000112630419: mov    %r10,0x2b0(%r15)
  0x0000000112630420: mov    %rax,%rbx
  0x0000000112630423: lea    0x20(%rsp),%rax
  0x0000000112630428: mov    0x8(%rax),%rsi
  0x000000011263042c: mov    (%rsi),%rdi
  0x000000011263042f: and    $0x7,%rdi
  0x0000000112630433: cmp    $0x5,%rdi
  0x0000000112630437: je     0x0000000112630454
  0x000000011263043d: mov    (%rax),%rdi
  0x0000000112630440: test   %rdi,%rdi
  0x0000000112630443: je     0x0000000112630454
  0x0000000112630449: lock cmpxchg %rdi,(%rsi)
  0x000000011263044e: jne    0x0000000112630461
  0x0000000112630454: mov    %rbx,%rax
  0x0000000112630457: add    $0x40,%rsp
  0x000000011263045b: pop    %rbp
  0x000000011263045c: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112630461: lea    0x20(%rsp),%rax
  0x0000000112630466: mov    %rax,(%rsp)
  0x000000011263046a: callq  0x0000000112608d60  ;   {runtime_call}
  0x000000011263046f: jmp    0x0000000112630454
  0x0000000112630471: hlt    
  0x0000000112630472: hlt    
  0x0000000112630473: hlt    
  0x0000000112630474: hlt    
  0x0000000112630475: hlt    
  0x0000000112630476: hlt    
  0x0000000112630477: hlt    
  0x0000000112630478: hlt    
  0x0000000112630479: hlt    
  0x000000011263047a: hlt    
  0x000000011263047b: hlt    
  0x000000011263047c: hlt    
  0x000000011263047d: hlt    
  0x000000011263047e: hlt    
  0x000000011263047f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112630480: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112630485: mov    %rsp,-0x28(%rsp)
  0x000000011263048a: sub    $0x80,%rsp
  0x0000000112630491: mov    %rax,0x78(%rsp)
  0x0000000112630496: mov    %rcx,0x70(%rsp)
  0x000000011263049b: mov    %rdx,0x68(%rsp)
  0x00000001126304a0: mov    %rbx,0x60(%rsp)
  0x00000001126304a5: mov    %rbp,0x50(%rsp)
  0x00000001126304aa: mov    %rsi,0x48(%rsp)
  0x00000001126304af: mov    %rdi,0x40(%rsp)
  0x00000001126304b4: mov    %r8,0x38(%rsp)
  0x00000001126304b9: mov    %r9,0x30(%rsp)
  0x00000001126304be: mov    %r10,0x28(%rsp)
  0x00000001126304c3: mov    %r11,0x20(%rsp)
  0x00000001126304c8: mov    %r12,0x18(%rsp)
  0x00000001126304cd: mov    %r13,0x10(%rsp)
  0x00000001126304d2: mov    %r14,0x8(%rsp)
  0x00000001126304d7: mov    %r15,(%rsp)
  0x00000001126304db: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x00000001126304e5: movabs $0x112630485,%rsi  ;   {internal_word}
  0x00000001126304ef: mov    %rsp,%rdx
  0x00000001126304f2: and    $0xfffffffffffffff0,%rsp
  0x00000001126304f6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126304fb: hlt    
[Deopt Handler Code]
  0x00000001126304fc: movabs $0x1126304fc,%r10  ;   {section_word}
  0x0000000112630506: push   %r10
  0x0000000112630508: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263050d: hlt    
  0x000000011263050e: hlt    
  0x000000011263050f: hlt    
<nmethod compile_id='45' compiler='C1' level='1' entry='0x00000001126302a0' size='1112' address='0x0000000112630150' relocation_offset='296' insts_offset='336' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1008' dependencies_offset='1104' method='java/util/Vector size ()I' bytes='5' count='240' iicount='240' stamp='0.251'/>
<writer thread='7171'/>
<task_queued compile_id='64' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='128' iicount='128' level='1' stamp='0.251' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126305d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129df6768} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112630720: mov    0x8(%rsi),%r10d
  0x0000000112630724: shl    $0x3,%r10
  0x0000000112630728: cmp    %rax,%r10
  0x000000011263072b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112630731: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263073c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112630740: mov    %eax,-0x14000(%rsp)
  0x0000000112630747: push   %rbp
  0x0000000112630748: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x000000011263074c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x000000011263074f: add    $0x30,%rsp
  0x0000000112630753: pop    %rbp
  0x0000000112630754: test   %eax,-0x33e065a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263075a: retq   
  0x000000011263075b: nop
  0x000000011263075c: nop
  0x000000011263075d: mov    0x2a8(%r15),%rax
  0x0000000112630764: movabs $0x0,%r10
  0x000000011263076e: mov    %r10,0x2a8(%r15)
  0x0000000112630775: movabs $0x0,%r10
  0x000000011263077f: mov    %r10,0x2b0(%r15)
  0x0000000112630786: add    $0x30,%rsp
  0x000000011263078a: pop    %rbp
  0x000000011263078b: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112630790: hlt    
  0x0000000112630791: hlt    
  0x0000000112630792: hlt    
  0x0000000112630793: hlt    
  0x0000000112630794: hlt    
  0x0000000112630795: hlt    
  0x0000000112630796: hlt    
  0x0000000112630797: hlt    
  0x0000000112630798: hlt    
  0x0000000112630799: hlt    
  0x000000011263079a: hlt    
  0x000000011263079b: hlt    
  0x000000011263079c: hlt    
  0x000000011263079d: hlt    
  0x000000011263079e: hlt    
  0x000000011263079f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126307a0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126307a5: mov    %rsp,-0x28(%rsp)
  0x00000001126307aa: sub    $0x80,%rsp
  0x00000001126307b1: mov    %rax,0x78(%rsp)
  0x00000001126307b6: mov    %rcx,0x70(%rsp)
  0x00000001126307bb: mov    %rdx,0x68(%rsp)
  0x00000001126307c0: mov    %rbx,0x60(%rsp)
  0x00000001126307c5: mov    %rbp,0x50(%rsp)
  0x00000001126307ca: mov    %rsi,0x48(%rsp)
  0x00000001126307cf: mov    %rdi,0x40(%rsp)
  0x00000001126307d4: mov    %r8,0x38(%rsp)
  0x00000001126307d9: mov    %r9,0x30(%rsp)
  0x00000001126307de: mov    %r10,0x28(%rsp)
  0x00000001126307e3: mov    %r11,0x20(%rsp)
  0x00000001126307e8: mov    %r12,0x18(%rsp)
  0x00000001126307ed: mov    %r13,0x10(%rsp)
  0x00000001126307f2: mov    %r14,0x8(%rsp)
  0x00000001126307f7: mov    %r15,(%rsp)
  0x00000001126307fb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112630805: movabs $0x1126307a5,%rsi  ;   {internal_word}
  0x000000011263080f: mov    %rsp,%rdx
  0x0000000112630812: and    $0xfffffffffffffff0,%rsp
  0x0000000112630816: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263081b: hlt    
[Deopt Handler Code]
  0x000000011263081c: movabs $0x11263081c,%r10  ;   {section_word}
  0x0000000112630826: push   %r10
  0x0000000112630828: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263082d: hlt    
  0x000000011263082e: hlt    
  0x000000011263082f: hlt    
<nmethod compile_id='52' compiler='C1' level='1' entry='0x0000000112630720' size='704' address='0x00000001126305d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='200' iicount='200' stamp='0.252'/>
<writer thread='7171'/>
<task_queued compile_id='65' method='java/lang/Math max (II)I' bytes='11' count='5632' iicount='5632' stamp='0.252' comment='tiered' hot_count='5632'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126308d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129da0e50} &apos;position&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112630a20: mov    0x8(%rsi),%r10d
  0x0000000112630a24: shl    $0x3,%r10
  0x0000000112630a28: cmp    %rax,%r10
  0x0000000112630a2b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112630a31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112630a3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112630a40: mov    %eax,-0x14000(%rsp)
  0x0000000112630a47: push   %rbp
  0x0000000112630a48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x0000000112630a4c: mov    0x18(%rsi),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x0000000112630a4f: add    $0x30,%rsp
  0x0000000112630a53: pop    %rbp
  0x0000000112630a54: test   %eax,-0x33e095a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112630a5a: retq   
  0x0000000112630a5b: nop
  0x0000000112630a5c: nop
  0x0000000112630a5d: mov    0x2a8(%r15),%rax
  0x0000000112630a64: movabs $0x0,%r10
  0x0000000112630a6e: mov    %r10,0x2a8(%r15)
  0x0000000112630a75: movabs $0x0,%r10
  0x0000000112630a7f: mov    %r10,0x2b0(%r15)
  0x0000000112630a86: add    $0x30,%rsp
  0x0000000112630a8a: pop    %rbp
  0x0000000112630a8b: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112630a90: hlt    
  0x0000000112630a91: hlt    
  0x0000000112630a92: hlt    
  0x0000000112630a93: hlt    
  0x0000000112630a94: hlt    
  0x0000000112630a95: hlt    
  0x0000000112630a96: hlt    
  0x0000000112630a97: hlt    
  0x0000000112630a98: hlt    
  0x0000000112630a99: hlt    
  0x0000000112630a9a: hlt    
  0x0000000112630a9b: hlt    
  0x0000000112630a9c: hlt    
  0x0000000112630a9d: hlt    
  0x0000000112630a9e: hlt    
  0x0000000112630a9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112630aa0: callq  0x000000011260bf60  ;   {no_reloc}
<writer thread='7171'/>
[Loaded sun.nio.cs.ThreadLocalCoders from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>

  0x0000000112630aa5: mov    %rsp,-0x28(%rsp)
  0x0000000112630aaa: sub    $0x80,%rsp
  0x0000000112630ab1: mov    %rax,0x78(%rsp)
  0x0000000112630ab6: mov    %rcx,0x70(%rsp)
  0x0000000112630abb: mov    %rdx,0x68(%rsp)
  0x0000000112630ac0: mov    %rbx,0x60(%rsp)
  0x0000000112630ac5: mov    %rbp,0x50(%rsp)
  0x0000000112630aca: mov    %rsi,0x48(%rsp)
  0x0000000112630acf: mov    %rdi,0x40(%rsp)
  0x0000000112630ad4: mov    %r8,0x38(%rsp)
  0x0000000112630ad9: mov    %r9,0x30(%rsp)
  0x0000000112630ade: mov    %r10,0x28(%rsp)
  0x0000000112630ae3: mov    %r11,0x20(%rsp)
  0x0000000112630ae8: mov    %r12,0x18(%rsp)
  0x0000000112630aed: mov    %r13,0x10(%rsp)
  0x0000000112630af2: mov    %r14,0x8(%rsp)
  0x0000000112630af7: mov    %r15,(%rsp)
  0x0000000112630afb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112630b05: movabs $0x112630aa5,%rsi  ;   {internal_word}
  0x0000000112630b0f: mov    %rsp,%rdx
  0x0000000112630b12: and    $0xfffffffffffffff0,%rsp
  0x0000000112630b16: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112630b1b: hlt    
[Deopt Handler Code]
  0x0000000112630b1c: movabs $0x112630b1c,%r10  ;   {section_word}
  0x0000000112630b26: push   %r10
  0x0000000112630b28: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112630b2d: hlt    
  0x0000000112630b2e: hlt    
  0x0000000112630b2f: hlt    
<nmethod compile_id='37' compiler='C1' level='1' entry='0x0000000112630a20' size='704' address='0x00000001126308d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/nio/Buffer position ()I' bytes='5' count='196' iicount='196' stamp='0.253'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000112633810:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129de2628} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000112633940: sub    $0x18,%rsp
  0x0000000112633947: 
<writer thread='7171'/>
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
mov    %rbp,0x10(%rsp)                          ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)

  0x000000011263394c: cmp    %edx,%esi
  0x000000011263394e: jl     0x000000011263395e  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)

  0x0000000112633950: mov    %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::max@10 (line 1252)

  0x0000000112633952: add    $0x10,%rsp
  0x0000000112633956: pop    %rbp
  0x0000000112633957: test   %eax,-0x33e395d(%rip)        # 0x000000010f250000
                                                ;   {poll_return}
  0x000000011263395d: retq   
  0x000000011263395e: mov    %edx,%eax
  0x0000000112633960: jmp    0x0000000112633952
  0x0000000112633962: hlt    
  0x0000000112633963: hlt    
  0x0000000112633964: hlt    
  0x0000000112633965: hlt    
  0x0000000112633966: hlt    
  0x0000000112633967: hlt    
  0x0000000112633968: hlt    
  0x0000000112633969: hlt    
  0x000000011263396a: hlt    
  0x000000011263396b: hlt    
  0x000000011263396c: hlt    
  0x000000011263396d: hlt    
  0x000000011263396e: hlt    
  0x000000011263396f: hlt    
  0x0000000112633970: hlt    
  0x0000000112633971: hlt    
  0x0000000112633972: hlt    
  0x0000000112633973: hlt    
  0x0000000112633974: hlt    
  0x0000000112633975: hlt    
  0x0000000112633976: hlt    
  0x0000000112633977: hlt    
  0x0000000112633978: hlt    
  0x0000000112633979: hlt    
  0x000000011263397a: hlt    
  0x000000011263397b: hlt    
  0x000000011263397c: hlt    
  0x000000011263397d: hlt    
  0x000000011263397e: hlt    
  0x000000011263397f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112633980: jmpq   0x00000001125793a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000112633985: callq  0x000000011263398a
  0x000000011263398a: subq   $0x5,(%rsp)
  0x000000011263398f: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112633994: hlt    
  0x0000000112633995: hlt    
  0x0000000112633996: hlt    
  0x0000000112633997: hlt    
<nmethod compile_id='65' compiler='C2' level='4' entry='0x0000000112633940' size='512' address='0x0000000112633810' relocation_offset='296' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='424' dependencies_offset='504' method='java/lang/Math max (II)I' bytes='11' count='6478' iicount='6478' stamp='0.254'/>
<make_not_entrant thread='19715' compile_id='55' compiler='C1' level='3' stamp='0.254'/>
<writer thread='7171'/>
[Loaded sun.nio.cs.ThreadLocalCoders$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112633510:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f42ee8} &apos;getYear&apos; &apos;()I&apos; in &apos;sun/u
<writer thread='7171'/>
[Loaded sun.nio.cs.ThreadLocalCoders$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
til/calendar/CalendarDate&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112633660: mov    0x8(%rsi),%r10d
  0x0000000112633664: shl    $0x3,%r10
  0x0000000112633668: cmp    %rax,%r10
  0x000000011263366b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112633671: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263367c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112633680: mov    %eax,-0x14000(%rsp)
  0x0000000112633687: push   %rbp
  0x0000000112633688: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.util.calendar.CalendarDate::getYear@0 (line 123)

  0x000000011263368c: mov    0xc(%rsi),%eax     ;*getfield year
                                                ; - sun.util.calendar.CalendarDate::getYear@1 (line 123)

  0x000000011263368f: add    $0x30,%rsp
  0x0000000112633693: pop    %rbp
  0x0000000112633694: test   %eax,-0x33e359a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263369a: retq   
  0x000000011263369b: nop
  0x000000011263369c: nop
  0x000000011263369d: mov    0x2a8(%r15),%rax
  0x00000001126336a4: movabs $0x0,%r10
  0x00000001126336ae: mov    %r10,0x2a8(%r15)
  0x00000001126336b5: movabs $0x0,%r10
  0x00000001126336bf: mov    %r10,0x2b0(%r15)
  0x00000001126336c6: add    $0x30,%rsp
  0x00000001126336ca: pop    %rbp
  0x00000001126336cb: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126336d0: hlt    
  0x00000001126336d1: hlt    
  0x00000001126336d2: hlt    
  0x00000001126336d3: hlt    
  0x00000001126336d4: hlt    
  0x00000001126336d5: hlt    
  0x00000001126336d6: hlt    
  0x00000001126336d7: hlt    
  0x00000001126336d8: hlt    
  0x00000001126336d9: hlt    
  0x00000001126336da: hlt    
  0x00000001126336db: hlt    
  0x00000001126336dc: hlt    
  0x00000001126336dd: hlt    
  0x00000001126336de: hlt    
  0x00000001126336df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126336e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126336e5: mov    %rsp,-0x28(%rsp)
  0x00000001126336ea: sub    $0x80,%rsp
  0x00000001126336f1: mov    %rax,0x78(%rsp)
  0x00000001126336f6: mov    %rcx,0x70(%rsp)
  0x00000001126336fb: mov    %rdx,0x68(%rsp)
  0x0000000112633700: mov    %rbx,0x60(%rsp)
  0x0000000112633705: mov    %rbp,0x50(%rsp)
  0x000000011263370a: mov    %rsi,0x48(%rsp)
  0x000000011263370f: mov    %rdi,0x40(%rsp)
  0x0000000112633714: mov    %r8,0x38(%rsp)
  0x0000000112633719: mov    %r9,0x30(%rsp)
  0x000000011263371e: mov    %r10,0x28(%rsp)
  0x0000000112633723: mov    %r11,0x20(%rsp)
  0x0000000112633728: mov    %r12,0x18(%rsp)
  0x000000011263372d: mov    %r13,0x10(%rsp)
  0x0000000112633732: mov    %r14,0x8(%rsp)
  0x0000000112633737: mov    %r15,(%rsp)
  0x000000011263373b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112633745: movabs $0x1126336e5,%rsi  ;   {internal_word}
  0x000000011263374f: mov    %rsp,%rdx
  0x0000000112633752: and    $0xfffffffffffffff0,%rsp
  0x0000000112633756: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263375b: hlt    
[Deopt Handler Code]
  0x000000011263375c: movabs $0x11263375c,%r10  ;   {section_word}
  0x0000000112633766: push   %r10
  0x0000000112633768: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263376d: hlt    
  0x000000011263376e: hlt    
  0x000000011263376f: hlt    
<nmethod compile_id='61' compiler='C1' level='1' entry='0x0000000112633660' size='704' address='0x0000000112633510' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/util/calendar/CalendarDate getYear ()I' bytes='5' count='164' iicount='164' stamp='0.255'/>
Decoding compiled method 0x0000000112633210:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f44510} &apos;getZone&apos; &apos;()Ljava/util/TimeZone;&apos; in &apos;sun/util/calendar/CalendarDate&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112633360: mov    0x8(%rsi),%r10d
  0x0000000112633364: shl    $0x3,%r10
  0x0000000112633368: cmp    %rax,%r10
  0x000000011263336b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112633371: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263337c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112633380: mov    %eax,-0x14000(%rsp)
  0x0000000112633387: push   %rbp
  0x0000000112633388: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.util.calendar.CalendarDate::getZone@0 (line 364)

  0x000000011263338c: mov    0x44(%rsi),%eax
  0x000000011263338f: shl    $0x3,%rax          ;*getfield zoneinfo
                                                ; - sun.util.calendar.CalendarDate::getZone@1 (line 364)

  0x0000000112633393: add    $0x30,%rsp
  0x0000000112633397: pop    %rbp
  0x0000000112633398: test   %eax,-0x33e329e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263339e: retq   
  0x000000011263339f: nop
  0x00000001126333a0: nop
  0x00000001126333a1: mov    0x2a8(%r15),%rax
  0x00000001126333a8: movabs $0x0,%r10
  0x00000001126333b2: mov    %r10,0x2a8(%r15)
  0x00000001126333b9: movabs $0x0,%r10
  0x00000001126333c3: mov    %r10,0x2b0(%r15)
  0x00000001126333ca: add    $0x30,%rsp
  0x00000001126333ce: pop    %rbp
  0x00000001126333cf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126333d4: hlt    
  0x00000001126333d5: hlt    
  0x00000001126333d6: hlt    
  0x00000001126333d7: hlt    
  0x00000001126333d8: hlt    
  0x00000001126333d9: hlt    
  0x00000001126333da: hlt    
  0x00000001126333db: hlt    
  0x00000001126333dc: hlt    
  0x00000001126333dd: hlt    
  0x00000001126333de: hlt    
  0x00000001126333df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126333e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126333e5: mov    %rsp,-0x28(%rsp)
  0x00000001126333ea: sub    $0x80,%rsp
  0x00000001126333f1: mov    %rax,0x78(%rsp)
  0x00000001126333f6: mov    %rcx,0x70(%rsp)
  0x00000001126333fb: mov    %rdx,0x68(%rsp)
  0x0000000112633400: mov    %rbx,0x60(%rsp)
  0x0000000112633405: mov    %rbp,0x50(%rsp)
  0x000000011263340a: mov    %rsi,0x48(%rsp)
  0x000000011263340f: mov    %rdi,0x40(%rsp)
  0x0000000112633414: mov    %r8,0x38(%rsp)
  0x0000000112633419: mov    %r9,0x30(%rsp)
  0x000000011263341e: mov    %r10,0x28(%rsp)
  0x0000000112633423: mov    %r11,0x20(%rsp)
  0x0000000112633428: mov    %r12,0x18(%rsp)
  0x000000011263342d: mov    %r13,0x10(%rsp)
  0x0000000112633432: mov    %r14,0x8(%rsp)
  0x0000000112633437: mov    %r15,(%rsp)
  0x000000011263343b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112633445: movabs $0x1126333e5,%rsi  ;   {internal_word}
  0x000000011263344f: mov    %rsp,%rdx
  0x0000000112633452: and    $0xfffffffffffffff0,%rsp
  0x0000000112633456: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263345b: hlt    
[Deopt Handler Code]
  0x000000011263345c: movabs $0x11263345c,%r10  ;   {section_word}
  0x0000000112633466: push   %r10
  0x0000000112633468: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263346d: hlt    
  0x000000011263346e: hlt    
  0x000000011263346f: hlt    
<nmethod compile_id='62' compiler='C1' level='1' entry='0x0000000112633360' size='704' address='0x0000000112633210' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/util/calendar/CalendarDate getZone ()Ljava/util/TimeZone;' bytes='5' count='169' iicount='169' stamp='0.255'/>
<writer thread='7171'/>
<task_queued compile_id='66' method='sun/util/calendar/CalendarDate getMonth ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.255' comment='tiered' hot_count='128'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112632f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98688} &apos;getQuery&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112633060: mov    0x8(%rsi),%r10d
  0x0000000112633064: shl    $0x3,%r10
  0x0000000112633068: cmp    %rax,%r10
  0x000000011263306b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112633071: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263307c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112633080: mov    %eax,-0x14000(%rsp)
  0x0000000112633087: push   %rbp
  0x0000000112633088: 
<writer thread='7171'/>
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
sub    $0x30,%rsp                               ;*aload_0
                                                ; - java.net.URL::getQuery@0 (line 729)

  0x000000011263308c: mov    0x20(%rsi),%eax
  0x000000011263308f: shl    $0x3,%rax          ;*getfield query
                                                ; - java.net.URL::getQuery@1 (line 729)

  0x0000000112633093: add    $0x30,%rsp
  0x0000000112633097: pop    %rbp
  0x0000000112633098: test   %eax,-0x33e2f9e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263309e: retq   
  0x000000011263309f: nop
  0x00000001126330a0: nop
  0x00000001126330a1: mov    0x2a8(%r15),%rax
  0x00000001126330a8: movabs $0x0,%r10
  0x00000001126330b2: mov    %r10,0x2a8(%r15)
  0x00000001126330b9: movabs $0x0,%r10
  0x00000001126330c3: mov    %r10,0x2b0(%r15)
  0x00000001126330ca: add    $0x30,%rsp
  0x00000001126330ce: pop    %rbp
  0x00000001126330cf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126330d4: hlt    
  0x00000001126330d5: hlt    
  0x00000001126330d6: hlt    
  0x00000001126330d7: hlt    
  0x00000001126330d8: hlt    
  0x00000001126330d9: hlt    
  0x00000001126330da: hlt    
  0x00000001126330db: hlt    
  0x00000001126330dc: hlt    
  0x00000001126330dd: hlt    
  0x00000001126330de: hlt    
  0x00000001126330df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126330e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126330e5: mov    %rsp,-0x28(%rsp)
  0x00000001126330ea: sub    $0x80,%rsp
  0x00000001126330f1: mov    %rax,0x78(%rsp)
  0x00000001126330f6: mov    %rcx,0x70(%rsp)
  0x00000001126330fb: mov    %rdx,0x68(%rsp)
  0x0000000112633100: mov    %rbx,0x60(%rsp)
  0x0000000112633105: mov    %rbp,0x50(%rsp)
  0x000000011263310a: mov    %rsi,0x48(%rsp)
  0x000000011263310f: mov    %rdi,0x40(%rsp)
  0x0000000112633114: mov    %r8,0x38(%rsp)
  0x0000000112633119: mov    %r9,0x30(%rsp)
  0x000000011263311e: mov    %r10,0x28(%rsp)
  0x0000000112633123: mov    %r11,0x20(%rsp)
  0x0000000112633128: mov    %r12,0x18(%rsp)
  0x000000011263312d: mov    %r13,0x10(%rsp)
  0x0000000112633132: mov    %r14,0x8(%rsp)
  0x0000000112633137: mov    %r15,(%rsp)
  0x000000011263313b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112633145: movabs $0x1126330e5,%rsi  ;   {internal_word}
  0x000000011263314f: mov    %rsp,%rdx
  0x0000000112633152: and    $0xfffffffffffffff0,%rsp
  0x0000000112633156: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263315b: hlt    
[Deopt Handler Code]
  0x000000011263315c: movabs $0x11263315c,%r10  ;   {section_word}
  0x0000000112633166: push   %r10
  0x0000000112633168: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263316d: hlt    
  0x000000011263316e: hlt    
  0x000000011263316f: hlt    
<nmethod compile_id='59' compiler='C1' level='1' entry='0x0000000112633060' size='704' address='0x0000000112632f10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='151' iicount='151' stamp='0.256'/>
<writer thread='7171'/>
[Loaded sun.misc.URLClassPath$JarLoader$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112632c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98be0} &apos;getRef&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112632d60: mov    0x8(%rsi),%r10d
  0x0000000112632d64: shl    $0x3,%r10
  0x0000000112632d68: cmp    %rax,%r10
  0x0000000112632d6b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112632d71: 
<writer thread='7171'/>
[Loaded java.util.jar.Attributes from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112632d7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112632d80: mov    %eax,-0x14000(%rsp)
  0x0000000112632d87: push   %rbp
  0x0000000112632d88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getRef@0 (line 830)

  0x0000000112632d8c: mov    0x30(%rsi),%eax
  0x0000000112632d8f: shl    $0x3,%rax          ;*getfield ref
                                                ; - java.net.URL::getRef@1 (line 830)

  0x0000000112632d93: add    $0x30,%rsp
  0x0000000112632d97: pop    %rbp
  0x0000000112632d98: test   %eax,-0x33e2c9e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112632d9e: retq   
  0x0000000112632d9f: nop
  0x0000000112632da0: nop
  0x0000000112632da1: mov    0x2a8(%r15),%rax
  0x0000000112632da8: movabs $0x0,%r10
  0x0000000112632db2: mov    %r10,0x2a8(%r15)
  0x0000000112632db9: movabs $0x0,%r10
  0x0000000112632dc3: mov    %r10,0x2b0(%r15)
  0x0000000112632dca: add    $0x30,%rsp
  0x0000000112632dce: pop    %rbp
  0x0000000112632dcf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112632dd4: hlt    
  0x0000000112632dd5: hlt    
  0x0000000112632dd6: hlt    
  0x0000000112632dd7: hlt    
  0x0000000112632dd8: hlt    
  0x0000000112632dd9: hlt    
  0x0000000112632dda: hlt    
  0x0000000112632ddb: hlt    
  0x0000000112632ddc: hlt    
  0x0000000112632ddd: hlt    
  0x0000000112632dde: hlt    
  0x0000000112632ddf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112632de0: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112632de5: mov    %rsp,-0x28(%rsp)
  0x0000000112632dea: sub    $0x80,%rsp
  0x0000000112632df1: mov    %rax,0x78(%rsp)
  0x0000000112632df6: mov    %rcx,0x70(%rsp)
  0x0000000112632dfb: mov    %rdx,0x68(%rsp)
  0x0000000112632e00: mov    %rbx,0x60(%rsp)
  0x0000000112632e05: mov    %rbp,0x50(%rsp)
  0x0000000112632e0a: mov    %rsi,0x48(%rsp)
  0x0000000112632e0f: mov    %rdi,0x40(%rsp)
  0x0000000112632e14: mov    %r8,0x38(%rsp)
  0x0000000112632e19: mov    %r9,0x30(%rsp)
  0x0000000112632e1e: mov    %r10,0x28(%rsp)
  0x0000000112632e23: mov    %r11,0x20(%rsp)
  0x0000000112632e28: mov    %r12,0x18(%rsp)
  0x0000000112632e2d: mov    %r13,0x10(%rsp)
  0x0000000112632e32: mov    %r14,0x8(%rsp)
  0x0000000112632e37: mov    %r15,(%rsp)
  0x0000000112632e3b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112632e45: movabs $0x112632de5,%rsi  ;   {internal_word}
  0x0000000112632e4f: mov    %rsp,%rdx
  0x0000000112632e52: and    $0xfffffffffffffff0,%rsp
  0x0000000112632e56: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112632e5b: hlt    
[Deopt Handler Code]
  0x0000000112632e5c: movabs $0x112632e5c,%r10  ;   {section_word}
  0x0000000112632e66: push   %r10
  0x0000000112632e68: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112632e6d: hlt    
  0x0000000112632e6e: hlt    
  0x0000000112632e6f: hlt    
<nmethod compile_id='60' compiler='C1' level='1' entry='0x0000000112632d60' size='704' address='0x0000000112632c10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='151' iicount='151' stamp='0.257'/>
<writer thread='7171'/>
[Loaded java.util.jar.Manifest$FastInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112632910:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129eccc00} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112632a60: mov    0x8(%rsi),%r10d
  0x0000000112632a64: shl    $0x3,%r10
  0x0000000112632a68: cmp    %rax,%r10
  0x0000000112632a6b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112632a71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112632a7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112632a80: mov    %eax,-0x14000(%rsp)
  0x0000000112632a87: push   %rbp
  0x0000000112632a88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getPath@0 (line 1303)

  0x0000000112632a8c: mov    0xc(%rsi),%eax
  0x0000000112632a8f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.Parts::getPath@1 (line 1303)

  0x0000000112632a93: add    $0x30,%rsp
  0x0000000112632a97: pop    %rbp
  0x0000000112632a98: test   %eax,-0x33e299e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112632a9e: retq   
  0x0000000112632a9f: nop
  0x0000000112632aa0: nop
  0x0000000112632aa1: mov    0x2a8(%r15),%rax
  0x0000000112632aa8: movabs $0x0,%r10
  0x0000000112632ab2: mov    %r10,0x2a8(%r15)
  0x0000000112632ab9: movabs $0x0,%r10
  0x0000000112632ac3: mov    %r10,0x2b0(%r15)
  0x0000000112632aca: add    $0x30,%rsp
  0x0000000112632ace: pop    %rbp
  0x0000000112632acf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112632ad4: hlt    
  0x0000000112632ad5: hlt    
  0x0000000112632ad6: hlt    
  0x0000000112632ad7: hlt    
  0x0000000112632ad8: hlt    
  0x0000000112632ad9: hlt    
  0x0000000112632ada: hlt    
  0x0000000112632adb: hlt    
  0x0000000112632adc: hlt    
  0x0000000112632add: hlt    
  0x0000000112632ade: hlt    
  0x0000000112632adf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112632ae0: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112632ae5: mov    %rsp,-0x28(%rsp)
  0x0000000112632aea: sub    $0x80,%rsp
  0x0000000112632af1: mov    %rax,0x78(%rsp)
  0x0000000112632af6: mov    %rcx,0x70(%rsp)
  0x0000000112632afb: mov    %rdx,0x68(%rsp)
  0x0000000112632b00: mov    %rbx,0x60(%rsp)
  0x0000000112632b05: mov    %rbp,0x50(%rsp)
  0x0000000112632b0a: mov    %rsi,0x48(%rsp)
  0x0000000112632b0f: mov    %rdi,0x40(%rsp)
  0x0000000112632b14: mov    %r8,0x38(%rsp)
  0x0000000112632b19: mov    %r9,0x30(%rsp)
  0x0000000112632b1e: mov    %r10,0x28(%rsp)
  0x0000000112632b23: mov    %r11,0x20(%rsp)
  0x0000000112632b28: mov    %r12,0x18(%rsp)
  0x0000000112632b2d: mov    %r13,0x10(%rsp)
  0x0000000112632b32: mov    %r14,0x8(%rsp)
  0x0000000112632b37: mov    %r15,(%rsp)
  0x0000000112632b3b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112632b45: movabs $0x112632ae5,%rsi  ;   {internal_word}
  0x0000000112632b4f: mov    %rsp,%rdx
  0x0000000112632b52: and    $0xfffffffffffffff0,%rsp
  0x0000000112632b56: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112632b5b: hlt    
[Deopt Handler Code]
  0x0000000112632b5c: movabs $0x112632b5c,%r10  ;   {section_word}
  0x0000000112632b66: push   %r10
  0x0000000112632b68: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112632b6d: hlt    
  0x0000000112632b6e: hlt    
  0x0000000112632b6f: hlt    
<nmethod compile_id='56' compiler='C1' level='1' entry='0x0000000112632a60' size='704' address='0x0000000112632910' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='141' iicount='141' stamp='0.258'/>
Decoding compiled method 0x0000000112632610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129eccc98} &apos;getQuery&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112632760: mov    0x8(%rsi),%r10d
  0x0000000112632764: shl    $0x3,%r10
  0x0000000112632768: cmp    %rax,%r10
  0x000000011263276b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112632771: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263277c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112632780: mov    %eax,-0x14000(%rsp)
  0x0000000112632787: push   %rbp
  0x0000000112632788: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getQuery@0 (line 1307)

  0x000000011263278c: mov    0x10(%rsi),%eax
  0x000000011263278f: shl    $0x3,%rax          ;*getfield query
                                                ; - java.net.Parts::getQuery@1 (line 1307)

  0x0000000112632793: add    $0x30,%rsp
  0x0000000112632797: pop    %rbp
  0x0000000112632798: test   %eax,-0x33e269e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263279e: retq   
  0x000000011263279f: nop
  0x00000001126327a0: nop
  0x00000001126327a1: mov    0x2a8(%r15),%rax
  0x00000001126327a8: movabs $0x0,%r10
  0x00000001126327b2: mov    %r10,0x2a8(%r15)
  0x00000001126327b9: movabs $0x0,%r10
  0x00000001126327c3: mov    %r10,0x2b0(%r15)
  0x00000001126327ca: add    $0x30,%rsp
  0x00000001126327ce: pop    %rbp
  0x00000001126327cf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126327d4: hlt    
  0x00000001126327d5: hlt    
  0x00000001126327d6: hlt    
  0x00000001126327d7: hlt    
  0x00000001126327d8: hlt    
  0x00000001126327d9: hlt    
  0x00000001126327da: hlt    
  0x00000001126327db: hlt    
  0x00000001126327dc: hlt    
  0x00000001126327dd: hlt    
  0x00000001126327de: hlt    
  0x00000001126327df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126327e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126327e5: mov    %rsp,-0x28(%rsp)
  0x00000001126327ea: sub    $0x80,%rsp
  0x00000001126327f1: mov    %rax,0x78(%rsp)
  0x00000001126327f6: mov    %rcx,0x70(%rsp)
  0x00000001126327fb: mov    %rdx,0x68(%rsp)
  0x0000000112632800: mov    %rbx,0x60(%rsp)
  0x0000000112632805: mov    %rbp,0x50(%rsp)
  0x000000011263280a: mov    %rsi,0x48(%rsp)
  0x000000011263280f: mov    %rdi,0x40(%rsp)
  0x0000000112632814: mov    %r8,0x38(%rsp)
  0x0000000112632819: mov    %r9,0x30(%rsp)
  0x000000011263281e: mov    %r10,0x28(%rsp)
  0x0000000112632823: mov    %r11,0x20(%rsp)
  0x0000000112632828: mov    %r12,0x18(%rsp)
  0x000000011263282d: mov    %r13,0x10(%rsp)
  0x0000000112632832: mov    %r14,0x8(%rsp)
  0x0000000112632837: mov    %r15,(%rsp)
  0x000000011263283b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112632845: movabs $0x1126327e5,%rsi  ;   {internal_word}
  0x000000011263284f: mov    %rsp,%rdx
  0x0000000112632852: and    $0xfffffffffffffff0,%rsp
  0x0000000112632856: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263285b: hlt    
[Deopt Handler Code]
  0x000000011263285c: movabs $0x11263285c,%r10  ;   {section_word}
  0x0000000112632866: push   %r10
  0x0000000112632868: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263286d: hlt    
  0x000000011263286e: hlt    
  0x000000011263286f: hlt    
<nmethod compile_id='57' compiler='C1' level='1' entry='0x0000000112632760' size='704' address='0x0000000112632610' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='141' iicount='141' stamp='0.259'/>
Decoding compiled method 0x0000000112632310:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129eccd30} &apos;getRef&apos; &apos;()Ljava
<writer thread='7171'/>
[Loaded java.util.jar.Attributes$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112632460: mov    0x8(%rsi),%r10d
  0x0000000112632464: shl    $0x3,%r10
  0x0000000112632468: cmp    %rax,%r10
  0x000000011263246b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112632471: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263247c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112632480: mov    %eax,-0x14000(%rsp)
  0x0000000112632487: push   %rbp
  0x0000000112632488: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getRef@0 (line 1311)

  0x000000011263248c: mov    0x14(%rsi),%eax
  0x000000011263248f: shl    $0x3,%rax          ;*getfield ref
                                                ; - java.net.Parts::getRef@1 (line 1311)

  0x0000000112632493: add    $0x30,%rsp
  0x0000000112632497: pop    %rbp
  0x0000000112632498: test   %eax,-0x33e239e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263249e: retq   
  0x000000011263249f: nop
  0x00000001126324a0: nop
  0x00000001126324a1: mov    0x2a8(%r15),%rax
  0x00000001126324a8: movabs $0x0,%r10
  0x00000001126324b2: mov    %r10,0x2a8(%r15)
  0x00000001126324b9: movabs $0x0,%r10
  0x00000001126324c3: mov    %r10,0x2b0(%r15)
  0x00000001126324ca: add    $0x30,%rsp
  0x00000001126324ce: pop    %rbp
  0x00000001126324cf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126324d4: hlt    
  0x00000001126324d5: hlt    
  0x00000001126324d6: hlt    
  0x00000001126324d7: hlt    
  0x00000001126324d8: hlt    
  0x00000001126324d9: hlt    
  0x00000001126324da: hlt    
  0x00000001126324db: hlt    
  0x00000001126324dc: hlt    
  0x00000001126324dd: hlt    
  0x00000001126324de: hlt    
  0x00000001126324df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126324e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126324e5: mov    %rsp,-0x28(%rsp)
  0x00000001126324ea: sub    $0x80,%rsp
  0x00000001126324f1: mov    %rax,0x78(%rsp)
  0x00000001126324f6: mov    %rcx,0x70(%rsp)
  0x00000001126324fb: mov    %rdx,0x68(%rsp)
  0x0000000112632500: mov    %rbx,0x60(%rsp)
  0x0000000112632505: mov    %rbp,0x50(%rsp)
  0x000000011263250a: mov    %rsi,0x48(%rsp)
  0x000000011263250f: mov    %rdi,0x40(%rsp)
  0x0000000112632514: mov    %r8,0x38(%rsp)
  0x0000000112632519: mov    %r9,0x30(%rsp)
  0x000000011263251e: mov    %r10,0x28(%rsp)
  0x0000000112632523: mov    %r11,0x20(%rsp)
  0x0000000112632528: mov    %r12,0x18(%rsp)
  0x000000011263252d: mov    %r13,0x10(%rsp)
  0x0000000112632532: mov    %r14,0x8(%rsp)
  0x0000000112632537: mov    %r15,(%rsp)
  0x000000011263253b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112632545: movabs $0x1126324e5,%rsi  ;   {internal_word}
  0x000000011263254f: mov    %rsp,%rdx
  0x0000000112632552: and    $0xfffffffffffffff0,%rsp
  0x0000000112632556: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263255b: hlt    
[Deopt Handler Code]
  0x000000011263255c: movabs $0x11263255c,%r10  ;   {section_word}
  0x0000000112632566: push   %r10
  0x0000000112632568: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263256d: hlt    
  0x000000011263256e: hlt    
  0x000000011263256f: hlt    
<nmethod compile_id='58' compiler='C1' level='1' entry='0x0000000112632460' size='704' address='0x0000000112632310' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='141' iicount='141' stamp='0.260'/>
Decoding compiled method 0x0000000112632010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129efbf30} &apos;access$000&apos; &apos;(Ljava/util/zip/ZipFile;)Ljava/util/Map;&apos; in &apos;java/util/zip/ZipF
<writer thread='7171'/>
[Loaded sun.misc.ASCIICaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
ile&apos;
  # parm0:    rsi:rsi   = &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112632160: mov    %eax,-0x14000(%rsp)
  0x0000000112632167: push   %rbp
  0x0000000112632168: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.zip.ZipFile::access$000@0 (line 61)

  0x000000011263216c: mov    0x24(%rsi),%eax    ; implicit exception: dispatches to 0x000000011263217f
  0x000000011263216f: shl    $0x3,%rax          ;*getfield streams
                                                ; - java.util.zip.ZipFile::access$000@1 (line 61)

  0x0000000112632173: add    $0x30,%rsp
  0x0000000112632177: pop    %rbp
  0x0000000112632178: test   %eax,-0x33e207e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263217e: retq   
  0x000000011263217f: callq  0x00000001126072c0  ; OopMap{off=36}
                                                ;*getfield streams
                                                ; - java.util.zip.ZipFile::access$000@1 (line 61)
                                                ;   {runtime_call}
  0x0000000112632184: nop
  0x0000000112632185: nop
  0x0000000112632186: mov    0x2a8(%r15),%rax
  0x000000011263218d: movabs $0x0,%r10
  0x0000000112632197: mov    %r10,0x2a8(%r15)
  0x000000011263219e: movabs $0x0,%r10
  0x00000001126321a8: mov    %r10,0x2b0(%r15)
  0x00000001126321af: add    $0x30,%rsp
  0x00000001126321b3: pop    %rbp
  0x00000001126321b4: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126321b9: hlt    
  0x00000001126321ba: hlt    
  0x00000001126321bb: hlt    
  0x00000001126321bc: hlt    
  0x00000001126321bd: hlt    
  0x00000001126321be: hlt    
  0x00000001126321bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126321c0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126321c5: mov    %rsp,-0x28(%rsp)
  0x00000001126321ca: sub    $0x80,%rsp
  0x00000001126321d1: mov    %rax,0x78(%rsp)
  0x00000001126321d6: mov    %rcx,0x70(%rsp)
  0x00000001126321db: mov    %rdx,0x68(%rsp)
  0x00000001126321e0: mov    %rbx,0x60(%rsp)
  0x00000001126321e5: mov    %rbp,0x50(%rsp)
  0x00000001126321ea: mov    %rsi,0x48(%rsp)
  0x00000001126321ef: mov    %rdi,0x40(%rsp)
  0x00000001126321f4: mov    %r8,0x38(%rsp)
  0x00000001126321f9: mov    %r9,0x30(%rsp)
  0x00000001126321fe: mov    %r10,0x28(%rsp)
  0x0000000112632203: mov    %r11,0x20(%rsp)
  0x0000000112632208: mov    %r12,0x18(%rsp)
  0x000000011263220d: mov    %r13,0x10(%rsp)
  0x0000000112632212: mov    %r14,0x8(%rsp)
  0x0000000112632217: mov    %r15,(%rsp)
  0x000000011263221b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112632225: movabs $0x1126321c5,%rsi  ;   {internal_word}
  0x000000011263222f: mov    %rsp,%rdx
  0x0000000112632232: and    $0xfffffffffffffff0,%rsp
  0x0000000112632236: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263223b: hlt    
[Deopt Handler Code]
  0x000000011263223c: movabs $0x11263223c,%r10  ;   {section_word}
  0x0000000112632246: push   %r10
  0x0000000112632248: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263224d: hlt    
  0x000000011263224e: hlt    
  0x000000011263224f: hlt    
<nmethod compile_id='64' compiler='C1' level='1' entry='0x0000000112632160' size='712' address='0x0000000112632010' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='144' iicount='144' stamp='0.261'/>
Decoding compiled method 0x0000000112631d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129f43200} &apos;getMonth&apos; &apos;()I&apos; in &apos;sun/util/calendar/CalendarDate&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112631e60: mov    0x8(%rsi),%r10d
  0x0000000112631e64: shl    $0x3,%r10
  0x0000000112631e68: cmp    %rax,%r10
<writer thread='7171'/>
[Loaded java.util.jar.JarVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>

  0x0000000112631e6b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112631e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112631e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112631e80: mov    %eax,-0x14000(%rsp)
  0x0000000112631e87: push   %rbp
  0x0000000112631e88: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.util.calendar.CalendarDate::getMonth@0 (line 166)

  0x0000000112631e8c: mov    0x18(%rsi),%eax    ;*getfield month
                                                ; - sun.util.calendar.CalendarDate::getMonth@1 (line 166)

  0x0000000112631e8f: add    $0x30,%rsp
  0x0000000112631e93: pop    %rbp
  0x0000000112631e94: test   %eax,-0x33e1d9a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112631e9a: retq   
  0x0000000112631e9b: nop
  0x0000000112631e9c: nop
  0x0000000112631e9d: mov    0x2a8(%r15),%rax
  0x0000000112631ea4: movabs $0x0,%r10
  0x0000000112631eae: mov    %r10,0x2a8(%r15)
  0x0000000112631eb5: movabs $0x0,%r10
  0x0000000112631ebf: mov    %r10,0x2b0(%r15)
  0x0000000112631ec6: add    $0x30,%rsp
  0x0000000112631eca: pop    %rbp
  0x0000000112631ecb: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112631ed0: hlt    
  0x0000000112631ed1: hlt    
  0x0000000112631ed2: hlt    
  0x0000000112631ed3: hlt    
  0x0000000112631ed4: hlt    
  0x0000000112631ed5: hlt    
  0x0000000112631ed6: hlt    
  0x0000000112631ed7: hlt    
  0x0000000112631ed8: hlt    
  0x0000000112631ed9: hlt    
  0x0000000112631eda: hlt    
  0x0000000112631edb: hlt    
  0x0000000112631edc: hlt    
  0x0000000112631edd: hlt    
  0x0000000112631ede: hlt    
  0x0000000112631edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112631ee0: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112631ee5: mov    %rsp,-0x28(%rsp)
  0x0000000112631eea: sub    $0x80,%rsp
  0x0000000112631ef1: mov    %rax,0x78(%rsp)
  0x0000000112631ef6: mov    %rcx,0x70(%rsp)
  0x0000000112631efb: mov    %rdx,0x68(%rsp)
  0x0000000112631f00: mov    %rbx,0x60(%rsp)
  0x0000000112631f05: mov    %rbp,0x50(%rsp)
  0x0000000112631f0a: mov    %rsi,0x48(%rsp)
  0x0000000112631f0f: mov    %rdi,0x40(%rsp)
  0x0000000112631f14: mov    %r8,0x38(%rsp)
  0x0000000112631f19: mov    %r9,0x30(%rsp)
  0x0000000112631f1e: mov    %r10,0x28(%rsp)
  0x0000000112631f23: mov    %r11,0x20(%rsp)
  0x0000000112631f28: mov    %r12,0x18(%rsp)
  0x0000000112631f2d: mov    %r13,0x10(%rsp)
  0x0000000112631f32: mov    %r14,0x8(%rsp)
  0x0000000112631f37: mov    %r15,(%rsp)
  0x0000000112631f3b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112631f45: movabs $0x112631ee5,%rsi  ;   {internal_word}
  0x0000000112631f4f: mov    %rsp,%rdx
  0x0000000112631f52: and    $0xfffffffffffffff0,%rsp
  0x0000000112631f56: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112631f5b: hlt    
[Deopt Handler Code]
  0x0000000112631f5c: movabs $0x112631f5c,%r10  ;   {section_word}
  0x0000000112631f66: push   %r10
  0x0000000112631f68: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112631f6d: hlt    
  0x0000000112631f6e: hlt    
  0x0000000112631f6f: hlt    
<nmethod compile_id='66' compiler='C1' level='1' entry='0x0000000112631e60' size='704' address='0x0000000112631d10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/util/calendar/CalendarDate getMonth ()I' bytes='5' count='129' iicount='129' stamp='0.262'/>
<writer thread='7171'/>
[Loaded java.security.CodeSigner from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112631a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d98ab0} &apos;getHost&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112631b60: mov    0x8(%rsi),%r10d
  0x0000000112631b64: shl    $0x3,%r10
  0x0000000112631b68: cmp    %rax,%r10
  0x0000000112631b6b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112631b71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112631b7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112631b80: mov    %eax,-0x14000(%rsp)
  0x0000000112631b87: push   %rbp
  0x0000000112631b88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getHost@0 (line 804)

  0x0000000112631b8c: mov    0x18(%rsi),%eax
  0x0000000112631b8f: shl    $0x3,%rax          ;*getfield host
                                                ; - java.net.URL::getHost@1 (line 804)

  0x0000000112631b93: add    $0x30,%rsp
  0x0000000112631b97: pop    %rbp
  0x0000000112631b98: test   %eax,-0x33e1a9e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112631b9e: retq   
  0x0000000112631b9f: nop
  0x0000000112631ba0: nop
  0x0000000112631ba1: mov    0x2a8(%r15),%rax
  0x0000000112631ba8: movabs $0x0,%r10
  0x0000000112631bb2: mov    %r10,0x2a8(%r15)
  0x0000000112631bb9: movabs $0x0,%r10
  0x0000000112631bc3: mov    %r10,0x2b0(%r15)
  0x0000000112631bca: add    $0x30,%rsp
  0x0000000112631bce: pop    %rbp
  0x0000000112631bcf: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112631bd4: hlt    
  0x0000000112631bd5: hlt    
  0x0000000112631bd6: hlt    
  0x0000000112631bd7: hlt    
  0x0000000112631bd8: hlt    
  0x0000000112631bd9: hlt    
  0x0000000112631bda: hlt    
  0x0000000112631bdb: hlt    
  0x0000000112631bdc: hlt    
  0x0000000112631bdd: hlt    
  0x0000000112631bde: hlt    
  0x0000000112631bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112631be0: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112631be5: mov    %rsp,-0x28(%rsp)
  0x0000000112631bea: sub    $0x80,%rsp
  0x0000000112631bf1: mov    %rax,0x78(%rsp)
  0x0000000112631bf6: mov    %rcx,0x70(%rsp)
  0x0000000112631bfb: mov    %rdx,0x68(%rsp)
  0x0000000112631c00: mov    %rbx,0x60(%rsp)
  0x0000000112631c05: mov    %rbp,0x50(%rsp)
  0x0000000112631c0a: mov    %rsi,0x48(%rsp)
  0x0000000112631c0f: mov    %rdi,0x40(%rsp)
  0x0000000112631c14: mov    %r8,0x38(%rsp)
  0x0000000112631c19: mov    %r9,0x30(%rsp)
  0x0000000112631c1e: mov    %r10,0x28(%rsp)
  0x0000000112631c23: mov    %r11,0x20(%rsp)
  0x0000000112631c28: mov    %r12,0x18(%rsp)
  0x0000000112631c2d: mov    %r13,0x10(%rsp)
  0x0000000112631c32: mov    %r14,0x8(%rsp)
  0x0000000112631c37: mov    %r15,(%rsp)
  0x0000000112631c3b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112631c45: movabs $0x112631be5,%rsi  ;   {internal_word}
  0x0000000112631c4f: mov    %rsp,%rdx
  0x0000000112631c52: and    $0xfffffffffffffff0,%rsp
  0x0000000112631c56: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112631c5b: hlt    
[Deopt Handler Code]
  0x0000000112631c5c: movabs $0x112631c5c,%r10  ;   {section_word}
  0x0000000112631c66: push   %r10
  0x0000000112631c68: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112631c6d: hlt    
  0x0000000112631c6e: hlt    
  0x0000000112631c6f: hlt    
<nmethod compile_id='63' compiler='C1' level='1' entry='0x0000000112631b60' size='704' address='0x0000000112631a10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='143' iicount='143' stamp='0.263'/>
<writer thread='7171'/>
[Loaded java.util.jar.JarVerifier$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='67' method='java/lang/String toCharArray ()[C' bytes='25' count='256' iicount='256' level='3' stamp='0.265' comment='tiered' hot_count='256'/>
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='34' compiler='C2' level='4' stamp='0.265'>
<jvms bci='14' method='java/lang/String hashCode ()I' bytes='55' count='1198' backedge_count='22301' iicount='1198'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='34' compiler='C2' level='4' stamp='0.265'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126314d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d13eb0} &apos;toCharA
<writer thread='7171'/>
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
rray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000112631640: mov    0x8(%rsi),%r10d
  0x0000000112631644: shl    $0x3,%r10
  0x0000000112631648: cmp    %rax,%r10
  0x000000011263164b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112631651: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263165c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112631660: mov    %eax,-0x14000(%rsp)
  0x0000000112631667: push   %rbp
  0x0000000112631668: sub    $0x40,%rsp
  0x000000011263166c: mov    %rsi,%r8
  0x000000011263166f: movabs $0x129f71c60,%rbx  ;   {metadata(method data for {method} {0x0000000129d13eb0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000112631679: mov    0xdc(%rbx),%edx
  0x000000011263167f: add    $0x8,%edx
  0x0000000112631682: mov    %edx,0xdc(%rbx)
  0x0000000112631688: movabs $0x129d13eb0,%rbx  ;   {metadata({method} {0x0000000129d13eb0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000112631692: and    $0x1ff8,%edx
  0x0000000112631698: cmp    $0x0,%edx
  0x000000011263169b: je     0x00000001126317a6  ;*aload_0
                                                ; - java.lang.String::toCharArray@0 (line 2887)

  0x00000001126316a1: mov    0xc(%r8),%r9d
  0x00000001126316a5: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::toCharArray@1 (line 2887)

  0x00000001126316a9: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2887)
                                                ; implicit exception: dispatches to 0x00000001126317bd
  0x00000001126316ad: mov    %r11,%rbx
  0x00000001126316b0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000001126316ba: movslq %ebx,%rbx
  0x00000001126316bd: mov    %rbx,%rdi
  0x00000001126316c0: cmp    $0xffffff,%rbx
  0x00000001126316c7: ja     0x00000001126317c2
  0x00000001126316cd: movabs $0x17,%rsi
  0x00000001126316d7: lea    (%rsi,%rbx,2),%rsi
  0x00000001126316db: and    $0xfffffffffffffff8,%rsi
  0x00000001126316df: mov    0x60(%r15),%rax
  0x00000001126316e3: lea    (%rax,%rsi,1),%rsi
  0x00000001126316e7: cmp    0x70(%r15),%rsi
  0x00000001126316eb: ja     0x00000001126317c2
  0x00000001126316f1: mov    %rsi,0x60(%r15)
  0x00000001126316f5: sub    %rax,%rsi
  0x00000001126316f8: movq   $0x1,(%rax)
  0x00000001126316ff: mov    %rdx,%rcx
  0x0000000112631702: shr    $0x3,%rcx
  0x0000000112631706: mov    %ecx,0x8(%rax)
  0x0000000112631709: mov    %ebx,0xc(%rax)
  0x000000011263170c: sub    $0x10,%rsi
  0x0000000112631710: je     0x0000000112631727
  0x0000000112631716: xor    %rbx,%rbx
  0x0000000112631719: shr    $0x3,%rsi
  0x000000011263171d: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000112631722: dec    %rsi
  0x0000000112631725: jne    0x000000011263171d  ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2887)

  0x0000000112631727: movabs $0x129f71c60,%rsi  ;   {metadata(method data for {method} {0x0000000129d13eb0} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000112631731: addq   $0x1,0x108(%rsi)
  0x0000000112631739: mov    %r9,%rsi
  0x000000011263173c: mov    $0x0,%edx
  0x0000000112631741: mov    %rax,%rcx
  0x0000000112631744: mov    $0x0,%r8d
  0x000000011263174a: mov    %r11,%r9
  0x000000011263174d: mov    %rax,0x30(%rsp)
  0x0000000112631752: lea    (%r8,%r9,1),%rdi
  0x0000000112631756: cmp    0xc(%rcx),%edi
  0x0000000112631759: ja     0x00000001126317cc
  0x000000011263175f: movslq %edx,%rdx
  0x0000000112631762: movslq %r8d,%r8
  0x0000000112631765: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011263176a: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011263176f: mov    %r9,%rdx
  0x0000000112631772: test   $0xf,%esp
  0x0000000112631778: je     0x0000000112631790
  0x000000011263177e: sub    $0x8,%rsp
  0x0000000112631782: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000112631787: add    $0x8,%rsp
  0x000000011263178b: jmpq   0x0000000112631795
  0x0000000112631790: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2888)
                                                ;   {runtime_call}
  0x0000000112631795: mov    0x30(%rsp),%rax
  0x000000011263179a: add    $0x40,%rsp
  0x000000011263179e: pop    %rbp
  0x000000011263179f: test   %eax,-0x33e16a5(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126317a5: retq   
  0x00000001126317a6: mov    %rbx,0x8(%rsp)
  0x00000001126317ab: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126317b3: callq  0x000000011260aea0  ; OopMap{r8=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2887)
                                                ;   {runtime_call}
  0x00000001126317b8: jmpq   0x00000001126316a1
  0x00000001126317bd: callq  0x00000001126072c0  ; OopMap{r8=Oop r9=Oop off=386}
                                                ;*arraylength
                                                ; - java.lang.String::toCharArray@4 (line 2887)
                                                ;   {runtime_call}
  0x00000001126317c2: callq  0x0000000112609820  ; OopMap{r8=Oop r9=Oop off=391}
                                                ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2887)
                                                ;   {runtime_call}
  0x00000001126317c7: jmpq   0x0000000112631727
  0x00000001126317cc: nop
  0x00000001126317cd: nop
  0x00000001126317ce: nop
  0x00000001126317cf: callq  0x0000000112553420  ; OopMap{[48]=Oop off=404}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2888)
                                                ;   {static_call}
  0x00000001126317d4: jmp    0x0000000112631795
  0x00000001126317d6: nop
  0x00000001126317d7: nop
  0x00000001126317d8: mov    0x2a8(%r15),%rax
  0x00000001126317df: movabs $0x0,%r10
  0x00000001126317e9: mov    %r10,0x2a8(%r15)
  0x00000001126317f0: movabs $0x0,%r10
  0x00000001126317fa: mov    %r10,0x2b0(%r15)
  0x0000000112631801: add    $0x40,%rsp
  0x0000000112631805: pop    %rbp
  0x0000000112631806: jmpq   0x0000000112606860  ;   {runtime_call}
  0x000000011263180b: hlt    
  0x000000011263180c: hlt    
  0x000000011263180d: hlt    
  0x000000011263180e: hlt    
  0x000000011263180f: hlt    
  0x0000000112631810: hlt    
  0x0000000112631811: hlt    
  0x0000000112631812: hlt    
  0x0000000112631813: hlt    
  0x0000000112631814: hlt    
  0x0000000112631815: hlt    
  0x0000000112631816: hlt    
  0x0000000112631817: hlt    
  0x0000000112631818: hlt    
  0x0000000112631819: hlt    
  0x000000011263181a: hlt    
  0x000000011263181b: hlt    
  0x000000011263181c: hlt    
  0x000000011263181d: hlt    
  0x000000011263181e: hlt    
  0x000000011263181f: hlt    
[Stub Code]
  0x0000000112631820: nop                       ;   {no_reloc}
  0x0000000112631821: nop
  0x0000000112631822: nop
  0x0000000112631823: nop
  0x0000000112631824: nop
  0x0000000112631825: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011263182f: jmpq   0x000000011263182f  ;   {runtime_call}
[Exception Handler]
  0x0000000112631834: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112631839: mov    %rsp,-0x28(%rsp)
  0x000000011263183e: sub    $0x80,%rsp
  0x0000000112631845: mov    %rax,0x78(%rsp)
  0x000000011263184a: mov    %rcx,0x70(%rsp)
  0x000000011263184f: mov    %rdx,0x68(%rsp)
  0x0000000112631854: mov    %rbx,0x60(%rsp)
  0x0000000112631859: mov    %rbp,0x50(%rsp)
  0x000000011263185e: mov    %rsi,0x48(%rsp)
  0x0000000112631863: mov    %rdi,0x40(%rsp)
  0x0000000112631868: mov    %r8,0x38(%rsp)
  0x000000011263186d: mov    %r9,0x30(%rsp)
  0x0000000112631872: mov    %r10,0x28(%rsp)
  0x0000000112631877: mov    %r11,0x20(%rsp)
  0x000000011263187c: mov    %r12,0x18(%rsp)
  0x0000000112631881: mov    %r13,0x10(%rsp)
  0x0000000112631886: mov    %r14,0x8(%rsp)
  0x000000011263188b: mov    %r15,(%rsp)
  0x000000011263188f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112631899: movabs $0x112631839,%rsi  ;   {internal_word}
  0x00000001126318a3: mov    %rsp,%rdx
  0x00000001126318a6: and    $0xfffffffffffffff0,%rsp
  0x00000001126318aa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126318af: hlt    
[Deopt Handler Code]
  0x00000001126318b0: movabs $0x1126318b0,%r10  ;   {section_word}
  0x00000001126318ba: push   %r10
  0x00000001126318bc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126318c1: hlt    
  0x00000001126318c2: hlt    
  0x00000001126318c3: hlt    
  0x00000001126318c4: hlt    
  0x00000001126318c5: hlt    
  0x00000001126318c6: hlt    
  0x00000001126318c7: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x0000000112631640' size='1296' address='0x00000001126314d0' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1024' scopes_pcs_offset='1096' dependencies_offset='1272' nul_chk_table_offset='1280' method='java/lang/String toCharArray ()[C' bytes='25' count='256' iicount='256' stamp='0.268'/>
<writer thread='7171'/>
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='68' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.268' comment='tiered' hot_count='256'/>
<task_queued compile_id='69' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='256' iicount='256' level='3' stamp='0.268' comment='tiered' hot_count='256'/>
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112630d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d85260} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x90]  (sp of caller)
  0x0000000112630ee0: 
<writer thread='7171'/>
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
mov    0x8(%rsi),%r10d
  0x0000000112630ee4: shl    $0x3,%r10
  0x0000000112630ee8: cmp    %rax,%r10
  0x0000000112630eeb: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112630ef1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112630efc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112630f00: mov    %eax,-0x14000(%rsp)
  0x0000000112630f07: push   %rbp
  0x0000000112630f08: sub    $0x80,%rsp
  0x0000000112630f0f: movabs $0x129f74ce0,%rdi  ;   {metadata(method data for {method} {0x0000000129d85260} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112630f19: mov    0xdc(%rdi),%ebx
  0x0000000112630f1f: add    $0x8,%ebx
  0x0000000112630f22: mov    %ebx,0xdc(%rdi)
  0x0000000112630f28: movabs $0x129d85260,%rdi  ;   {metadata({method} {0x0000000129d85260} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112630f32: and    $0x1ff8,%ebx
  0x0000000112630f38: cmp    $0x0,%ebx
  0x0000000112630f3b: je     0x0000000112631112  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x0000000112630f41: mov    %rsi,%rdi
  0x0000000112630f44: movabs $0x129f74ce0,%rbx  ;   {metadata(method data for {method} {0x0000000129d85260} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000112630f4e: addq   $0x1,0x108(%rbx)
  0x0000000112630f56: movabs $0x129f759e8,%rdi  ;   {metadata(method data for {method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630f60: mov    0xdc(%rdi),%ebx
  0x0000000112630f66: add    $0x8,%ebx
  0x0000000112630f69: mov    %ebx,0xdc(%rdi)
  0x0000000112630f6f: movabs $0x129d82208,%rdi  ;   {metadata({method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630f79: and    $0x7ffff8,%ebx
  0x0000000112630f7f: cmp    $0x0,%ebx
  0x0000000112630f82: je     0x0000000112631129
  0x0000000112630f88: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000112630f8b: inc    %edi
  0x0000000112630f8d: mov    %rsi,%rbx
  0x0000000112630f90: movabs $0x129f759e8,%rax  ;   {metadata(method data for {method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630f9a: addq   $0x1,0x108(%rax)
  0x0000000112630fa2: movabs $0x129f03ac8,%rbx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630fac: mov    0xdc(%rbx),%eax
  0x0000000112630fb2: add    $0x8,%eax
  0x0000000112630fb5: mov    %eax,0xdc(%rbx)
  0x0000000112630fbb: movabs $0x129d81178,%rbx  ;   {metadata({method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630fc5: and    $0x7ffff8,%eax
  0x0000000112630fcb: cmp    $0x0,%eax
  0x0000000112630fce: je     0x0000000112631140
  0x0000000112630fd4: mov    0x10(%rsi),%ebx
  0x0000000112630fd7: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000112630fdb: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x0000000112631157
  0x0000000112630fde: mov    %rdi,%rax
  0x0000000112630fe1: sub    %ebx,%eax
  0x0000000112630fe3: cmp    $0x0,%eax
  0x0000000112630fe6: movabs $0x129f03ac8,%rbx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112630ff0: movabs $0x108,%rax
  0x0000000112630ffa: jle    0x000000011263100a
  0x0000000112631000: movabs $0x118,%rax
  0x000000011263100a: mov    (%rbx,%rax,1),%rcx
  0x000000011263100e: lea    0x1(%rcx),%rcx
  0x0000000112631012: mov    %rcx,(%rbx,%rax,1)
  0x0000000112631016: mov    %edx,0x68(%rsp)
  0x000000011263101a: jg     0x000000011263102a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000112631020: mov    %rsi,0x60(%rsp)
  0x0000000112631025: jmpq   0x00000001126310d4  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011263102a: mov    %rsi,%rbx
  0x000000011263102d: movabs $0x129f03ac8,%rax  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112631037: mov    0x8(%rbx),%ebx
  0x000000011263103a: shl    $0x3,%rbx
  0x000000011263103e: cmp    0x130(%rax),%rbx
  0x0000000112631045: jne    0x0000000112631054
  0x0000000112631047: addq   $0x1,0x138(%rax)
  0x000000011263104f: jmpq   0x00000001126310ba
  0x0000000112631054: cmp    0x140(%rax),%rbx
  0x000000011263105b: jne    0x000000011263106a
  0x000000011263105d: addq   $0x1,0x148(%rax)
  0x0000000112631065: jmpq   0x00000001126310ba
  0x000000011263106a: cmpq   $0x0,0x130(%rax)
  0x0000000112631075: jne    0x000000011263108e
  0x0000000112631077: mov    %rbx,0x130(%rax)
  0x000000011263107e: movq   $0x1,0x138(%rax)
  0x0000000112631089: jmpq   0x00000001126310ba
  0x000000011263108e: cmpq   $0x0,0x140(%rax)
  0x0000000112631099: jne    0x00000001126310b2
  0x000000011263109b: mov    %rbx,0x140(%rax)
  0x00000001126310a2: movq   $0x1,0x148(%rax)
  0x00000001126310ad: jmpq   0x00000001126310ba
  0x00000001126310b2: addq   $0x1,0x128(%rax)
  0x00000001126310ba: mov    %rdi,%rdx
  0x00000001126310bd: mov    %rsi,%rdi
  0x00000001126310c0: mov    %rdi,%rsi          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000001126310c3: mov    %rdi,0x60(%rsp)
  0x00000001126310c8: nop
  0x00000001126310c9: nop
  0x00000001126310ca: nop
  0x00000001126310cb: nop
  0x00000001126310cc: nop
  0x00000001126310cd: nop
  0x00000001126310ce: nop
  0x00000001126310cf: callq  0x0000000112553020  ; OopMap{[96]=Oop off=500}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x00000001126310d4: mov    0x68(%rsp),%edx
  0x00000001126310d8: mov    0x60(%rsp),%rsi
  0x00000001126310dd: mov    0x10(%rsi),%eax
  0x00000001126310e0: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000001126310e4: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000001126310e7: mov    %rdi,%rbx
  0x00000001126310ea: inc    %ebx
  0x00000001126310ec: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000001126310ef: movslq %edi,%rbx
  0x00000001126310f2: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011263115c
  0x00000001126310f5: jae    0x0000000112631166
  0x00000001126310fb: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x0000000112631100: mov    %rsi,%rax
  0x0000000112631103: add    $0x80,%rsp
  0x000000011263110a: pop    %rbp
  0x000000011263110b: test   %eax,-0x33e1011(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112631111: retq   
  0x0000000112631112: mov    %rdi,0x8(%rsp)
  0x0000000112631117: movq   $0xffffffffffffffff,(%rsp)
  0x000000011263111f: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=580}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x0000000112631124: jmpq   0x0000000112630f41
  0x0000000112631129: mov    %rdi,0x8(%rsp)
  0x000000011263112e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112631136: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=603}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011263113b: jmpq   0x0000000112630f88
  0x0000000112631140: mov    %rbx,0x8(%rsp)
  0x0000000112631145: movq   $0xffffffffffffffff,(%rsp)
  0x000000011263114d: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=626}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000112631152: jmpq   0x0000000112630fd4
  0x0000000112631157: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=636}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011263115c: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=641}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000112631161: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=646}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x0000000112631166: mov    %rdi,(%rsp)
  0x000000011263116a: callq  0x0000000112606c00  ; OopMap{rsi=Oop rax=Oop off=655}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011263116f: nop
  0x0000000112631170: nop
  0x0000000112631171: mov    0x2a8(%r15),%rax
  0x0000000112631178: movabs $0x0,%r10
  0x0000000112631182: mov    %r10,0x2a8(%r15)
  0x0000000112631189: movabs $0x0,%r10
  0x0000000112631193: mov    %r10,0x2b0(%r15)
  0x000000011263119a: add    $0x80,%rsp
  0x00000001126311a1: pop    %rbp
  0x00000001126311a2: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126311a7: hlt    
  0x00000001126311a8: hlt    
  0x00000001126311a9: hlt    
  0x00000001126311aa: hlt    
  0x00000001126311ab: hlt    
  0x00000001126311ac: hlt    
  0x00000001126311ad: hlt    
  0x00000001126311ae: hlt    
  0x00000001126311af: hlt    
  0x00000001126311b0: hlt    
  0x00000001126311b1: hlt    
  0x00000001126311b2: hlt    
  0x00000001126311b3: hlt    
  0x00000001126311b4: hlt    
  0x00000001126311b5: hlt    
  0x00000001126311b6: hlt    
  0x00000001126311b7: hlt    
  0x00000001126311b8: hlt    
  0x00000001126311b9: hlt    
  0x00000001126311ba: hlt    
  0x00000001126311bb: hlt    
  0x00000001126311bc: hlt    
  0x00000001126311bd: hlt    
  0x00000001126311be: hlt    
  0x00000001126311bf: hlt    
[Stub Code]
  0x00000001126311c0: nop                       ;   {no_reloc}
  0x00000001126311c1: nop
  0x00000001126311c2: nop
  0x00000001126311c3: nop
  0x00000001126311c4: nop
  0x00000001126311c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126311cf: jmpq   0x00000001126311cf  ;   {runtime_call}
[Exception Handler]
  0x00000001126311d4: callq  0x000000011260bf60  ;   {runtime_call}
  0x00000001126311d9: mov    %rsp,-0x28(%rsp)
  0x00000001126311de: sub    $0x80,%rsp
  0x00000001126311e5: mov    %rax,0x78(%rsp)
  0x00000001126311ea: mov    %rcx,0x70(%rsp)
  0x00000001126311ef: mov    %rdx,0x68(%rsp)
  0x00000001126311f4: mov    %rbx,0x60(%rsp)
  0x00000001126311f9: mov    %rbp,0x50(%rsp)
  0x00000001126311fe: mov    %rsi,0x48(%rsp)
  0x0000000112631203: mov    %rdi,0x40(%rsp)
  0x0000000112631208: mov    %r8,0x38(%rsp)
  0x000000011263120d: mov    %r9,0x30(%rsp)
  0x0000000112631212: mov    %r10,0x28(%rsp)
  0x0000000112631217: mov    %r11,0x20(%rsp)
  0x000000011263121c: mov    %r12,0x18(%rsp)
  0x0000000112631221: mov    %r13,0x10(%rsp)
  0x0000000112631226: mov    %r14,0x8(%rsp)
  0x000000011263122b: mov    %r15,(%rsp)
  0x000000011263122f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112631239: movabs $0x1126311d9,%rsi  ;   {internal_word}
  0x0000000112631243: mov    %rsp,%rdx
  0x0000000112631246: and    $0xfffffffffffffff0,%rsp
  0x000000011263124a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263124f: hlt    
[Deopt Handler Code]
  0x0000000112631250: movabs $0x112631250,%r10  ;   {section_word}
  0x000000011263125a: push   %r10
  0x000000011263125c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112631261: hlt    
  0x0000000112631262: hlt    
  0x0000000112631263: hlt    
  0x0000000112631264: hlt    
  0x0000000112631265: hlt    
  0x0000000112631266: hlt    
  0x0000000112631267: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x0000000112630ee0' size='1880' address='0x0000000112630d50' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1504' dependencies_offset='1840' nul_chk_table_offset='1848' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='276' iicount='276' stamp='0.271'/>
<writer thread='7171'/>
<task_queued compile_id='70' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1501' iicount='1501' level='1' stamp='0.271' comment='tiered' hot_count='1501'/>
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112633a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x70]  (sp of caller)
  0x0000000112633bc0: mov    0x8(%rsi),%r10d
  0x0000000112633bc4: shl    $0x3,%r10
  0x0000000112633bc8: cmp    %rax,%r10
  0x0000000112633bcb: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112633bd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112633bdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112633be0: mov    %eax,-0x14000(%rsp)
  0x0000000112633be7: push   %rbp
  0x0000000112633be8: sub    $0x60,%rsp
  0x0000000112633bec: movabs $0x129f759e8,%rdi  ;   {metadata(method data for {method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633bf6: mov    0xdc(%rdi),%ebx
  0x0000000112633bfc: add    $0x8,%ebx
  0x0000000112633bff: mov    %ebx,0xdc(%rdi)
  0x0000000112633c05: movabs $0x129d82208,%rdi  ;   {metadata({method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633c0f: and    $0x1ff8,%ebx
  0x0000000112633c15: cmp    $0x0,%ebx
  0x0000000112633c18: je     0x0000000112633d9f  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 622)

  0x0000000112633c1e: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)

  0x0000000112633c21: inc    %edi
  0x0000000112633c23: mov    %rsi,%rbx
  0x0000000112633c26: movabs $0x129f759e8,%rax  ;   {metadata(method data for {method} {0x0000000129d82208} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633c30: addq   $0x1,0x108(%rax)
  0x0000000112633c38: movabs $0x129f03ac8,%rbx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633c42: mov    0xdc(%rbx),%eax
  0x0000000112633c48: add    $0x8,%eax
  0x0000000112633c4b: mov    %eax,0xdc(%rbx)
  0x0000000112633c51: movabs $0x129d81178,%rbx  ;   {metadata({method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633c5b: and    $0x7ffff8,%eax
  0x0000000112633c61: cmp    $0x0,%eax
  0x0000000112633c64: je     0x0000000112633db6
  0x0000000112633c6a: mov    0x10(%rsi),%ebx
  0x0000000112633c6d: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000112633c71: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; implicit exception: dispatches to 0x0000000112633dcd
  0x0000000112633c74: mov    %rdi,%rax
  0x0000000112633c77: sub    %ebx,%eax
  0x0000000112633c79: cmp    $0x0,%eax
  0x0000000112633c7c: movabs $0x129f03ac8,%rbx  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633c86: movabs $0x108,%rax
  0x0000000112633c90: jle    0x0000000112633ca0
  0x0000000112633c96: movabs $0x118,%rax
  0x0000000112633ca0: mov    (%rbx,%rax,1),%rcx
  0x0000000112633ca4: lea    0x1(%rcx),%rcx
  0x0000000112633ca8: mov    %rcx,(%rbx,%rax,1)
  0x0000000112633cac: mov    %edx,0x50(%rsp)
  0x0000000112633cb0: jg     0x0000000112633cc0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000112633cb6: mov    %rsi,0x48(%rsp)
  0x0000000112633cbb: jmpq   0x0000000112633d64  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000112633cc0: mov    %rsi,%rbx
  0x0000000112633cc3: movabs $0x129f03ac8,%rax  ;   {metadata(method data for {method} {0x0000000129d81178} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112633ccd: mov    0x8(%rbx),%ebx
  0x0000000112633cd0: shl    $0x3,%rbx
  0x0000000112633cd4: cmp    0x130(%rax),%rbx
  0x0000000112633cdb: jne    0x0000000112633cea
  0x0000000112633cdd: addq   $0x1,0x138(%rax)
  0x0000000112633ce5: jmpq   0x0000000112633d50
  0x0000000112633cea: cmp    0x140(%rax),%rbx
  0x0000000112633cf1: jne    0x0000000112633d00
  0x0000000112633cf3: addq   $0x1,0x148(%rax)
  0x0000000112633cfb: jmpq   0x0000000112633d50
  0x0000000112633d00: cmpq   $0x0,0x130(%rax)
  0x0000000112633d0b: jne    0x0000000112633d24
  0x0000000112633d0d: mov    %rbx,0x130(%rax)
  0x0000000112633d14: movq   $0x1,0x138(%rax)
  0x0000000112633d1f: jmpq   0x0000000112633d50
  0x0000000112633d24: cmpq   $0x0,0x140(%rax)
  0x0000000112633d2f: jne    0x0000000112633d48
  0x0000000112633d31: mov    %rbx,0x140(%rax)
  0x0000000112633d38: movq   $0x1,0x148(%rax)
  0x0000000112633d43: jmpq   0x0000000112633d50
  0x0000000112633d48: addq   $0x1,0x128(%rax)
  0x0000000112633d50: mov    %rdi,%rdx
  0x0000000112633d53: mov    %rsi,%rdi
  0x0000000112633d56: mov    %rdi,%rsi          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x0000000112633d59: mov    %rdi,0x48(%rsp)
  0x0000000112633d5e: nop
  0x0000000112633d5f: callq  0x0000000112553020  ; OopMap{[72]=Oop off=420}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {optimized virtual_call}
  0x0000000112633d64: mov    0x50(%rsp),%edx
  0x0000000112633d68: mov    0x48(%rsp),%rsi
  0x0000000112633d6d: mov    0x10(%rsi),%eax
  0x0000000112633d70: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)

  0x0000000112633d74: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)

  0x0000000112633d77: mov    %rdi,%rbx
  0x0000000112633d7a: inc    %ebx
  0x0000000112633d7c: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)

  0x0000000112633d7f: movslq %edi,%rbx
  0x0000000112633d82: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x0000000112633dd2
  0x0000000112633d85: jae    0x0000000112633ddc
  0x0000000112633d8b: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)

  0x0000000112633d90: mov    %rsi,%rax
  0x0000000112633d93: add    $0x60,%rsp
  0x0000000112633d97: pop    %rbp
  0x0000000112633d98: test   %eax,-0x33e3c9e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112633d9e: retq   
  0x0000000112633d9f: mov    %rdi,0x8(%rsp)
  0x0000000112633da4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112633dac: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=497}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ;   {runtime_call}
  0x0000000112633db1: jmpq   0x0000000112633c1e
  0x0000000112633db6: mov    %rbx,0x8(%rsp)
  0x0000000112633dbb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112633dc3: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=520}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000112633dc8: jmpq   0x0000000112633c6a
  0x0000000112633dcd: callq  0x00000001126072c0  ; OopMap{rsi=Oop off=530}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x0000000112633dd2: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=535}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000112633dd7: callq  0x00000001126072c0  ; OopMap{rsi=Oop rax=Oop off=540}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000112633ddc: mov    %rdi,(%rsp)
  0x0000000112633de0: callq  0x0000000112606c00  ; OopMap{rsi=Oop rax=Oop off=549}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x0000000112633de5: nop
  0x0000000112633de6: nop
  0x0000000112633de7: mov    0x2a8(%r15),%rax
  0x0000000112633dee: movabs $0x0,%r10
  0x0000000112633df8: mov    %r10,0x2a8(%r15)
  0x0000000112633dff: movabs $0x0,%r10
  0x0000000112633e09: mov    %r10,0x2b0(%r15)
  0x0000000112633e10: add    $0x60,%rsp
  0x0000000112633e14: pop    %rbp
  0x0000000112633e15: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112633e1a: hlt    
  0x0000000112633e1b: hlt    
  0x0000000112633e1c: hlt    
  0x0000000112633e1d: hlt    
  0x0000000112633e1e: hlt    
  0x0000000112633e1f: hlt    
[Stub Code]
  0x0000000112633e20: nop                       ;   {no_reloc}
  0x0000000112633e21: nop
  0x0000000112633e22: nop
  0x0000000112633e23: nop
  0x0000000112633e24: nop
  0x0000000112633e25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000112633e2f: jmpq   0x0000000112633e2f  ;   {runtime_call}
[Exception Handler]
  0x0000000112633e34: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112633e39: mov    %rsp,-0x28(%rsp)
  0x0000000112633e3e: sub    $0x80,%rsp
  0x0000000112633e45: mov    %rax,0x78(%rsp)
  0x0000000112633e4a: mov    %rcx,0x70(%rsp)
  0x0000000112633e4f: mov    %rdx,0x68(%rsp)
  0x0000000112633e54: mov    %rbx,0x60(%rsp)
  0x0000000112633e59: mov    %rbp,0x50(%rsp)
  0x0000000112633e5e: mov    %rsi,0x48(%rsp)
  0x0000000112633e63: mov    %rdi,0x40(%rsp)
  0x0000000112633e68: mov    %r8,0x38(%rsp)
  0x0000000112633e6d: mov    %r9,0x30(%rsp)
  0x0000000112633e72: mov    %r10,0x28(%rsp)
  0x0000000112633e77: mov    %r11,0x20(%rsp)
  0x0000000112633e7c: mov    %r12,0x18(%rsp)
  0x0000000112633e81: mov    %r13,0x10(%rsp)
  0x0000000112633e86: mov    %r14,0x8(%rsp)
  0x0000000112633e8b: mov    %r15,(%rsp)
  0x0000000112633e8f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112633e99: movabs $0x112633e39,%rsi  ;   {internal_word}
  0x0000000112633ea3: mov    %rsp,%rdx
  0x0000000112633ea6: and    $0xfffffffffffffff0,%rsp
  0x0000000112633eaa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112633eaf: hlt    
[Deopt Handler Code]
  0x0000000112633eb0: movabs $0x112633eb0,%r10  ;   {section_word}
  0x0000000112633eba: push   %r10
  0x0000000112633ebc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112633ec1: hlt    
  0x0000000112633ec2: hlt    
  0x0000000112633ec3: hlt    
  0x0000000112633ec4: hlt    
  0x0000000112633ec5: hlt    
  0x0000000112633ec6: hlt    
  0x0000000112633ec7: hlt    
<nmethod compile_id='69' compiler='C1' level='3' entry='0x0000000112633bc0' size='1672' address='0x0000000112633a50' relocation_offset='296' insts_offset='368' stub_offset='976' scopes_data_offset='1168' scopes_pcs_offset='1312' dependencies_offset='1632' nul_chk_table_offset='1640' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='331' iicount='331' stamp='0.274'/>
Decoding compiled method 0x0000000112634110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129ecb548} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLati
<writer thread='7171'/>
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
n1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000112634280: mov    0x8(%rsi),%r10d
  0x0000000112634284: shl    $0x3,%r10
  0x0000000112634288: cmp    %rax,%r10
  0x000000011263428b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112634291: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263429c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001126342a0: mov    %eax,-0x14000(%rsp)
  0x00000001126342a7: push   %rbp
  0x00000001126342a8: sub    $0x30,%rsp         ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00000001126342ac: and    $0xffff,%edx
  0x00000001126342b2: movabs $0x76ab484e8,%rax  ;   {oop([I)}
  0x00000001126342bc: movslq %edx,%rsi
  0x00000001126342bf: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000001126342d8
  0x00000001126342c2: jae    0x00000001126342e2
  0x00000001126342c8: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00000001126342cc: add    $0x30,%rsp
  0x00000001126342d0: pop    %rbp
  0x00000001126342d1: test   %eax,-0x33e41d7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126342d7: retq   
  0x00000001126342d8: callq  0x00000001126072c0  ; OopMap{rax=Oop off=93}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001126342dd: callq  0x00000001126072c0  ; OopMap{rax=Oop off=98}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001126342e2: mov    %rdx,(%rsp)
  0x00000001126342e6: callq  0x0000000112606c00  ; OopMap{rax=Oop off=107}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001126342eb: nop
  0x00000001126342ec: nop
  0x00000001126342ed: mov    0x2a8(%r15),%rax
  0x00000001126342f4: movabs $0x0,%r10
  0x00000001126342fe: mov    %r10,0x2a8(%r15)
  0x0000000112634305: movabs $0x0,%r10
  0x000000011263430f: mov    %r10,0x2b0(%r15)
  0x0000000112634316: add    $0x30,%rsp
  0x000000011263431a: pop    %rbp
  0x000000011263431b: jmpq   0x0000000112606860  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000112634320: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112634325: mov    %rsp,-0x28(%rsp)
  0x000000011263432a: sub    $0x80,%rsp
  0x0000000112634331: mov    %rax,0x78(%rsp)
  0x0000000112634336: mov    %rcx,0x70(%rsp)
  0x000000011263433b: mov    %rdx,0x68(%rsp)
  0x0000000112634340: mov    %rbx,0x60(%rsp)
  0x0000000112634345: mov    %rbp,0x50(%rsp)
  0x000000011263434a: mov    %rsi,0x48(%rsp)
  0x000000011263434f: mov    %rdi,0x40(%rsp)
  0x0000000112634354: mov    %r8,0x38(%rsp)
  0x0000000112634359: mov    %r9,0x30(%rsp)
  0x000000011263435e: mov    %r10,0x28(%rsp)
  0x0000000112634363: mov    %r11,0x20(%rsp)
  0x0000000112634368: mov    %r12,0x18(%rsp)
  0x000000011263436d: mov    %r13,0x10(%rsp)
  0x0000000112634372: mov    %r14,0x8(%rsp)
  0x0000000112634377: mov    %r15,(%rsp)
  0x000000011263437b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112634385: movabs $0x112634325,%rsi  ;   {internal_word}
  0x000000011263438f: mov    %rsp,%rdx
  0x0000000112634392: and    $0xfffffffffffffff0,%rsp
  0x0000000112634396: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263439b: hlt    
[Deopt Handler Code]
  0x000000011263439c: movabs $0x11263439c,%r10  ;   {section_word}
  0x00000001126343a6: push   %r10
  0x00000001126343a8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126343ad: hlt    
  0x00000001126343ae: hlt    
  0x00000001126343af: hlt    
<nmethod compile_id='70' compiler='C1' level='1' entry='0x0000000112634280' size='856' address='0x0000000112634110' relocation_offset='296' insts_offset='368' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='824' nul_chk_table_offset='832' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1501' iicount='1501' stamp='0.276'/>
<make_not_entrant thread='20739' compile_id='27' compiler='C1' level='3' stamp='0.276'/>
<writer thread='7171'/>
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.intellij.rt.execution.application.AppMain from file:/Applications/IntelliJ%20IDEA.app/Contents/lib/idea_rt.jar]
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='71' method='java/lang/String hashCode ()I' bytes='55' count='1207' backedge_count='22528' iicount='1207' decompiles='1' unstable_if_traps='1' level='3' stamp='0.278' comment='tiered' hot_count='1207'/>
[Loaded java.lang.reflect.InvocationTargetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityException from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.UnsatisfiedLinkError from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112634490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d11fc8} &apos;hashCod
<writer thread='7171'/>
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
e&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112634600: mov    0x8(%rsi),%r10d
  0x0000000112634604: shl    $0x3,%r10
  0x0000000112634608: cmp    %rax,%r10
  0x000000011263460b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112634611: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011263461c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112634620: mov    %eax,-0x14000(%rsp)
  0x0000000112634627: push   %rbp
  0x0000000112634628: sub    $0x30,%rsp
  0x000000011263462c: movabs $0x129ecfde0,%rax  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112634636: mov    0xdc(%rax),%edi
  0x000000011263463c: add    $0x8,%edi
  0x000000011263463f: mov    %edi,0xdc(%rax)
  0x0000000112634645: movabs $0x129d11fc8,%rax  ;   {metadata({method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263464f: and    $0x1ff8,%edi
  0x0000000112634655: cmp    $0x0,%edi
  0x0000000112634658: je     0x0000000112634791  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1454)

  0x000000011263465e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1454)

  0x0000000112634661: cmp    $0x0,%eax
  0x0000000112634664: movabs $0x129ecfde0,%rdi  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263466e: movabs $0x108,%rbx
  0x0000000112634678: jne    0x0000000112634688
  0x000000011263467e: movabs $0x118,%rbx
  0x0000000112634688: mov    (%rdi,%rbx,1),%rdx
  0x000000011263468c: lea    0x1(%rdx),%rdx
  0x0000000112634690: mov    %rdx,(%rdi,%rbx,1)
  0x0000000112634694: jne    0x0000000112634785  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1455)

  0x000000011263469a: mov    0xc(%rsi),%edi
  0x000000011263469d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1455)

  0x00000001126346a1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ; implicit exception: dispatches to 0x00000001126347a8
  0x00000001126346a4: cmp    $0x0,%ebx
  0x00000001126346a7: movabs $0x129ecfde0,%rdx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126346b1: movabs $0x128,%rcx
  0x00000001126346bb: jle    0x00000001126346cb
  0x00000001126346c1: movabs $0x138,%rcx
  0x00000001126346cb: mov    (%rdx,%rcx,1),%r8
  0x00000001126346cf: lea    0x1(%r8),%r8
  0x00000001126346d3: mov    %r8,(%rdx,%rcx,1)
  0x00000001126346d7: jle    0x0000000112634785  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)

  0x00000001126346dd: mov    $0x0,%edx
  0x00000001126346e2: jmpq   0x000000011263474a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1458)

  0x00000001126346e7: nop
  0x00000001126346e8: movslq %edx,%rcx
  0x00000001126346eb: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1459)

  0x00000001126346f0: mov    %rax,%r8
  0x00000001126346f3: shl    $0x5,%eax
  0x00000001126346f6: sub    %r8d,%eax
  0x00000001126346f9: add    %ecx,%eax
  0x00000001126346fb: inc    %edx
  0x00000001126346fd: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112634707: mov    0xe0(%rcx),%r8d
  0x000000011263470e: add    $0x8,%r8d
  0x0000000112634712: mov    %r8d,0xe0(%rcx)
  0x0000000112634719: movabs $0x129d11fc8,%rcx  ;   {metadata({method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112634723: and    $0xfff8,%r8d
  0x000000011263472a: cmp    $0x0,%r8d
  0x000000011263472e: je     0x00000001126347ad  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x0000000112634734: test   %eax,-0x33e463a(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011263473a: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112634744: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x000000011263474a: cmp    %ebx,%edx
  0x000000011263474c: movabs $0x129ecfde0,%rcx  ;   {metadata(method data for {method} {0x0000000129d11fc8} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112634756: movabs $0x148,%r8
  0x0000000112634760: jge    0x0000000112634770
  0x0000000112634766: movabs $0x158,%r8
  0x0000000112634770: mov    (%rcx,%r8,1),%r9
  0x0000000112634774: lea    0x1(%r9),%r9
  0x0000000112634778: mov    %r9,(%rcx,%r8,1)
  0x000000011263477c: jl     0x00000001126346e8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x0000000112634782: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1461)

  0x0000000112634785: add    $0x30,%rsp
  0x0000000112634789: pop    %rbp
  0x000000011263478a: test   %eax,-0x33e4690(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112634790: retq   
  0x0000000112634791: mov    %rax,0x8(%rsp)
  0x0000000112634796: movq   $0xffffffffffffffff,(%rsp)
  0x000000011263479e: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)
                                                ;   {runtime_call}
  0x00000001126347a3: jmpq   0x000000011263465e
  0x00000001126347a8: callq  0x00000001126072c0  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x00000001126347ad: mov    %rcx,0x8(%rsp)
  0x00000001126347b2: movq   $0x2d,(%rsp)
  0x00000001126347ba: callq  0x000000011260aea0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)
                                                ;   {runtime_call}
  0x00000001126347bf: jmpq   0x0000000112634734
  0x00000001126347c4: nop
  0x00000001126347c5: nop
  0x00000001126347c6: mov    0x2a8(%r15),%rax
  0x00000001126347cd: movabs $0x0,%r10
  0x00000001126347d7: mov    %r10,0x2a8(%r15)
  0x00000001126347de: movabs $0x0,%r10
  0x00000001126347e8: mov    %r10,0x2b0(%r15)
  0x00000001126347ef: add    $0x30,%rsp
  0x00000001126347f3: pop    %rbp
  0x00000001126347f4: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126347f9: hlt    
  0x00000001126347fa: hlt    
  0x00000001126347fb: hlt    
  0x00000001126347fc: hlt    
  0x00000001126347fd: hlt    
  0x00000001126347fe: hlt    
  0x00000001126347ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112634800: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112634805: mov    %rsp,-0x28(%rsp)
  0x000000011263480a: sub    $0x80,%rsp
  0x0000000112634811: mov    %rax,0x78(%rsp)
  0x0000000112634816: mov    %rcx,0x70(%rsp)
  0x000000011263481b: mov    %rdx,0x68(%rsp)
  0x0000000112634820: mov    %rbx,0x60(%rsp)
  0x0000000112634825: mov    %rbp,0x50(%rsp)
  0x000000011263482a: mov    %rsi,0x48(%rsp)
  0x000000011263482f: mov    %rdi,0x40(%rsp)
  0x0000000112634834: mov    %r8,0x38(%rsp)
  0x0000000112634839: mov    %r9,0x30(%rsp)
  0x000000011263483e: mov    %r10,0x28(%rsp)
  0x0000000112634843: mov    %r11,0x20(%rsp)
  0x0000000112634848: mov    %r12,0x18(%rsp)
  0x000000011263484d: mov    %r13,0x10(%rsp)
  0x0000000112634852: mov    %r14,0x8(%rsp)
  0x0000000112634857: mov    %r15,(%rsp)
  0x000000011263485b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112634865: movabs $0x112634805,%rsi  ;   {internal_word}
  0x000000011263486f: mov    %rsp,%rdx
  0x0000000112634872: and    $0xfffffffffffffff0,%rsp
  0x0000000112634876: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263487b: hlt    
[Deopt Handler Code]
  0x000000011263487c: movabs $0x11263487c,%r10  ;   {section_word}
  0x0000000112634886: push   %r10
  0x0000000112634888: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263488d: hlt    
  0x000000011263488e: hlt    
  0x000000011263488f: hlt    
<nmethod compile_id='71' compiler='C1' level='3' entry='0x0000000112634600' size='1448' address='0x0000000112634490' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='1223' backedge_count='22737' iicount='1223' decompiles='1' unstable_if_traps='1' stamp='0.281'/>
<writer thread='7171'/>
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='72' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='512' iicount='512' level='3' stamp='0.283' comment='tiered' hot_count='512'/>
<task_queued compile_id='73' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='132' backedge_count='9216' iicount='132' level='3' stamp='0.283' comment='tiered' hot_count='132'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112634a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129e597d0} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000112634ba0: mov    0x8(%rsi),%r10d
  0x0000000112634ba4: shl    $0x3,%r10
  0x0000000112634ba8: cmp    %rax,%r10
  0x0000000112634bab: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112634bb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112634bbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112634bc0: mov    %eax,-0x14000(%rsp)
  0x0000000112634bc7: push   %rbp
  0x0000000112634bc8: sub    $0x30,%rsp
  0x0000000112634bcc: movabs $0x129f8af78,%rdi  ;   {metadata(method data for {method} {0x0000000129e597d0} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000112634bd6: mov    0xdc(%rdi),%ebx
  0x0000000112634bdc: add    $0x8,%ebx
  0x0000000112634bdf: mov    %ebx,0xdc(%rdi)
  0x0000000112634be5: movabs $0x129e597d0,%rdi  ;   {metadata({method} {0x0000000129e597d0} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x0000000112634bef: and    $0x1ff8,%ebx
  0x0000000112634bf5: cmp    $0x0,%ebx
  0x0000000112634bf8: je     0x0000000112634c0f  ;*aload_0
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@0 (line 465)

  0x0000000112634bfe: vmovss 0x10(%rsi),%xmm0   ;*getfield maxBytesPerChar
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)

  0x0000000112634c03: add    $0x30,%rsp
  0x0000000112634c07: pop    %rbp
  0x0000000112634c08: test   %eax,-0x33e4b0e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112634c0e: retq   
  0x0000000112634c0f: mov    %rdi,0x8(%rsp)
  0x0000000112634c14: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112634c1c: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=129}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ;   {runtime_call}
  0x0000000112634c21: jmp    0x0000000112634bfe
  0x0000000112634c23: nop
  0x0000000112634c24: nop
  0x0000000112634c25: mov    0x2a8(%r15),%rax
  0x0000000112634c2c: movabs $0x0,%r10
  0x0000000112634c36: mov    %r10,0x2a8(%r15)
  0x0000000112634c3d: movabs $0x0,%r10
  0x0000000112634c47: mov    %r10,0x2b0(%r15)
  0x0000000112634c4e: add    $0x30,%rsp
  0x0000000112634c52: pop    %rbp
  0x0000000112634c53: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112634c58: hlt    
  0x0000000112634c59: hlt    
  0x0000000112634c5a: hlt    
  0x0000000112634c5b: hlt    
  0x0000000112634c5c: hlt    
  0x0000000112634c5d: hlt    
  0x0000000112634c5e: hlt    
  0x0000000112634c5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112634c60: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112634c65: mov    %rsp,-0x28(%rsp)
  0x0000000112634c6a: sub    $0x80,%rsp
  0x0000000112634c71: mov    %rax,0x78(%rsp)
  0x0000000112634c76: mov    %rcx,0x70(%rsp)
  0x0000000112634c7b: mov    %rdx,0x68(%rsp)
  0x0000000112634c80: mov    %rbx,0x60(%rsp)
  0x0000000112634c85: mov    %rbp,0x50(%rsp)
  0x0000000112634c8a: mov    %rsi,0x48(%rsp)
  0x0000000112634c8f: mov    %rdi,0x40(%rsp)
  0x0000000112634c94: mov    %r8,0x38(%rsp)
  0x0000000112634c99: mov    %r9,0x30(%rsp)
  0x0000000112634c9e: mov    %r10,0x28(%rsp)
  0x0000000112634ca3: mov    %r11,0x20(%rsp)
  0x0000000112634ca8: mov    %r12,0x18(%rsp)
  0x0000000112634cad: mov    %r13,0x10(%rsp)
  0x0000000112634cb2: mov    %r14,0x8(%rsp)
  0x0000000112634cb7: mov    %r15,(%rsp)
  0x0000000112634cbb: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112634cc5: movabs $0x112634c65,%rsi  ;   {internal_word}
  0x0000000112634ccf: mov    %rsp,%rdx
  0x0000000112634cd2: and    $0xfffffffffffffff0,%rsp
  0x0000000112634cd6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x0000000112634cdb: hlt    
[Deopt Handler Code]
  0x0000000112634cdc: movabs $0x112634cdc,%r10  ;   {section_word}
  0x0000000112634ce6: push   %r10
  0x0000000112634ce8: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112634ced: hlt    
  0x0000000112634cee: hlt    
  0x0000000112634cef: hlt    
<nmethod compile_id='72' compiler='C1' level='3' entry='0x0000000112634ba0' size='792' address='0x0000000112634a50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='784' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='536' iicount='536' stamp='0.284'/>
<writer thread='7171'/>
<task_queued compile_id='74' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='640' iicount='640' level='3' stamp='0.284' comment='tiered' hot_count='640'/>
[Loaded com.intellij.rt.execution.application.AppMain$1 from file:/Applications/IntelliJ%20IDEA.app/Contents/lib/idea_rt.jar]
<task_queued compile_id='75' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.285' comment='tiered' hot_count='256'/>
Decoding compiled method 0x0000000112634d90:
Code:
[Entry Point]
  # {method} {0x0000000129d8c7d0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;sun/misc/Unsafe&apos;
<writer thread='22275'/>
[Loaded java.net.ServerSocket from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x0000000112634f00: mov    0x8(%rsi),%r10d
  0x0000000112634f04: shl    $0x3,%r10
  0x0000000112634f08: cmp    %r10,%rax
  0x0000000112634f0b: je     0x0000000112634f18
  0x0000000112634f11: jmpq   0x0000000112552e20  ;   {runtime_call}
  0x0000000112634f16: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000112634f18: mov    %eax,-0x14000(%rsp)
  0x0000000112634f1f: push   %rbp
  0x0000000112634f20: mov    %rsp,%rbp
  0x0000000112634f23: sub    $0x40,%rsp
  0x0000000112634f27: mov    %rdx,0x8(%rsp)
  0x0000000112634f2c: cmp    $0x0,%rdx
  0x0000000112634f30: lea    0x8(%rsp),%rdx
  0x0000000112634f35: cmove  0x8(%rsp),%rdx
  0x0000000112634f3b: mov    %rsi,(%rsp)
  0x0000000112634f3f: cmp    $0x0,%rsi
  0x0000000112634f43: lea    (%rsp),%rsi
  0x0000000112634f47: cmove  (%rsp),%rsi        ; OopMap{[8]=Oop [0]=Oop off=76}
  0x0000000112634f4c: movabs $0x112634f4c,%r10  ;   {section_word}
  0x0000000112634f56: mov    %r10,0x1e0(%r15)
  0x0000000112634f5d: mov    %rsp,0x1d8(%r15)
  0x0000000112634f64: cmpb   $0x0,-0x197c631(%rip)        # 0x0000000110cb893a
                                                ;   {external_word}
  0x0000000112634f6b: je     0x0000000112634fa7
  0x0000000112634f71: push   %rsi
  0x0000000112634f72: push   %rdx
  0x0000000112634f73: push   %rcx
  0x0000000112634f74: movabs $0x129d8c7d0,%rsi  ;   {metadata({method} {0x0000000129d8c7d0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000112634f7e: mov    %r15,%rdi
  0x0000000112634f81: test   $0xf,%esp
  0x0000000112634f87: je     0x0000000112634f9f
  0x0000000112634f8d: sub    $0x8,%rsp
  0x0000000112634f91: callq  0x00000001108c8f0c  ;   {runtime_call}
  0x0000000112634f96: add    $0x8,%rsp
  0x0000000112634f9a: jmpq   0x0000000112634fa4
  0x0000000112634f9f: callq  0x00000001108c8f0c  ;   {runtime_call}
  0x0000000112634fa4: pop    %rcx
  0x0000000112634fa5: pop    %rdx
  0x0000000112634fa6: pop    %rsi
  0x0000000112634fa7: lea    0x1f8(%r15),%rdi
  0x0000000112634fae: movl   $0x4,0x270(%r15)
  0x0000000112634fb9: callq  0x000000011095d5d2  ;   {runtime_call}
  0x0000000112634fbe: vzeroupper 
  0x0000000112634fc1: movl   $0x5,0x270(%r15)
  0x0000000112634fcc: lock addl $0x0,(%rsp)
  0x0000000112634fd1: cmpl   $0x0,-0x197211b(%rip)        # 0x0000000110cc2ec0
                                                ;   {external_word}
  0x0000000112634fdb: jne    0x0000000112634fef
  0x0000000112634fe1: cmpl   $0x0,0x30(%r15)
  0x0000000112634fe9: je     0x0000000112635010
  0x0000000112634fef: mov    %rax,-0x8(%rbp)
  0x0000000112634ff3: mov    %r15,%rdi
  0x0000000112634ff6: mov    %rsp,%r12
  0x0000000112634ff9: sub    $0x0,%rsp
  0x0000000112634ffd: and    $0xfffffffffffffff0,%rsp
  0x0000000112635001: callq  0x0000000110948d80  ;   {runtime_call}
  0x0000000112635006: mov    %r12,%rsp
  0x0000000112635009: xor    %r12,%r12
  0x000000011263500c: mov    -0x8(%rbp),%rax
  0x0000000112635010: movl   $0x8,0x270(%r15)
  0x000000011263501b: cmpl   $0x1,0x29c(%r15)
  0x0000000112635026: je     0x00000001126350c2
  0x000000011263502c: cmpb   $0x0,-0x197c6f9(%rip)        # 0x0000000110cb893a
                                                ;   {external_word}
  0x0000000112635033: je     0x0000000112635071
  0x0000000112635039: mov    %rax,-0x8(%rbp)
  0x000000011263503d: movabs $0x129d8c7d0,%rsi  ;   {metadata({method} {0x0000000129d8c7d0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000112635047: mov    %r15,%rdi
  0x000000011263504a: test   $0xf,%esp
  0x0000000112635050: je     0x0000000112635068
  0x0000000112635056: sub    $0x8,%rsp
  0x000000011263505a: callq  0x00000001108c8e7e  ;   {runtime_call}
  0x000000011263505f: add    $0x8,%rsp
  0x0000000112635063: jmpq   0x000000011263506d
  0x0000000112635068: callq  0x00000001108c8e7e  ;   {runtime_call}
  0x000000011263506d: mov    -0x8(%rbp),%rax
  0x0000000112635071: movabs $0x0,%r10
  0x000000011263507b: mov    %r10,0x1d8(%r15)
  0x0000000112635082: movabs $0x0,%r10
  0x000000011263508c: mov    %r10,0x1e0(%r15)
  0x0000000112635093: test   %rax,%rax
  0x0000000112635096: je     0x000000011263509f
  0x000000011263509c: mov    (%rax),%rax
  0x000000011263509f: mov    0x38(%r15),%rcx
  0x00000001126350a3: movl   $0x0,0x100(%rcx)
  0x00000001126350ad: leaveq 
  0x00000001126350ae: cmpq   $0x0,0x8(%r15)
  0x00000001126350b6: jne    0x00000001126350bd
  0x00000001126350bc: retq   
  0x00000001126350bd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000001126350c2: mov    %rax,-0x8(%rbp)
  0x00000001126350c6: mov    %rsp,%r12
  0x00000001126350c9: sub    $0x0,%rsp
  0x00000001126350cd: and    $0xfffffffffffffff0,%rsp
  0x00000001126350d1: callq  0x00000001108c6cf0  ;   {runtime_call}
  0x00000001126350d6: mov    %r12,%rsp
  0x00000001126350d9: xor    %r12,%r12
  0x00000001126350dc: mov    -0x8(%rbp),%rax
  0x00000001126350e0: jmpq   0x000000011263502c
  0x00000001126350e5: hlt    
  0x00000001126350e6: hlt    
  0x00000001126350e7: hlt    
<nmethod compile_id='76' compile_kind='c2n' level='0' entry='0x0000000112634f00' size='856' address='0x0000000112634d90' relocation_offset='296' consts_offset='856' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='384' iicount='384' stamp='0.286'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112635110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x00000001126352c0: mov    %eax,-0x14000(%rsp)
  0x00000001126352c7: push   %rbp
  0x00000001126352c8: sub    $0x40,%rsp
  0x00000001126352cc: mov    %edx,0x20(%rsp)
  0x00000001126352d0: mov    %edi,0x24(%rsp)
  0x00000001126352d4: movabs $0x129f8b0d8,%rax  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126352de: mov    0xdc(%rax),%ebx
  0x00000001126352e4: add    $0x8,%ebx
  0x00000001126352e7: mov    %ebx,0xdc(%rax)
  0x00000001126352ed: movabs $0x129d127a8,%rax  ;   {metadata({method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126352f7: and    $0x1ff8,%ebx
  0x00000001126352fd: cmp    $0x0,%ebx
  0x0000000112635300: je     0x0000000112635794  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1744)

  0x0000000112635306: mov    0x50(%rsp),%eax
  0x000000011263530a: cmp    %ecx,%eax
  0x000000011263530c: movabs $0x129f8b0d8,%rbx  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635316: movabs $0x108,%r11
  0x0000000112635320: jl     0x0000000112635330
  0x0000000112635326: movabs $0x118,%r11
  0x0000000112635330: mov    (%rbx,%r11,1),%r13
  0x0000000112635334: lea    0x1(%r13),%r13
  0x0000000112635338: mov    %r13,(%rbx,%r11,1)
  0x000000011263533c: jl     0x0000000112635380  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1744)

  0x0000000112635342: cmp    $0x0,%edi
  0x0000000112635345: movabs $0x129f8b0d8,%rax  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263534f: movabs $0x128,%rsi
  0x0000000112635359: jne    0x0000000112635369
  0x000000011263535f: movabs $0x138,%rsi
  0x0000000112635369: mov    (%rax,%rsi,1),%rdi
  0x000000011263536d: lea    0x1(%rdi),%rdi
  0x0000000112635371: mov    %rdi,(%rax,%rsi,1)
  0x0000000112635375: jne    0x0000000112635780
  0x000000011263537b: jmpq   0x000000011263576b  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1745)

  0x0000000112635380: cmp    $0x0,%eax
  0x0000000112635383: movabs $0x129f8b0d8,%rbx  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263538d: movabs $0x160,%r11
  0x0000000112635397: jge    0x00000001126353a7
  0x000000011263539d: movabs $0x170,%r11
  0x00000001126353a7: mov    (%rbx,%r11,1),%r13
  0x00000001126353ab: lea    0x1(%r13),%r13
  0x00000001126353af: mov    %r13,(%rbx,%r11,1)
  0x00000001126353b3: jge    0x00000001126353be  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1747)

  0x00000001126353b9: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1750)

  0x00000001126353be: cmp    $0x0,%edi
  0x00000001126353c1: movabs $0x129f8b0d8,%rbx  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126353cb: movabs $0x180,%r11
  0x00000001126353d5: jne    0x00000001126353e5
  0x00000001126353db: movabs $0x190,%r11
  0x00000001126353e5: mov    (%rbx,%r11,1),%r13
  0x00000001126353e9: lea    0x1(%r13),%r13
  0x00000001126353ed: mov    %r13,(%rbx,%r11,1)
  0x00000001126353f1: je     0x000000011263575f  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1750)

  0x00000001126353f7: movslq %r9d,%rbx
  0x00000001126353fa: cmp    0xc(%r8),%r9d      ; implicit exception: dispatches to 0x00000001126357ab
  0x00000001126353fe: jae    0x00000001126357b5
  0x0000000112635404: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)

  0x000000011263540a: mov    %ebx,0x28(%rsp)
  0x000000011263540e: sub    %edi,%ecx
  0x0000000112635410: add    %edx,%ecx
  0x0000000112635412: add    %edx,%eax
  0x0000000112635414: nopl   0x0(%rax)
  0x0000000112635418: cmp    %ecx,%eax
  0x000000011263541a: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635424: movabs $0x1a0,%r13
  0x000000011263542e: jg     0x000000011263543e
  0x0000000112635434: movabs $0x1b0,%r13
  0x000000011263543e: mov    (%r11,%r13,1),%r14
  0x0000000112635442: lea    0x1(%r14),%r14
  0x0000000112635446: mov    %r14,(%r11,%r13,1)
  0x000000011263544a: jg     0x000000011263574e  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1757)

  0x0000000112635450: movslq %eax,%r11
  0x0000000112635453: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000001126357be
  0x0000000112635456: jae    0x00000001126357c8
  0x000000011263545c: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)

  0x0000000112635462: cmp    %ebx,%r11d
  0x0000000112635465: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263546f: movabs $0x1c0,%r13
  0x0000000112635479: je     0x0000000112635489
  0x000000011263547f: movabs $0x1d0,%r13
  0x0000000112635489: mov    (%r11,%r13,1),%r14
  0x000000011263548d: lea    0x1(%r14),%r14
  0x0000000112635491: mov    %r14,(%r11,%r13,1)
  0x0000000112635495: je     0x0000000112635573
  0x000000011263549b: jmpq   0x0000000112635539  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1759)

  0x00000001126354a0: movslq %eax,%r11
  0x00000001126354a3: cmp    0xc(%rsi),%eax
  0x00000001126354a6: jae    0x00000001126357d1
  0x00000001126354ac: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1760)

  0x00000001126354b2: cmp    %ebx,%r11d
  0x00000001126354b5: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126354bf: movabs $0x200,%r13
  0x00000001126354c9: je     0x00000001126354d9
  0x00000001126354cf: movabs $0x210,%r13
  0x00000001126354d9: mov    (%r11,%r13,1),%r14
  0x00000001126354dd: lea    0x1(%r14),%r14
  0x00000001126354e1: mov    %r14,(%r11,%r13,1)
  0x00000001126354e5: je     0x0000000112635573  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1760)

  0x00000001126354eb: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126354f5: mov    0xe0(%r11),%r13d
  0x00000001126354fc: add    $0x8,%r13d
  0x0000000112635500: mov    %r13d,0xe0(%r11)
  0x0000000112635507: movabs $0x129d127a8,%r11  ;   {metadata({method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635511: and    $0xfff8,%r13d
  0x0000000112635518: cmp    $0x0,%r13d
  0x000000011263551c: je     0x00000001126357da  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)

  0x0000000112635522: test   %eax,-0x33e5428(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112635528: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635532: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)

  0x0000000112635539: inc    %eax
  0x000000011263553b: cmp    %ecx,%eax
  0x000000011263553d: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635547: movabs $0x1e0,%r13
  0x0000000112635551: jg     0x0000000112635561
  0x0000000112635557: movabs $0x1f0,%r13
  0x0000000112635561: mov    (%r11,%r13,1),%r14
  0x0000000112635565: lea    0x1(%r14),%r14
  0x0000000112635569: mov    %r14,(%r11,%r13,1)
  0x000000011263556d: jle    0x00000001126354a0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1760)

  0x0000000112635573: cmp    %ecx,%eax
  0x0000000112635575: movabs $0x129f8b0d8,%r11  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263557f: movabs $0x238,%r13
  0x0000000112635589: jg     0x0000000112635599
  0x000000011263558f: movabs $0x248,%r13
  0x0000000112635599: mov    (%r11,%r13,1),%r14
  0x000000011263559d: lea    0x1(%r14),%r14
  0x00000001126355a1: mov    %r14,(%r11,%r13,1)
  0x00000001126355a5: jg     0x00000001126356e5  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1764)

  0x00000001126355ab: mov    %rax,%r11
  0x00000001126355ae: inc    %r11d
  0x00000001126355b1: mov    %r11,%r13
  0x00000001126355b4: add    %edi,%r13d
  0x00000001126355b7: dec    %r13d
  0x00000001126355ba: mov    %r9,%r14
  0x00000001126355bd: inc    %r14d
  0x00000001126355c0: jmpq   0x0000000112635673  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1767)

  0x00000001126355c5: data32 xchg %ax,%ax
  0x00000001126355c8: movslq %r11d,%rdi
  0x00000001126355cb: cmp    0xc(%rsi),%r11d
  0x00000001126355cf: jae    0x00000001126357f1
  0x00000001126355d5: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1767)

  0x00000001126355da: movslq %r14d,%rbx
  0x00000001126355dd: cmp    0xc(%r8),%r14d
  0x00000001126355e1: jae    0x00000001126357fa
  0x00000001126355e7: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1767)

  0x00000001126355ed: cmp    %ebx,%edi
  0x00000001126355ef: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126355f9: movabs $0x278,%rbx
  0x0000000112635603: jne    0x0000000112635613
  0x0000000112635609: movabs $0x288,%rbx
  0x0000000112635613: mov    (%rdi,%rbx,1),%rdx
  0x0000000112635617: lea    0x1(%rdx),%rdx
  0x000000011263561b: mov    %rdx,(%rdi,%rbx,1)
  0x000000011263561f: jne    0x00000001126356ac  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1767)

  0x0000000112635625: inc    %r11d
  0x0000000112635628: inc    %r14d
  0x000000011263562b: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635635: mov    0xe0(%rdi),%ebx
  0x000000011263563b: add    $0x8,%ebx
  0x000000011263563e: mov    %ebx,0xe0(%rdi)
  0x0000000112635644: movabs $0x129d127a8,%rdi  ;   {metadata({method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263564e: and    $0xfff8,%ebx
  0x0000000112635654: cmp    $0x0,%ebx
  0x0000000112635657: je     0x0000000112635803  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)

  0x000000011263565d: test   %eax,-0x33e5563(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x0000000112635663: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263566d: incl   0x298(%rdi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)

  0x0000000112635673: cmp    %r13d,%r11d
  0x0000000112635676: movabs $0x129f8b0d8,%rdx  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635680: movabs $0x258,%rdi
  0x000000011263568a: jge    0x000000011263569a
  0x0000000112635690: movabs $0x268,%rdi
  0x000000011263569a: mov    (%rdx,%rdi,1),%rbx
  0x000000011263569e: lea    0x1(%rbx),%rbx
  0x00000001126356a2: mov    %rbx,(%rdx,%rdi,1)
  0x00000001126356a6: jl     0x00000001126355c8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1767)

  0x00000001126356ac: cmp    %r13d,%r11d
  0x00000001126356af: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126356b9: movabs $0x2b0,%rbx
  0x00000001126356c3: jne    0x00000001126356d3
  0x00000001126356c9: movabs $0x2c0,%rbx
  0x00000001126356d3: mov    (%rdi,%rbx,1),%rdx
  0x00000001126356d7: lea    0x1(%rdx),%rdx
  0x00000001126356db: mov    %rdx,(%rdi,%rbx,1)
  0x00000001126356df: je     0x000000011263573c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1770)

  0x00000001126356e5: inc    %eax
  0x00000001126356e7: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000001126356f1: mov    0xe0(%rdi),%ebx
  0x00000001126356f7: add    $0x8,%ebx
  0x00000001126356fa: mov    %ebx,0xe0(%rdi)
  0x0000000112635700: movabs $0x129d127a8,%rdi  ;   {metadata({method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011263570a: and    $0xfff8,%ebx
  0x0000000112635710: cmp    $0x0,%ebx
  0x0000000112635713: je     0x000000011263581a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)

  0x0000000112635719: test   %eax,-0x33e561f(%rip)        # 0x000000010f250100
                                                ;   {poll}
  0x000000011263571f: movabs $0x129f8b0d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635729: incl   0x2d0(%rdi)
  0x000000011263572f: mov    0x28(%rsp),%ebx
  0x0000000112635733: mov    0x24(%rsp),%edi
  0x0000000112635737: jmpq   0x0000000112635418  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)

  0x000000011263573c: mov    0x20(%rsp),%edx
  0x0000000112635740: sub    %edx,%eax
  0x0000000112635742: add    $0x40,%rsp
  0x0000000112635746: pop    %rbp
  0x0000000112635747: test   %eax,-0x33e564d(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263574d: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1772)

  0x000000011263574e: mov    $0xffffffff,%eax
  0x0000000112635753: add    $0x40,%rsp
  0x0000000112635757: pop    %rbp
  0x0000000112635758: test   %eax,-0x33e565e(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263575e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1776)

  0x000000011263575f: add    $0x40,%rsp
  0x0000000112635763: pop    %rbp
  0x0000000112635764: test   %eax,-0x33e566a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x000000011263576a: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1751)

  0x000000011263576b: movabs $0x129f8b0d8,%rax  ;   {metadata(method data for {method} {0x0000000129d127a8} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000112635775: incl   0x148(%rax)
  0x000000011263577b: jmpq   0x0000000112635785  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1745)

  0x0000000112635780: mov    $0xffffffff,%ecx   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1745)

  0x0000000112635785: mov    %rcx,%rax
  0x0000000112635788: add    $0x40,%rsp
  0x000000011263578c: pop    %rbp
  0x000000011263578d: test   %eax,-0x33e5693(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112635793: retq   
  0x0000000112635794: mov    %rax,0x8(%rsp)
  0x0000000112635799: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126357a1: callq  0x000000011260aea0  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1744)
                                                ;   {runtime_call}
  0x00000001126357a6: jmpq   0x0000000112635306
  0x00000001126357ab: callq  0x00000001126072c0  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000001126357b0: callq  0x00000001126072c0  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000001126357b5: mov    %r9,(%rsp)
  0x00000001126357b9: callq  0x0000000112606c00  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000001126357be: callq  0x00000001126072c0  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000001126357c3: callq  0x00000001126072c0  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000001126357c8: mov    %rax,(%rsp)
  0x00000001126357cc: callq  0x0000000112606c00  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000001126357d1: mov    %rax,(%rsp)
  0x00000001126357d5: callq  0x0000000112606c00  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1760)
                                                ;   {runtime_call}
  0x00000001126357da: mov    %r11,0x8(%rsp)
  0x00000001126357df: movq   $0x58,(%rsp)
  0x00000001126357e7: callq  0x000000011260aea0  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)
                                                ;   {runtime_call}
  0x00000001126357ec: jmpq   0x0000000112635522
  0x00000001126357f1: mov    %r11,(%rsp)
  0x00000001126357f5: callq  0x0000000112606c00  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1767)
                                                ;   {runtime_call}
  0x00000001126357fa: mov    %r14,(%rsp)
  0x00000001126357fe: callq  0x0000000112606c00  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1767)
                                                ;   {runtime_call}
  0x0000000112635803: mov    %rdi,0x8(%rsp)
  0x0000000112635808: movq   $0x8f,(%rsp)
  0x0000000112635810: callq  0x000000011260aea0  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)
                                                ;   {runtime_call}
  0x0000000112635815: jmpq   0x000000011263565d
  0x000000011263581a: mov    %rdi,0x8(%rsp)
  0x000000011263581f: movq   $0xa1,(%rsp)
  0x0000000112635827: callq  0x000000011260aea0  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)
                                                ;   {runtime_call}
  0x000000011263582c: jmpq   0x0000000112635719
  0x0000000112635831: nop
  0x0000000112635832: nop
  0x0000000112635833: mov    0x2a8(%r15),%rax
  0x000000011263583a: movabs $0x0,%r10
  0x0000000112635844: mov    %r10,0x2a8(%r15)
  0x000000011263584b: movabs $0x0,%r10
  0x0000000112635855: mov    %r10,0x2b0(%r15)
  0x000000011263585c: add    $0x40,%rsp
  0x0000000112635860: pop    %rbp
  0x0000000112635861: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112635866: hlt    
  0x0000000112635867: hlt    
  0x0000000112635868: hlt    
  0x0000000112635869: hlt    
  0x000000011263586a: hlt    
  0x000000011263586b: hlt    
  0x000000011263586c: hlt    
  0x000000011263586d: hlt    
  0x000000011263586e: hlt    
  0x000000011263586f: hlt    
  0x0000000112635870: hlt    
  0x0000000112635871: hlt    
  0x0000000112635872: hlt    
  0x0000000112635873: hlt    
  0x0000000112635874: hlt    
  0x0000000112635875: hlt    
  0x0000000112635876: hlt    
  0x0000000112635877: hlt    
  0x0000000112635878: hlt    
  0x0000000112635879: hlt    
  0x000000011263587a: hlt    
  0x000000011263587b: hlt    
  0x000000011263587c: hlt    
  0x000000011263587d: hlt    
  0x000000011263587e: hlt    
  0x000000011263587f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000112635880: callq  0x000000011260bf60  ;   {no_reloc}
  0x0000000112635885: mov    %rsp,-0x28(%rsp)
  0x000000011263588a: sub    $0x80,%rsp
  0x0000000112635891: mov    %rax,0x78(%rsp)
  0x0000000112635896: mov    %rcx,0x70(%rsp)
  0x000000011263589b: mov    %rdx,0x68(%rsp)
  0x00000001126358a0: mov    %rbx,0x60(%rsp)
  0x00000001126358a5: mov    %rbp,0x50(%rsp)
  0x00000001126358aa: mov    %rsi,0x48(%rsp)
  0x00000001126358af: mov    %rdi,0x40(%rsp)
  0x00000001126358b4: mov    %r8,0x38(%rsp)
  0x00000001126358b9: mov    %r9,0x30(%rsp)
  0x00000001126358be: mov    %r10,0x28(%rsp)
  0x00000001126358c3: mov    %r11,0x20(%rsp)
  0x00000001126358c8: mov    %r12,0x18(%rsp)
  0x00000001126358cd: mov    %r13,0x10(%rsp)
  0x00000001126358d2: mov    %r14,0x8(%rsp)
  0x00000001126358d7: mov    %r15,(%rsp)
  0x00000001126358db: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x00000001126358e5: movabs $0x112635885,%rsi  ;   {internal_word}
  0x00000001126358ef: mov    %rsp,%rdx
  0x00000001126358f2: and    $0xfffffffffffffff0,%rsp
  0x00000001126358f6: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126358fb: hlt    
[Deopt Handler Code]
  0x00000001126358fc: movabs $0x1126358fc,%r10  ;   {section_word}
  0x0000000112635906: push   %r10
  0x0000000112635908: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263590d: hlt    
  0x000000011263590e: hlt    
  0x000000011263590f: hlt    
<nmethod compile_id='73' compiler='C1' level='3' entry='0x00000001126352c0' size='3232' address='0x0000000112635110' relocation_offset='296' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='138' backedge_count='9649' iicount='138' stamp='0.290'/>
<writer thread='7171'/>
<task_queued compile_id='77' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='384' iicount='384' level='3' stamp='0.290' comment='tiered' hot_count='384'/>
<writer thread='22275'/>
[Loaded java.net.SocksConsts from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112635dd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000112635f40: mov    %eax,-0x14000(%rsp)
  0x0000000112635f47: push   %rbp
  0x0000000112635f48: sub    $0x40,%rsp
  0x0000000112635f4c: movabs $0x129f8e478,%rcx  ;   {metadata(method data for {method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000112635f56: mov    0xdc(%rcx),%eax
  0x0000000112635f5c: add    $0x8,%eax
  0x0000000112635f5f: mov    %eax,0xdc(%rcx)
  0x0000000112635f65: movabs $0x129eb5e78,%rcx  ;   {metadata({method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000112635f6f: and    $0x1ff8,%eax
  0x0000000112635f75: cmp    $0x0,%eax
  0x0000000112635f78: je     0x0000000112636089  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000112635f7e: movslq %edx,%rdx
  0x0000000112635f81: mov    $0x2,%ecx
  0x0000000112635f86: shl    %cl,%rdx
  0x0000000112635f89: movabs $0x10,%r10
  0x0000000112635f93: add    %r10,%rdx
  0x0000000112635f96: mov    (%rsi,%rdx,1),%eax
  0x0000000112635f99: shl    $0x3,%rax
  0x0000000112635f9d: cmp    $0x0,%rax
  0x0000000112635fa1: jne    0x0000000112635fbc
  0x0000000112635fa3: movabs $0x129f8e478,%rdi  ;   {metadata(method data for {method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000112635fad: orl    $0x100,0x130(%rdi)
  0x0000000112635fb7: jmpq   0x000000011263607d
  0x0000000112635fbc: movabs $0x7c0034730,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000112635fc6: mov    0x8(%rax),%edi
  0x0000000112635fc9: shl    $0x3,%rdi
  0x0000000112635fcd: cmp    0x30(%rdi),%rbx
  0x0000000112635fd1: jne    0x0000000112636061
  0x0000000112635fd7: movabs $0x129f8e478,%rdi  ;   {metadata(method data for {method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000112635fe1: mov    0x8(%rax),%ebx
  0x0000000112635fe4: shl    $0x3,%rbx
  0x0000000112635fe8: cmp    0x140(%rdi),%rbx
  0x0000000112635fef: jne    0x0000000112635ffe
  0x0000000112635ff1: addq   $0x1,0x148(%rdi)
  0x0000000112635ff9: jmpq   0x000000011263607d
  0x0000000112635ffe: cmp    0x150(%rdi),%rbx
  0x0000000112636005: jne    0x0000000112636014
  0x0000000112636007: addq   $0x1,0x158(%rdi)
  0x000000011263600f: jmpq   0x000000011263607d
  0x0000000112636014: cmpq   $0x0,0x140(%rdi)
  0x000000011263601f: jne    0x0000000112636038
  0x0000000112636021: mov    %rbx,0x140(%rdi)
  0x0000000112636028: movq   $0x1,0x148(%rdi)
  0x0000000112636033: jmpq   0x000000011263607d
  0x0000000112636038: cmpq   $0x0,0x150(%rdi)
  0x0000000112636043: jne    0x000000011263605c
  0x0000000112636045: mov    %rbx,0x150(%rdi)
  0x000000011263604c: movq   $0x1,0x158(%rdi)
  0x0000000112636057: jmpq   0x000000011263607d
  0x000000011263605c: jmpq   0x000000011263607d
  0x0000000112636061: movabs $0x129f8e478,%rdi  ;   {metadata(method data for {method} {0x0000000129eb5e78} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x000000011263606b: subq   $0x1,0x138(%rdi)
  0x0000000112636073: jmpq   0x00000001126360a0
  0x0000000112636078: jmpq   0x000000011263607d  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x000000011263607d: add    $0x40,%rsp
  0x0000000112636081: pop    %rbp
  0x0000000112636082: test   %eax,-0x33e5f88(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112636088: retq   
  0x0000000112636089: mov    %rcx,0x8(%rsp)
  0x000000011263608e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112636096: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=347}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x000000011263609b: jmpq   0x0000000112635f7e
  0x00000001126360a0: mov    %rax,(%rsp)
  0x00000001126360a4: callq  0x000000011260c300  ; OopMap{off=361}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x00000001126360a9: nop
  0x00000001126360aa: nop
  0x00000001126360ab: mov    0x2a8(%r15),%rax
  0x00000001126360b2: movabs $0x0,%r10
  0x00000001126360bc: mov    %r10,0x2a8(%r15)
  0x00000001126360c3: movabs $0x0,%r10
  0x00000001126360cd: mov    %r10,0x2b0(%r15)
  0x00000001126360d4: add    $0x40,%rsp
  0x00000001126360d8: pop    %rbp
  0x00000001126360d9: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126360de: hlt    
  0x00000001126360df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001126360e0: callq  0x000000011260bf60  ;   {no_reloc}
  0x00000001126360e5: mov    %rsp,-0x28(%rsp)
  0x00000001126360ea: sub    $0x80,%rsp
  0x00000001126360f1: mov    %rax,0x78(%rsp)
  0x00000001126360f6: mov    %rcx,0x70(%rsp)
  0x00000001126360fb: mov    %rdx,0x68(%rsp)
  0x0000000112636100: mov    %rbx,0x60(%rsp)
  0x0000000112636105: mov    %rbp,0x50(%rsp)
  0x000000011263610a: mov    %rsi,0x48(%rsp)
  0x000000011263610f: mov    %rdi,0x40(%rsp)
  0x0000000112636114: mov    %r8,0x38(%rsp)
  0x0000000112636119: mov    %r9,0x30(%rsp)
  0x000000011263611e: mov    %r10,0x28(%rsp)
  0x0000000112636123: mov    %r11,0x20(%rsp)
  0x0000000112636128: mov    %r12,0x18(%rsp)
  0x000000011263612d: mov    %r13,0x10(%rsp)
  0x0000000112636132: mov    %r14,0x8(%rsp)
  0x0000000112636137: mov    %r15,(%rsp)
  0x000000011263613b: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112636145: movabs $0x1126360e5,%rsi  ;   {internal_word}
  0x000000011263614f: mov    %rsp,%rdx
  0x0000000112636152: and    $0xfffffffffffffff0,%rsp
  0x0000000112636156: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263615b: hlt    
[Deopt Handler Code]
  0x000000011263615c: movabs $0x11263615c,%r10  ;   {section_word}
  0x0000000112636166: push   %r10
  0x0000000112636168: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x000000011263616d: hlt    
  0x000000011263616e: hlt    
  0x000000011263616f: hlt    
<nmethod compile_id='75' compiler='C1' level='3' entry='0x0000000112635f40' size='1080' address='0x0000000112635dd0' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='936' scopes_pcs_offset='976' dependencies_offset='1072' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='390' iicount='390' stamp='0.292'/>
<writer thread='7171'/>
<task_queued compile_id='78' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='512' iicount='512' level='3' stamp='0.292' comment='tiered' hot_count='512'/>
<task_queued compile_id='79' method='java/lang/AbstractStringBuilder expandCapacity (I)V' bytes='50' count='470' iicount='470' level='3' stamp='0.292' comment='tiered' hot_count='470'/>
<writer thread='20739'/>
Decoding compiled method 0x0000000112636250:
Code:
<writer thread='7171'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
[Entry Point]
[Constants]
  # {method} {0x0000000129d11e58} &apos;startsWith&apos; 
<writer thread='22275'/>
[Loaded java.net.SocketOptions from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
&apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000001126363c0: mov    0x8(%rsi),%r10d
  0x00000001126363c4: shl    $0x3,%r10
  0x00000001126363c8: cmp    %rax,%r10
  0x00000001126363cb: jne    0x0000000112552e20  ;   {runtime_call}
  0x00000001126363d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001126363dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001126363e0: mov    %eax,-0x14000(%rsp)
  0x00000001126363e7: push   %rbp
  0x00000001126363e8: sub    $0x30,%rsp
  0x00000001126363ec: movabs $0x129f928d8,%rcx  ;   {metadata(method data for {method} {0x0000000129d11e58} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000001126363f6: mov    0xdc(%rcx),%edi
  0x00000001126363fc: add    $0x8,%edi
  0x00000001126363ff: mov    %edi,0xdc(%rcx)
  0x0000000112636405: movabs $0x129d11e58,%rcx  ;   {metadata({method} {0x0000000129d11e58} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011263640f: and    $0x1ff8,%edi
  0x0000000112636415: cmp    $0x0,%edi
  0x0000000112636418: je     0x00000001126364c8  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1422)

  0x000000011263641e: mov    %rsi,%rcx
  0x0000000112636421: movabs $0x129f928d8,%rdi  ;   {metadata(method data for {method} {0x0000000129d11e58} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011263642b: mov    0x8(%rcx),%ecx
  0x000000011263642e: shl    $0x3,%rcx
  0x0000000112636432: cmp    0x110(%rdi),%rcx
  0x0000000112636439: jne    0x0000000112636448
  0x000000011263643b: addq   $0x1,0x118(%rdi)
  0x0000000112636443: jmpq   0x00000001126364ae
  0x0000000112636448: cmp    0x120(%rdi),%rcx
  0x000000011263644f: jne    0x000000011263645e
  0x0000000112636451: addq   $0x1,0x128(%rdi)
  0x0000000112636459: jmpq   0x00000001126364ae
  0x000000011263645e: cmpq   $0x0,0x110(%rdi)
  0x0000000112636469: jne    0x0000000112636482
  0x000000011263646b: mov    %rcx,0x110(%rdi)
  0x0000000112636472: movq   $0x1,0x118(%rdi)
  0x000000011263647d: jmpq   0x00000001126364ae
  0x0000000112636482: cmpq   $0x0,0x120(%rdi)
  0x000000011263648d: jne    0x00000001126364a6
  0x000000011263648f: mov    %rcx,0x120(%rdi)
  0x0000000112636496: movq   $0x1,0x128(%rdi)
  0x00000001126364a1: jmpq   0x00000001126364ae
  0x00000001126364a6: addq   $0x1,0x108(%rdi)
  0x00000001126364ae: mov    $0x0,%ecx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1422)

  0x00000001126364b3: nop
  0x00000001126364b4: nop
  0x00000001126364b5: nop
  0x00000001126364b6: nop
  0x00000001126364b7: callq  0x0000000112553020  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1422)
                                                ;   {optimized virtual_call}
  0x00000001126364bc: add    $0x30,%rsp
  0x00000001126364c0: pop    %rbp
  0x00000001126364c1: test   %eax,-0x33e63c7(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x00000001126364c7: retq   
  0x00000001126364c8: mov    %rcx,0x8(%rsp)
  0x00000001126364cd: movq   $0xffffffffffffffff,(%rsp)
  0x00000001126364d5: callq  0x000000011260aea0  ; OopMap{rsi=Oop rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1422)
                                                ;   {runtime_call}
  0x00000001126364da: jmpq   0x000000011263641e
  0x00000001126364df: nop
  0x00000001126364e0: nop
  0x00000001126364e1: mov    0x2a8(%r15),%rax
  0x00000001126364e8: movabs $0x0,%r10
  0x00000001126364f2: mov    %r10,0x2a8(%r15)
  0x00000001126364f9: movabs $0x0,%r10
  0x0000000112636503: mov    %r10,0x2b0(%r15)
  0x000000011263650a: add    $0x30,%rsp
  0x000000011263650e: pop    %rbp
  0x000000011263650f: jmpq   0x0000000112606860  ;   {runtime_call}
  0x0000000112636514: hlt    
  0x0000000112636515: hlt    
  0x0000000112636516: hlt    
  0x0000000112636517: hlt    
  0x0000000112636518: hlt    
  0x0000000112636519: hlt    
  0x000000011263651a: hlt    
  0x000000011263651b: hlt    
  0x000000011263651c: hlt    
  0x000000011263651d: hlt    
  0x000000011263651e: hlt    
  0x000000011263651f: hlt    
[Stub Code]
  0x0000000112636520: nop                       ;   {no_reloc}
  0x0000000112636521: nop
  0x0000000112636522: nop
  0x0000000112636523: nop
  0x0000000112636524: nop
  0x0000000112636525: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011263652f: jmpq   0x000000011263652f  ;   {runtime_call}
[Exception Handler]
  0x0000000112636534: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112636539: mov    %rsp,-0x28(%rsp)
  0x000000011263653e: sub    $0x80,%rsp
  0x0000000112636545: mov    %rax,0x78(%rsp)
  0x000000011263654a: mov    %rcx,0x70(%rsp)
  0x000000011263654f: mov    %rdx,0x68(%rsp)
  0x0000000112636554: mov    %rbx,0x60(%rsp)
  0x0000000112636559: mov    %rbp,0x50(%rsp)
  0x000000011263655e: mov    %rsi,0x48(%rsp)
  0x0000000112636563: mov    %rdi,0x40(%rsp)
  0x0000000112636568: mov    %r8,0x38(%rsp)
  0x000000011263656d: mov    %r9,0x30(%rsp)
  0x0000000112636572: mov    %r10,0x28(%rsp)
  0x0000000112636577: mov    %r11,0x20(%rsp)
  0x000000011263657c: mov    %r12,0x18(%rsp)
  0x0000000112636581: mov    %r13,0x10(%rsp)
  0x0000000112636586: mov    %r14,0x8(%rsp)
  0x000000011263658b: mov    %r15,(%rsp)
  0x000000011263658f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112636599: movabs $0x112636539,%rsi  ;   {internal_word}
  0x00000001126365a3: mov    %rsp,%rdx
  0x00000001126365a6: and    $0xfffffffffffffff0,%rsp
  0x00000001126365aa: callq  0x00000001107e93ec  ;   {runtime_call}
  0x00000001126365af: hlt    
[Deopt Handler Code]
  0x00000001126365b0: movabs $0x1126365b0,%r10  ;   {section_word}
  0x00000001126365ba: push   %r10
  0x00000001126365bc: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x00000001126365c1: hlt    
  0x00000001126365c2: hlt    
  0x00000001126365c3: hlt    
  0x00000001126365c4: hlt    
  0x00000001126365c5: hlt    
  0x00000001126365c6: hlt    
  0x00000001126365c7: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x00000001126363c0' size='1040' address='0x0000000112636250' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='484' iicount='484' stamp='0.293'/>
<writer thread='22275'/>
[Loaded java.net.SocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.PlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
Decoding compiled method 0x0000000112636a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xa0]  (sp of caller)
  0x0000000112636c40: mov    0x8(%rsi),%r10d
  0x0000000112636c44: shl    $0x3,%r10
  0x0000000112636c48: cmp    %rax,%r10
  0x0000000112636c4b: jne    0x0000000112552e20  ;   {runtime_call}
  0x0000000112636c51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000112636c5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000112636c60: mov    %eax,-0x14000(%rsp)
  0x0000000112636c67: push   %rbp
  0x0000000112636c68: sub    $0x90,%rsp
  0x0000000112636c6f: movabs $0x129f04a80,%rbx  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636c79: mov    0xdc(%rbx),%edi
  0x0000000112636c7f: add    $0x8,%edi
  0x0000000112636c82: mov    %edi,0xdc(%rbx)
  0x0000000112636c88: movabs $0x129d81240,%rbx  ;   {metadata({method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636c92: and    $0x1ff8,%edi
  0x0000000112636c98: cmp    $0x0,%edi
  0x0000000112636c9b: je     0x0000000112637009  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@0 (line 129)

  0x0000000112636ca1: mov    0x10(%rsi),%r8d
  0x0000000112636ca5: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@1 (line 129)

  0x0000000112636ca9: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@4 (line 129)
                                                ; implicit exception: dispatches to 0x0000000112637020
  0x0000000112636cad: mov    %r9,%rbx
  0x0000000112636cb0: shl    %ebx
  0x0000000112636cb2: add    $0x2,%ebx
  0x0000000112636cb5: mov    %rbx,%rdi
  0x0000000112636cb8: sub    %edx,%edi
  0x0000000112636cba: cmp    $0x0,%edi
  0x0000000112636cbd: movabs $0x129f04a80,%rdi  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636cc7: movabs $0x108,%rax
  0x0000000112636cd1: jge    0x0000000112636ce1
  0x0000000112636cd7: movabs $0x118,%rax
  0x0000000112636ce1: mov    (%rdi,%rax,1),%rcx
  0x0000000112636ce5: lea    0x1(%rcx),%rcx
  0x0000000112636ce9: mov    %rcx,(%rdi,%rax,1)
  0x0000000112636ced: jge    0x0000000112636cf6  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)

  0x0000000112636cf3: mov    %rdx,%rbx          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)

  0x0000000112636cf6: cmp    $0x0,%ebx
  0x0000000112636cf9: movabs $0x129f04a80,%rdi  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636d03: movabs $0x128,%rax
  0x0000000112636d0d: jge    0x0000000112636d1d
  0x0000000112636d13: movabs $0x138,%rax
  0x0000000112636d1d: mov    (%rdi,%rax,1),%rcx
  0x0000000112636d21: lea    0x1(%rcx),%rcx
  0x0000000112636d25: mov    %rcx,(%rdi,%rax,1)
  0x0000000112636d29: jl     0x0000000112636d37  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)

  0x0000000112636d2f: mov    %rbx,%r11
  0x0000000112636d32: jmpq   0x0000000112636d76  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)

  0x0000000112636d37: cmp    $0x0,%edx
  0x0000000112636d3a: movabs $0x129f04a80,%rbx  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636d44: movabs $0x148,%rdx
  0x0000000112636d4e: jge    0x0000000112636d5e
  0x0000000112636d54: movabs $0x158,%rdx
  0x0000000112636d5e: mov    (%rbx,%rdx,1),%rdi
  0x0000000112636d62: lea    0x1(%rdi),%rdi
  0x0000000112636d66: mov    %rdi,(%rbx,%rdx,1)
  0x0000000112636d6a: jl     0x0000000112636f8b  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)

  0x0000000112636d70: mov    $0x7fffffff,%r11d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)

  0x0000000112636d76: mov    %rsi,0x70(%rsp)
  0x0000000112636d7b: movabs $0x129f04a80,%rbx  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636d85: addq   $0x1,0x178(%rbx)
  0x0000000112636d8d: movabs $0x129f99d30,%rbx  ;   {metadata(method data for {method} {0x0000000129e21f70} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000112636d97: mov    0xdc(%rbx),%edx
  0x0000000112636d9d: add    $0x8,%edx
  0x0000000112636da0: mov    %edx,0xdc(%rbx)
  0x0000000112636da6: movabs $0x129e21f70,%rbx  ;   {metadata({method} {0x0000000129e21f70} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000112636db0: and    $0x7ffff8,%edx
  0x0000000112636db6: cmp    $0x0,%edx
  0x0000000112636db9: je     0x0000000112637025
  0x0000000112636dbf: mov    %r11,%rbx
  0x0000000112636dc2: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000112636dcc: movslq %ebx,%rbx
  0x0000000112636dcf: mov    %rbx,%rdi
  0x0000000112636dd2: cmp    $0xffffff,%rbx
  0x0000000112636dd9: ja     0x000000011263703c
  0x0000000112636ddf: movabs $0x17,%rsi
  0x0000000112636de9: lea    (%rsi,%rbx,2),%rsi
  0x0000000112636ded: and    $0xfffffffffffffff8,%rsi
  0x0000000112636df1: mov    0x60(%r15),%rax
  0x0000000112636df5: lea    (%rax,%rsi,1),%rsi
  0x0000000112636df9: cmp    0x70(%r15),%rsi
  0x0000000112636dfd: ja     0x000000011263703c
  0x0000000112636e03: mov    %rsi,0x60(%r15)
  0x0000000112636e07: sub    %rax,%rsi
  0x0000000112636e0a: movq   $0x1,(%rax)
  0x0000000112636e11: mov    %rdx,%rcx
  0x0000000112636e14: shr    $0x3,%rcx
  0x0000000112636e18: mov    %ecx,0x8(%rax)
  0x0000000112636e1b: mov    %ebx,0xc(%rax)
  0x0000000112636e1e: sub    $0x10,%rsi
  0x0000000112636e22: je     0x0000000112636e39
  0x0000000112636e28: xor    %rbx,%rbx
  0x0000000112636e2b: shr    $0x3,%rsi
  0x0000000112636e2f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000112636e34: dec    %rsi
  0x0000000112636e37: jne    0x0000000112636e2f  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)

  0x0000000112636e39: movabs $0x129f99d30,%rsi  ;   {metadata(method data for {method} {0x0000000129e21f70} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000112636e43: addq   $0x1,0x108(%rsi)
  0x0000000112636e4b: movabs $0x129ecff78,%rsi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112636e55: mov    0xdc(%rsi),%edx
  0x0000000112636e5b: add    $0x8,%edx
  0x0000000112636e5e: mov    %edx,0xdc(%rsi)
  0x0000000112636e64: movabs $0x129de28e0,%rsi  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112636e6e: and    $0x7ffff8,%edx
  0x0000000112636e74: cmp    $0x0,%edx
  0x0000000112636e77: je     0x0000000112637046
  0x0000000112636e7d: cmp    %r11d,%r9d
  0x0000000112636e80: movabs $0x129ecff78,%rsi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112636e8a: movabs $0x108,%rdx
  0x0000000112636e94: jg     0x0000000112636ea4
  0x0000000112636e9a: movabs $0x118,%rdx
  0x0000000112636ea4: mov    (%rsi,%rdx,1),%rcx
  0x0000000112636ea8: lea    0x1(%rcx),%rcx
  0x0000000112636eac: mov    %rcx,(%rsi,%rdx,1)
  0x0000000112636eb0: jg     0x0000000112636ecb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)

  0x0000000112636eb6: movabs $0x129ecff78,%rsi  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112636ec0: incl   0x128(%rsi)
  0x0000000112636ec6: jmpq   0x0000000112636ece  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)

  0x0000000112636ecb: mov    %r11,%r9           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; -
<writer thread='22275'/>
[Loaded java.net.SocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
 java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)

  0x0000000112636ece: movabs $0x129f99d30,%rdx  ;   {metadata(method data for {method} {0x0000000129e21f70} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000112636ed8: addq   $0x1,0x118(%rdx)
  0x0000000112636ee0: mov    %r8,%rsi
  0x0000000112636ee3: mov    $0x0,%edx
  0x0000000112636ee8: mov    %rax,%rcx
  0x0000000112636eeb: mov    $0x0,%r8d
  0x0000000112636ef1: mov    %rax,0x78(%rsp)
  0x0000000112636ef6: lea    (%rdx,%r9,1),%rdi
  0x0000000112636efa: cmp    0xc(%rsi),%edi
  0x0000000112636efd: ja     0x000000011263705d
  0x0000000112636f03: lea    (%r8,%r9,1),%rdi
  0x0000000112636f07: cmp    0xc(%rcx),%edi
  0x0000000112636f0a: ja     0x000000011263705d
  0x0000000112636f10: test   %r9d,%r9d
  0x0000000112636f13: jl     0x000000011263705d
  0x0000000112636f19: je     0x0000000112636f55
  0x0000000112636f1f: movslq %edx,%rdx
  0x0000000112636f22: movslq %r8d,%r8
  0x0000000112636f25: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000112636f2a: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000112636f2f: mov    %r9,%rdx
  0x0000000112636f32: test   $0xf,%esp
  0x0000000112636f38: je     0x0000000112636f50
  0x0000000112636f3e: sub    $0x8,%rsp
  0x0000000112636f42: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000112636f47: add    $0x8,%rsp
  0x0000000112636f4b: jmpq   0x0000000112636f55
  0x0000000112636f50: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ;   {runtime_call}
  0x0000000112636f55: mov    0x78(%rsp),%rax
  0x0000000112636f5a: mov    0x70(%rsp),%rsi
  0x0000000112636f5f: mov    %rax,%r10
  0x0000000112636f62: shr    $0x3,%r10
  0x0000000112636f66: mov    %r10d,0x10(%rsi)
  0x0000000112636f6a: shr    $0x9,%rsi
  0x0000000112636f6e: movabs $0x10e129000,%rdx
  0x0000000112636f78: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)

  0x0000000112636f7c: add    $0x90,%rsp
  0x0000000112636f83: pop    %rbp
  0x0000000112636f84: test   %eax,-0x33e6e8a(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112636f8a: retq                      ;*return
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@49 (line 138)

  0x0000000112636f8b: nopl   0x0(%rax,%rax,1)
  0x0000000112636f90: jmpq   0x0000000112637078  ;   {no_reloc}
  0x0000000112636f95: add    %al,(%rax)
  0x0000000112636f97: add    %al,(%rax)
  0x0000000112636f99: add    %cl,-0x75(%rcx)
  0x0000000112636f9c: rex.RXB (bad) 
  0x0000000112636f9e: lea    0x20(%rax),%rdi
  0x0000000112636fa2: cmp    0x70(%r15),%rdi
  0x0000000112636fa6: ja     0x0000000112637082
  0x0000000112636fac: mov    %rdi,0x60(%r15)
  0x0000000112636fb0: mov    0xa8(%rdx),%rcx
  0x0000000112636fb7: mov    %rcx,(%rax)
  0x0000000112636fba: mov    %rdx,%rcx
  0x0000000112636fbd: shr    $0x3,%rcx
  0x0000000112636fc1: mov    %ecx,0x8(%rax)
  0x0000000112636fc4: xor    %rcx,%rcx
  0x0000000112636fc7: mov    %ecx,0xc(%rax)
  0x0000000112636fca: xor    %rcx,%rcx
  0x0000000112636fcd: mov    %rcx,0x10(%rax)
  0x0000000112636fd1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)

  0x0000000112636fd5: mov    %rax,%rsi
  0x0000000112636fd8: movabs $0x129f04a80,%rdi  ;   {metadata(method data for {method} {0x0000000129d81240} &apos;expandCapacity&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000112636fe2: addq   $0x1,0x168(%rdi)
  0x0000000112636fea: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@30 (line 134)

  0x0000000112636fed: mov    %rax,0x80(%rsp)
  0x0000000112636ff5: nop
  0x0000000112636ff6: nop
  0x0000000112636ff7: callq  0x0000000112553020  ; OopMap{[128]=Oop off=956}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@30 (line 134)
                                                ;   {optimized virtual_call}
  0x0000000112636ffc: mov    0x80(%rsp),%rax
  0x0000000112637004: jmpq   0x00000001126370ba
  0x0000000112637009: mov    %rbx,0x8(%rsp)
  0x000000011263700e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112637016: callq  0x000000011260aea0  ; OopMap{rsi=Oop off=987}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ;   {runtime_call}
  0x000000011263701b: jmpq   0x0000000112636ca1
  0x0000000112637020: callq  0x00000001126072c0  ; OopMap{rsi=Oop r8=Oop off=997}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@4 (line 129)
                                                ;   {runtime_call}
  0x0000000112637025: mov    %rbx,0x8(%rsp)
  0x000000011263702a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112637032: callq  0x000000011260aea0  ; OopMap{r8=Oop [112]=Oop off=1015}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ;   {runtime_call}
  0x0000000112637037: jmpq   0x0000000112636dbf
  0x000000011263703c: callq  0x0000000112609820  ; OopMap{r8=Oop [112]=Oop off=1025}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ;   {runtime_call}
  0x0000000112637041: jmpq   0x0000000112636e39
  0x0000000112637046: mov    %rsi,0x8(%rsp)
  0x000000011263704b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112637053: callq  0x000000011260aea0  ; OopMap{r8=Oop [112]=Oop rax=Oop off=1048}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ;   {runtime_call}
  0x0000000112637058: jmpq   0x0000000112636e7d
  0x000000011263705d: nop
  0x000000011263705e: nop
  0x000000011263705f: callq  0x0000000112553420  ; OopMap{[112]=Oop [120]=Oop off=1060}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ;   {static_call}
  0x0000000112637064: jmpq   0x0000000112636f55
  0x0000000112637069: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000112637073: mov    $0xa050f00,%eax
  0x0000000112637078: callq  0x00000001126082e0  ; OopMap{off=1085}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ;   {runtime_call}
  0x000000011263707d: jmpq   0x0000000112636f90
  0x0000000112637082: mov    %rdx,%rdx
  0x0000000112637085: callq  0x0000000112607a20  ; OopMap{off=1098}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ;   {runtime_call}
  0x000000011263708a: jmpq   0x0000000112636fd5
  0x000000011263708f: nop
  0x0000000112637090: nop
  0x0000000112637091: mov    0x2a8(%r15),%rax
  0x0000000112637098: movabs $0x0,%r10
  0x00000001126370a2: mov    %r10,0x2a8(%r15)
  0x00000001126370a9: movabs $0x0,%r10
  0x00000001126370b3: mov    %r10,0x2b0(%r15)
  0x00000001126370ba: add    $0x90,%rsp
  0x00000001126370c1: pop    %rbp
  0x00000001126370c2: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126370c7: hlt    
  0x00000001126370c8: hlt    
  0x00000001126370c9: hlt    
  0x00000001126370ca: hlt    
  0x00000001126370cb: hlt    
  0x00000001126370cc: hlt    
  0x00000001126370cd: hlt    
  0x00000001126370ce: hlt    
  0x00000001126370cf: hlt    
  0x00000001126370d0: hlt    
  0x00000001126370d1: hlt    
  0x00000001126370d2: hlt    
  0x00000001126370d3: hlt    
  0x00000001126370d4: hlt    
  0x00000001126370d5: hlt    
  0x00000001126370d6: hlt    
  0x00000001126370d7: hlt    
  0x00000001126370d8: hlt    
  0x00000001126370d9: hlt    
  0x00000001126370da: hlt    
  0x00000001126370db: hlt    
  0x00000001126370dc: hlt    
  0x00000001126370dd: hlt    
  0x00000001126370de: hlt    
  0x00000001126370df: hlt    
[Stub Code]
  0x00000001126370e0: nop                       ;   {no_reloc}
  0x00000001126370e1: nop
  0x00000001126370e2: nop
  0x00000001126370e3: nop
  0x00000001126370e4: nop
  0x00000001126370e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126370ef: jmpq   0x00000001126370ef  ;   {runtime_call}
  0x00000001126370f4: nop
  0x00000001126370f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126370ff: jmpq   0x00000001126370ff  ;   {runtime_call}
[Exception Handler]
  0x0000000112637104: callq  0x000000011260bf60  ;   {runtime_call}
  0x0000000112637109: mov    %rsp,-0x28(%rsp)
  0x000000011263710e: sub    $0x80,%rsp
  0x0000000112637115: mov    %rax,0x78(%rsp)
  0x000000011263711a: mov    %rcx,0x70(%rsp)
  0x000000011263711f: mov    %rdx,0x68(%rsp)
  0x0000000112637124: mov    %rbx,0x60(%rsp)
  0x0000000112637129: mov    %rbp,0x50(%rsp)
  0x000000011263712e: mov    %rsi,0x48(%rsp)
  0x0000000112637133: mov    %rdi,0x40(%rsp)
  0x0000000112637138: mov    %r8,0x38(%rsp)
  0x000000011263713d: mov    %r9,0x30(%rsp)
  0x0000000112637142: mov    %r10,0x28(%rsp)
  0x0000000112637147: mov    %r11,0x20(%rsp)
  0x000000011263714c: mov    %r12,0x18(%rsp)
  0x0000000112637151: mov    %r13,0x10(%rsp)
  0x0000000112637156: mov    %r14,0x8(%rsp)
  0x000000011263715b: mov    %r15,(%rsp)
  0x000000011263715f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112637169: movabs $0x112637109,%rsi  ;   {internal_word}
  0x0000000112637173: mov    %rsp,%rdx
  0x0000000112637176: and    $0xfffffffffffffff0,%rsp
  0x000000011263717a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263717f: hlt    
[Deopt Handler Code]
  0x0000000112637180: movabs $0x112637180,%r10  ;   {section_word}
  0x000000011263718a: push   %r10
  0x000000011263718c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112637191: hlt    
  0x0000000112637192: hlt    
  0x0000000112637193: hlt    
  0x0000000112637194: hlt    
  0x0000000112637195: hlt    
  0x0000000112637196: hlt    
  0x0000000112637197: hlt    
<nmethod compile_id='79' compiler='C1' level='3' entry='0x0000000112636c40' size='2560' address='0x0000000112636a90' relocation_offset='296' insts_offset='432' stub_offset='1616' scopes_data_offset='1824' scopes_pcs_offset='2072' dependencies_offset='2536' nul_chk_table_offset='2544' method='java/lang/AbstractStringBuilder expandCapacity (I)V' bytes='50' count='482' iicount='482' stamp='0.298'/>
<writer thread='22275'/>
[Loaded java.net.InetSocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
<task_queued compile_id='80' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='512' iicount='512' level='3' stamp='0.298' comment='tiered' hot_count='512'/>
<task_queued compile_id='81' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='512' backedge_count='51' iicount='512' level='3' stamp='0.298' comment='tiered' hot_count='512'/>
<task_queued compile_id='82' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='640' backedge_count='1' iicount='640' level='3' stamp='0.298' comment='tiered' hot_count='640'/>
<task_queued compile_id='83' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='399' iicount='399' level='3' stamp='0.298' comment='tiered' hot_count='399'/>
<writer thread='20739'/>
Decoding compiled method 0x00000001126374d0:
Code:
<writer thread='7171'/>
[Loaded com.concurrent.volatiles.TestVolatile from file:/Users/liuzhengyang/Code/opensource/github/lzy/jvm/target/classes/]
<writer thread='20739'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method}
<writer thread='22275'/>
[Loaded java.net.InetAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='20739'/>
 {0x0000000129e21cd0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000112637660: mov    %eax,-0x14000(%rsp)
  0x0000000112637667: push   %rbp
  0x0000000112637668: sub    $0x60,%rsp
  0x000000011263766c: mov    %rsi,%r8
  0x000000011263766f: mov    %rdx,%r9
  0x0000000112637672: movabs $0x129f59bb0,%rbx  ;   {metadata(method data for {method} {0x0000000129e21cd0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011263767c: mov    0xdc(%rbx),%edx
  0x0000000112637682: add    $0x8,%edx
  0x0000000112637685: mov    %edx,0xdc(%rbx)
  0x000000011263768b: movabs $0x129e21cd0,%rbx  ;   {metadata({method} {0x0000000129e21cd0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000112637695: and    $0x1ff8,%edx
  0x000000011263769b: cmp    $0x0,%edx
  0x000000011263769e: je     0x000000011263784a  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x00000001126376a4: mov    %r9,%rbx
  0x00000001126376a7: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000001126376b1: movslq %ebx,%rbx
  0x00000001126376b4: mov    %rbx,%rdi
  0x00000001126376b7: cmp    $0xffffff,%rbx
  0x00000001126376be: ja     0x0000000112637861
  0x00000001126376c4: movabs $0x17,%rsi
  0x00000001126376ce: lea    (%rsi,%rbx,1),%rsi
  0x00000001126376d2: and    $0xfffffffffffffff8,%rsi
  0x00000001126376d6: mov    0x60(%r15),%rax
  0x00000001126376da: lea    (%rax,%rsi,1),%rsi
  0x00000001126376de: cmp    0x70(%r15),%rsi
  0x00000001126376e2: ja     0x0000000112637861
  0x00000001126376e8: mov    %rsi,0x60(%r15)
  0x00000001126376ec: sub    %rax,%rsi
  0x00000001126376ef: movq   $0x1,(%rax)
  0x00000001126376f6: mov    %rdx,%rcx
  0x00000001126376f9: shr    $0x3,%rcx
  0x00000001126376fd: mov    %ecx,0x8(%rax)
  0x0000000112637700: mov    %ebx,0xc(%rax)
  0x0000000112637703: sub    $0x10,%rsi
  0x0000000112637707: je     0x000000011263771e
  0x000000011263770d: xor    %rbx,%rbx
  0x0000000112637710: shr    $0x3,%rsi
  0x0000000112637714: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000112637719: dec    %rsi
  0x000000011263771c: jne    0x0000000112637714  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x000000011263771e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x000000011263786b
  0x0000000112637722: movabs $0x129f59bb0,%rdx  ;   {metadata(method data for {method} {0x0000000129e21cd0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011263772c: addq   $0x1,0x108(%rdx)
  0x0000000112637734: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011263773e: mov    0xdc(%rdx),%ecx
  0x0000000112637744: add    $0x8,%ecx
  0x0000000112637747: mov    %ecx,0xdc(%rdx)
  0x000000011263774d: movabs $0x129de28e0,%rdx  ;   {metadata({method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112637757: and    $0x7ffff8,%ecx
  0x000000011263775d: cmp    $0x0,%ecx
  0x0000000112637760: je     0x0000000112637870
  0x0000000112637766: cmp    %r9d,%esi
  0x0000000112637769: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000112637773: movabs $0x108,%rcx
  0x000000011263777d: jg     0x000000011263778d
  0x0000000112637783: movabs $0x118,%rcx
  0x000000011263778d: mov    (%rdx,%rcx,1),%rdi
  0x0000000112637791: lea    0x1(%rdi),%rdi
  0x0000000112637795: mov    %rdi,(%rdx,%rcx,1)
  0x0000000112637799: jg     0x00000001126377b2  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x000000011263779f: movabs $0x129ecff78,%rdx  ;   {metadata(method data for {method} {0x0000000129de28e0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000001126377a9: incl   0x128(%rdx)
  0x00000001126377af: mov    %rsi,%r9           ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x00000001126377b2: movabs $0x129f59bb0,%rsi  ;   {metadata(method data for {method} {0x0000000129e21cd0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000001126377bc: addq   $0x1,0x118(%rsi)
  0x00000001126377c4: mov    %r8,%rsi
  0x00000001126377c7: mov    $0x0,%edx
  0x00000001126377cc: mov    %rax,%rcx
  0x00000001126377cf: mov    $0x0,%r8d
  0x00000001126377d5: mov    %rax,0x50(%rsp)
  0x00000001126377da: lea    (%rdx,%r9,1),%rdi
  0x00000001126377de: cmp    0xc(%rsi),%edi
  0x00000001126377e1: ja     0x0000000112637887
  0x00000001126377e7: lea    (%r8,%r9,1),%rdi
  0x00000001126377eb: cmp    0xc(%rcx),%edi
  0x00000001126377ee: ja     0x0000000112637887
  0x00000001126377f4: test   %r9d,%r9d
  0x00000001126377f7: jl     0x0000000112637887
  0x00000001126377fd: je     0x0000000112637839
  0x0000000112637803: movslq %edx,%rdx
  0x0000000112637806: movslq %r8d,%r8
  0x0000000112637809: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000011263780e: lea    0x10(%rcx,%r8,1),%rsi
  0x0000000112637813: mov    %r9,%rdx
  0x0000000112637816: test   $0xf,%esp
  0x000000011263781c: je     0x0000000112637834
  0x0000000112637822: sub    $0x8,%rsp
  0x0000000112637826: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011263782b: add    $0x8,%rsp
  0x000000011263782f: jmpq   0x0000000112637839
  0x0000000112637834: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {runtime_call}
  0x0000000112637839: mov    0x50(%rsp),%rax
  0x000000011263783e: add    $0x60,%rsp
  0x0000000112637842: pop    %rbp
  0x0000000112637843: test   %eax,-0x33e7749(%rip)        # 0x000000010f250100
                                                ;   {poll_return}
  0x0000000112637849: retq   
  0x000000011263784a: mov    %rbx,0x8(%rsp)
  0x000000011263784f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000112637857: callq  0x000000011260aea0  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x000000011263785c: jmpq   0x00000001126376a4
  0x0000000112637861: callq  0x0000000112609820  ; OopMap{r8=Oop off=518}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x0000000112637866: jmpq   0x000000011263771e
  0x000000011263786b: callq  0x00000001126072c0  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x0000000112637870: mov    %rdx,0x8(%rsp)
  0x0000000112637875: movq   $0xffffffffffffffff,(%rsp)
  0x000000011263787d: callq  0x000000011260aea0  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x0000000112637882: jmpq   0x0000000112637766
  0x0000000112637887: callq  0x0000000112553420  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x000000011263788c: jmp    0x0000000112637839
  0x000000011263788e: nop
  0x000000011263788f: nop
  0x0000000112637890: mov    0x2a8(%r15),%rax
  0x0000000112637897: movabs $0x0,%r10
  0x00000001126378a1: mov    %r10,0x2a8(%r15)
  0x00000001126378a8: movabs $0x0,%r10
  0x00000001126378b2: mov    %r10,0x2b0(%r15)
  0x00000001126378b9: add    $0x60,%rsp
  0x00000001126378bd: pop    %rbp
  0x00000001126378be: jmpq   0x0000000112606860  ;   {runtime_call}
  0x00000001126378c3: hlt    
  0x00000001126378c4: hlt    
  0x00000001126378c5: hlt    
  0x00000001126378c6: hlt    
  0x00000001126378c7: hlt    
  0x00000001126378c8: hlt    
  0x00000001126378c9: hlt    
  0x00000001126378ca: hlt    
  0x00000001126378cb: hlt    
  0x00000001126378cc: hlt    
  0x00000001126378cd: hlt    
  0x00000001126378ce: hlt    
  0x00000001126378cf: hlt    
  0x00000001126378d0: hlt    
  0x00000001126378d1: hlt    
  0x00000001126378d2: hlt    
  0x00000001126378d3: hlt    
  0x00000001126378d4: hlt    
  0x00000001126378d5: hlt    
  0x00000001126378d6: hlt    
  0x00000001126378d7: hlt    
  0x00000001126378d8: hlt    
  0x00000001126378d9: hlt    
  0x00000001126378da: hlt    
  0x00000001126378db: hlt    
  0x00000001126378dc: hlt    
  0x00000001126378dd: hlt    
  0x00000001126378de: hlt    
  0x00000001126378df: hlt    
[Stub Code]
  0x00000001126378e0: nop                       ;   {no_reloc}
  0x00000001126378e1: nop
  0x00000001126378e2: nop
  0x00000001126378e3: nop
  0x00000001126378e4: nop
  0x00000001126378e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001126378ef: jmpq   0x00000001126378ef  ;   {runtime_call}
[Exception Handler]
  0x00000001126378f4: callq  0x000000011260bf60  ;   {runtime_call}
  0x00000001126378f9: mov    %rsp,-0x28(%rsp)
  0x00000001126378fe: sub    $0x80,%rsp
  0x0000000112637905: mov    %rax,0x78(%rsp)
  0x000000011263790a: mov    %rcx,0x70(%rsp)
  0x000000011263790f: mov    %rdx,0x68(%rsp)
  0x0000000112637914: mov    %rbx,0x60(%rsp)
  0x0000000112637919: mov    %rbp,0x50(%rsp)
  0x000000011263791e: mov    %rsi,0x48(%rsp)
  0x0000000112637923: mov    %rdi,0x40(%rsp)
  0x0000000112637928: mov    %r8,0x38(%rsp)
  0x000000011263792d: mov    %r9,0x30(%rsp)
  0x0000000112637932: mov    %r10,0x28(%rsp)
  0x0000000112637937: mov    %r11,0x20(%rsp)
  0x000000011263793c: mov    %r12,0x18(%rsp)
  0x0000000112637941: mov    %r13,0x10(%rsp)
  0x0000000112637946: mov    %r14,0x8(%rsp)
  0x000000011263794b: mov    %r15,(%rsp)
  0x000000011263794f: movabs $0x1109b52ca,%rdi  ;   {external_word}
  0x0000000112637959: movabs $0x1126378f9,%rsi  ;   {internal_word}
  0x0000000112637963: mov    %rsp,%rdx
  0x0000000112637966: and    $0xfffffffffffffff0,%rsp
  0x000000011263796a: callq  0x00000001107e93ec  ;   {runtime_call}
  0x000000011263796f: hlt    
[Deopt Handler Code]
  0x0000000112637970: movabs $0x112637970,%r10  ;   {section_word}
  0x000000011263797a: push   %r10
  0x000000011263797c: jmpq   0x00000001125543c0  ;   {runtime_call}
  0x0000000112637981: hlt    
  0x0000000112637982: hlt    
  0x0000000112637983: hlt    
  0x0000000112637984: hlt    
  0x0000000112637985: hlt    
  0x0000000112637986: hlt    
  0x0000000112637987: hlt    
<nmethod compile_id='74' compiler='C1' level='3' entry='0x0000000112637660' size='1584' address='0x00000001126374d0' relocation_offset='296' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='679' iicount='679' stamp='0.300'/>
<writer thread='22275'/>
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
[Loaded sun.reflect.NativeMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='22275'/>
[Loaded sun.security.action.GetBooleanAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
[Loaded sun.reflect.DelegatingMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='22275'/>
[Loaded java.net.InetAddress$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='7171'/>
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='13571'/>
<destroy_vm stamp='0.301'/>
<writer thread='22275'/>
[Loaded java.net.InetAddress$InetAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar]
<tty_done stamp='0.312'/>
</tty>
<compilation_log thread='20739'>
<start_compile_thread name='C1 CompilerThread3' thread='20739' process='44591' stamp='0.092'/>
<task compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2050' iicount='2050' level='3' stamp='0.093'>
<phase name='buildIR' stamp='0.093'>
<type id='709' name='void'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='817' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='2050'/>
<parse method='817'  stamp='0.093'>
<parse_done stamp='0.093'/>
</parse>
<phase name='optimize_blocks' stamp='0.093'>
<phase_done name='optimize_blocks' stamp='0.093'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.093'>
<phase_done name='rangeCheckElimination' stamp='0.093'/>
</phase>
<phase name='optimize_null_checks' stamp='0.093'>
<phase_done name='optimize_null_checks' stamp='0.093'/>
</phase>
<phase_done name='buildIR' stamp='0.093'/>
</phase>
<phase name='emit_lir' stamp='0.093'>
<phase name='lirGeneration' stamp='0.093'>
<phase_done name='lirGeneration' stamp='0.093'/>
</phase>
<phase name='linearScan' stamp='0.093'>
<phase_done name='linearScan' stamp='0.093'/>
</phase>
<phase_done name='emit_lir' stamp='0.093'/>
</phase>
<phase name='codeemit' stamp='0.093'>
<phase_done name='codeemit' stamp='0.094'/>
</phase>
<phase name='codeinstall' stamp='0.094'>
<phase_done name='codeinstall' stamp='0.100'/>
</phase>
<code_cache total_blobs='209' nmethods='1' adapters='133' free_code_cache='250606720'/>
<task_done success='1' nmsize='336' count='2051' stamp='0.100'/>
</task>
<task compile_id='2' method='java/lang/String hashCode ()I' bytes='55' count='651' backedge_count='14363' iicount='651' level='3' stamp='0.102'>
<phase name='buildIR' stamp='0.102'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='hashCode' return='707' flags='1' bytes='55' iicount='655'/>
<parse method='817'  stamp='0.102'>
<parse_done stamp='0.102'/>
</parse>
<phase name='optimize_blocks' stamp='0.102'>
<phase_done name='optimize_blocks' stamp='0.102'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.102'>
<phase_done name='rangeCheckElimination' stamp='0.102'/>
</phase>
<phase name='optimize_null_checks' stamp='0.102'>
<phase_done name='optimize_null_checks' stamp='0.102'/>
</phase>
<phase_done name='buildIR' stamp='0.102'/>
</phase>
<phase name='emit_lir' stamp='0.102'>
<phase name='lirGeneration' stamp='0.102'>
<phase_done name='lirGeneration' stamp='0.102'/>
</phase>
<phase name='linearScan' stamp='0.102'>
<phase_done name='linearScan' stamp='0.102'/>
</phase>
<phase_done name='emit_lir' stamp='0.102'/>
</phase>
<phase name='codeemit' stamp='0.102'>
<phase_done name='codeemit' stamp='0.102'/>
</phase>
<phase name='codeinstall' stamp='0.102'>
<phase_done name='codeinstall' stamp='0.104'/>
</phase>
<code_cache total_blobs='219' nmethods='2' adapters='135' free_code_cache='250570688'/>
<task_done success='1' nmsize='656' count='666' backedge_count='14603' stamp='0.104'/>
</task>
<task compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='591' backedge_count='3159' iicount='591' level='3' stamp='0.104'>
<phase name='buildIR' stamp='0.104'>
<type id='701' name='boolean'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='equals' return='701' arguments='714' flags='1' bytes='81' iicount='591'/>
<parse method='817'  stamp='0.104'>
<parse_done stamp='0.104'/>
</parse>
<phase name='optimize_blocks' stamp='0.104'>
<phase_done name='optimize_blocks' stamp='0.104'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.104'>
<phase_done name='rangeCheckElimination' stamp='0.104'/>
</phase>
<phase name='optimize_null_checks' stamp='0.104'>
<phase_done name='optimize_null_checks' stamp='0.104'/>
</phase>
<phase_done name='buildIR' stamp='0.104'/>
</phase>
<phase name='emit_lir' stamp='0.104'>
<phase name='lirGeneration' stamp='0.104'>
<phase_done name='lirGeneration' stamp='0.104'/>
</phase>
<phase name='linearScan' stamp='0.104'>
<phase_done name='linearScan' stamp='0.105'/>
</phase>
<phase_done name='emit_lir' stamp='0.105'/>
</phase>
<phase name='codeemit' stamp='0.105'>
<phase_done name='codeemit' stamp='0.105'/>
</phase>
<phase name='codeinstall' stamp='0.105'>
<phase_done name='codeinstall' stamp='0.109'/>
</phase>
<code_cache total_blobs='223' nmethods='3' adapters='137' free_code_cache='250572160'/>
<task_done success='1' nmsize='1360' count='595' backedge_count='3175' stamp='0.109'/>
</task>
<task compile_id='5' method='java/lang/String indexOf (II)I' bytes='70' count='433' backedge_count='17431' iicount='433' level='3' stamp='0.112'>
<phase name='buildIR' stamp='0.112'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='707 707' flags='1' bytes='70' iicount='433'/>
<parse method='817'  stamp='0.112'>
<bc code='183' bci='66'/>
<method id='819' holder='715' name='indexOfSupplementary' return='707' arguments='707 707' flags='2' bytes='71' iicount='1'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.112'/>
</parse>
<phase name='optimize_blocks' stamp='0.112'>
<phase_done name='optimize_blocks' stamp='0.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.112'>
<phase_done name='rangeCheckElimination' stamp='0.112'/>
</phase>
<phase name='optimize_null_checks' stamp='0.112'>
<phase_done name='optimize_null_checks' stamp='0.112'/>
</phase>
<phase_done name='buildIR' stamp='0.112'/>
</phase>
<phase name='emit_lir' stamp='0.112'>
<phase name='lirGeneration' stamp='0.112'>
<phase_done name='lirGeneration' stamp='0.112'/>
</phase>
<phase name='linearScan' stamp='0.112'>
<phase_done name='linearScan' stamp='0.113'/>
</phase>
<phase_done name='emit_lir' stamp='0.113'/>
</phase>
<phase name='codeemit' stamp='0.113'>
<phase_done name='codeemit' stamp='0.113'/>
</phase>
<phase name='codeinstall' stamp='0.113'>
<phase_done name='codeinstall' stamp='0.116'/>
</phase>
<code_cache total_blobs='230' nmethods='6' adapters='139' free_code_cache='250566912'/>
<task_done success='1' nmsize='904' count='437' backedge_count='17693' stamp='0.116'/>
</task>
<task compile_id='7' method='java/lang/String length ()I' bytes='6' count='896' iicount='896' level='3' stamp='0.116'>
<phase name='buildIR' stamp='0.116'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='length' return='707' flags='1' bytes='6' iicount='898'/>
<parse method='817'  stamp='0.116'>
<parse_done stamp='0.116'/>
</parse>
<phase name='optimize_blocks' stamp='0.116'>
<phase_done name='optimize_blocks' stamp='0.116'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.116'>
<phase_done name='rangeCheckElimination' stamp='0.116'/>
</phase>
<phase name='optimize_null_checks' stamp='0.116'>
<phase_done name='optimize_null_checks' stamp='0.116'/>
</phase>
<phase_done name='buildIR' stamp='0.116'/>
</phase>
<phase name='emit_lir' stamp='0.116'>
<phase name='lirGeneration' stamp='0.116'>
<phase_done name='lirGeneration' stamp='0.116'/>
</phase>
<phase name='linearScan' stamp='0.116'>
<phase_done name='linearScan' stamp='0.116'/>
</phase>
<phase_done name='emit_lir' stamp='0.116'/>
</phase>
<phase name='codeemit' stamp='0.116'>
<phase_done name='codeemit' stamp='0.116'/>
</phase>
<phase name='codeinstall' stamp='0.116'>
<phase_done name='codeinstall' stamp='0.117'/>
</phase>
<code_cache total_blobs='231' nmethods='7' adapters='139' free_code_cache='250565952'/>
<task_done success='1' nmsize='368' count='941' stamp='0.117'/>
</task>
<task compile_id='10' method='java/lang/Math min (II)I' bytes='11' count='1282' iicount='1282' level='3' stamp='0.117'>
<phase name='buildIR' stamp='0.117'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/Math' flags='17'/>
<method id='818' holder='817' name='min' return='707' arguments='707 707' flags='9' bytes='11' iicount='1283'/>
<parse method='818'  stamp='0.117'>
<parse_done stamp='0.117'/>
</parse>
<phase name='optimize_blocks' stamp='0.117'>
<phase_done name='optimize_blocks' stamp='0.117'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.117'>
<phase_done name='rangeCheckElimination' stamp='0.117'/>
</phase>
<phase name='optimize_null_checks' stamp='0.117'>
<phase_done name='optimize_null_checks' stamp='0.117'/>
</phase>
<phase_done name='buildIR' stamp='0.117'/>
</phase>
<phase name='emit_lir' stamp='0.117'>
<phase name='lirGeneration' stamp='0.117'>
<phase_done name='lirGeneration' stamp='0.117'/>
</phase>
<phase name='linearScan' stamp='0.117'>
<phase_done name='linearScan' stamp='0.117'/>
</phase>
<phase_done name='emit_lir' stamp='0.117'/>
</phase>
<phase name='codeemit' stamp='0.117'>
<phase_done name='codeemit' stamp='0.117'/>
</phase>
<phase name='codeinstall' stamp='0.117'>
<phase_done name='codeinstall' stamp='0.118'/>
</phase>
<code_cache total_blobs='232' nmethods='8' adapters='139' free_code_cache='250564992'/>
<task_done success='1' nmsize='400' count='1305' stamp='0.118'/>
</task>
<task compile_id='11' method='java/lang/String lastIndexOf (II)I' bytes='52' count='174' backedge_count='7379' iicount='174' level='3' stamp='0.118'>
<phase name='buildIR' stamp='0.118'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='lastIndexOf' return='707' arguments='707 707' flags='1' bytes='52' iicount='174'/>
<parse method='817'  stamp='0.118'>
<bc code='184' bci='16'/>
<klass id='819' name='java/lang/Math' flags='17'/>
<method id='820' holder='819' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='10' compiler='C1' level='3' iicount='1317'/>
<call method='820' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='820'>
<parse_done stamp='0.118'/>
</parse>
<bc code='183' bci='48'/>
<method id='822' holder='715' name='lastIndexOfSupplementary' return='707' arguments='707 707' flags='2' bytes='70' iicount='1'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.118'/>
</parse>
<phase name='optimize_blocks' stamp='0.118'>
<phase_done name='optimize_blocks' stamp='0.118'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.118'>
<phase_done name='rangeCheckElimination' stamp='0.118'/>
</phase>
<phase name='optimize_null_checks' stamp='0.118'>
<phase_done name='optimize_null_checks' stamp='0.118'/>
</phase>
<phase_done name='buildIR' stamp='0.118'/>
</phase>
<phase name='emit_lir' stamp='0.118'>
<phase name='lirGeneration' stamp='0.118'>
<phase_done name='lirGeneration' stamp='0.118'/>
</phase>
<phase name='linearScan' stamp='0.118'>
<phase_done name='linearScan' stamp='0.118'/>
</phase>
<phase_done name='emit_lir' stamp='0.118'/>
</phase>
<phase name='codeemit' stamp='0.118'>
<phase_done name='codeemit' stamp='0.118'/>
</phase>
<phase name='codeinstall' stamp='0.118'>
<phase_done name='codeinstall' stamp='0.121'/>
</phase>
<code_cache total_blobs='233' nmethods='9' adapters='139' free_code_cache='250563072'/>
<task_done success='1' nmsize='904' count='178' backedge_count='7561' inlined_bytes='11' stamp='0.121'/>
</task>
<task compile_id='13' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='401' iicount='401' level='3' stamp='0.121'>
<phase name='buildIR' stamp='0.121'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='817' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' iicount='401'/>
<parse method='817'  stamp='0.121'>
<bc code='182' bci='12'/>
<method id='819' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='214'/>
<call method='819' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='778' x='819'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.121'/>
</parse>
<phase name='optimize_blocks' stamp='0.121'>
<phase_done name='optimize_blocks' stamp='0.121'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.121'>
<phase_done name='rangeCheckElimination' stamp='0.121'/>
</phase>
<phase name='optimize_null_checks' stamp='0.121'>
<phase_done name='optimize_null_checks' stamp='0.121'/>
</phase>
<phase_done name='buildIR' stamp='0.121'/>
</phase>
<phase name='emit_lir' stamp='0.121'>
<phase name='lirGeneration' stamp='0.121'>
<phase_done name='lirGeneration' stamp='0.121'/>
</phase>
<phase name='linearScan' stamp='0.121'>
<phase_done name='linearScan' stamp='0.121'/>
</phase>
<phase_done name='emit_lir' stamp='0.121'/>
</phase>
<phase name='codeemit' stamp='0.121'>
<phase_done name='codeemit' stamp='0.121'/>
</phase>
<phase name='codeinstall' stamp='0.121'>
<dependency type='unique_concrete_method' ctxk='778' x='819'/>
<phase_done name='codeinstall' stamp='0.122'/>
</phase>
<code_cache total_blobs='234' nmethods='10' adapters='139' free_code_cache='250561856'/>
<task_done success='1' nmsize='584' count='401' stamp='0.122'/>
</task>
<task compile_id='8' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='296' iicount='296' level='3' stamp='0.122'>
<phase name='buildIR' stamp='0.122'>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' iicount='296'/>
<parse method='817'  stamp='0.122'>
<bc code='183' bci='5'/>
<method id='819' holder='778' name='appendNull' return='778' flags='2' bytes='56' iicount='1'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='707' name='int'/>
<method id='821' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='7' compiler='C1' level='3' iicount='1024'/>
<call method='821' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.122'/>
</parse>
<bc code='183' bci='21'/>
<type id='709' name='void'/>
<method id='823' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' compile_id='13' compiler='C1' level='3' iicount='401'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='182' bci='12'/>
<method id='825' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='214'/>
<call method='825' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='778' x='825'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.122'/>
</parse>
<bc code='182' bci='35'/>
<klass id='806' name='[C' flags='1041'/>
<method id='827' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' iicount='296'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.123'/>
</parse>
<phase name='optimize_blocks' stamp='0.123'>
<phase_done name='optimize_blocks' stamp='0.123'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.123'>
<phase_done name='rangeCheckElimination' stamp='0.123'/>
</phase>
<phase name='optimize_null_checks' stamp='0.123'>
<phase_done name='optimize_null_checks' stamp='0.123'/>
</phase>
<phase_done name='buildIR' stamp='0.123'/>
</phase>
<phase name='emit_lir' stamp='0.123'>
<phase name='lirGeneration' stamp='0.123'>
<phase_done name='lirGeneration' stamp='0.123'/>
</phase>
<phase name='linearScan' stamp='0.123'>
<phase_done name='linearScan' stamp='0.123'/>
</phase>
<phase_done name='emit_lir' stamp='0.123'/>
</phase>
<phase name='codeemit' stamp='0.123'>
<phase_done name='codeemit' stamp='0.123'/>
</phase>
<phase name='codeinstall' stamp='0.123'>
<dependency type='unique_concrete_method' ctxk='778' x='825'/>
<phase_done name='codeinstall' stamp='0.127'/>
</phase>
<code_cache total_blobs='235' nmethods='11' adapters='139' free_code_cache='250559360'/>
<task_done success='1' nmsize='1288' count='299' inlined_bytes='22' stamp='0.127'/>
</task>
<task compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='521' iicount='521' level='3' stamp='0.128'>
<phase name='buildIR' stamp='0.128'>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='817' name='java/util/Arrays' flags='1'/>
<method id='818' holder='817' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' iicount='521'/>
<parse method='818'  stamp='0.128'>
<bc code='183' bci='16'/>
<type id='709' name='void'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='821' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' iicount='133'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='3'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='823' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' iicount='143'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='825' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='2228'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<parse_done stamp='0.128'/>
</parse>
<parse_done stamp='0.128'/>
</parse>
<parse_done stamp='0.128'/>
</parse>
<bc code='182' bci='20'/>
<method id='827' holder='780' name='append' return='780' arguments='707' flags='1' bytes='8' iicount='1'/>
<call method='827' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<bc code='183' bci='2'/>
<method id='829' holder='778' name='append' return='778' arguments='707' flags='1' bytes='62' iicount='1'/>
<call method='829' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.128'/>
</parse>
<bc code='182' bci='25'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='832' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' iicount='272'/>
<call method='832' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='832'>
<bc code='183' bci='2'/>
<method id='834' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='8' compiler='C1' level='3' iicount='302'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.128'/>
</parse>
<bc code='182' bci='29'/>
<call method='827' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<bc code='183' bci='2'/>
<call method='829' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.128'/>
</parse>
<bc code='182' bci='32'/>
<method id='836' holder='780' name='toString' return='715' flags='1' bytes='17' iicount='133'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='13'/>
<method id='838' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' iicount='512'/>
<call method='838' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.128'/>
</parse>
<bc code='183' bci='35'/>
<klass id='820' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='840' holder='820' name='&lt;init&gt;' return='709' arguments='715' flags='1' bytes='6' iicount='1'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='10' compiler='C1' level='3' iicount='1344'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<parse_done stamp='0.128'/>
</parse>
<bc code='184' bci='57'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='845' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.128'/>
</parse>
<phase name='optimize_blocks' stamp='0.128'>
<phase_done name='optimize_blocks' stamp='0.128'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.128'>
<phase_done name='rangeCheckElimination' stamp='0.128'/>
</phase>
<phase name='optimize_null_checks' stamp='0.128'>
<phase_done name='optimize_null_checks' stamp='0.128'/>
</phase>
<phase_done name='buildIR' stamp='0.128'/>
</phase>
<phase name='emit_lir' stamp='0.128'>
<phase name='lirGeneration' stamp='0.128'>
<phase_done name='lirGeneration' stamp='0.128'/>
</phase>
<phase name='linearScan' stamp='0.128'>
<phase_done name='linearScan' stamp='0.128'/>
</phase>
<phase_done name='emit_lir' stamp='0.128'/>
</phase>
<phase name='codeemit' stamp='0.128'>
<phase_done name='codeemit' stamp='0.128'/>
</phase>
<phase name='codeinstall' stamp='0.129'>
<phase_done name='codeinstall' stamp='0.136'/>
</phase>
<code_cache total_blobs='236' nmethods='12' adapters='139' free_code_cache='250554432'/>
<task_done success='1' nmsize='2872' count='524' inlined_bytes='72' stamp='0.136'/>
</task>
<task compile_id='9' method='java/lang/String getChars (II[CI)V' bytes='62' count='308' iicount='308' level='3' stamp='0.136'>
<phase name='buildIR' stamp='0.136'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' iicount='308'/>
<parse method='817'  stamp='0.136'>
<bc code='183' bci='9'/>
<klass id='819' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='820' holder='819' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='821' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.136'/>
</parse>
<phase name='optimize_blocks' stamp='0.136'>
<phase_done name='optimize_blocks' stamp='0.136'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.136'>
<phase_done name='rangeCheckElimination' stamp='0.136'/>
</phase>
<phase name='optimize_null_checks' stamp='0.136'>
<phase_done name='optimize_null_checks' stamp='0.136'/>
</phase>
<phase_done name='buildIR' stamp='0.136'/>
</phase>
<phase name='emit_lir' stamp='0.136'>
<phase name='lirGeneration' stamp='0.136'>
<phase_done name='lirGeneration' stamp='0.136'/>
</phase>
<phase name='linearScan' stamp='0.136'>
<phase_done name='linearScan' stamp='0.136'/>
</phase>
<phase_done name='emit_lir' stamp='0.136'/>
</phase>
<phase name='codeemit' stamp='0.136'>
<phase_done name='codeemit' stamp='0.136'/>
</phase>
<phase name='codeinstall' stamp='0.136'>
<phase_done name='codeinstall' stamp='0.139'/>
</phase>
<code_cache total_blobs='237' nmethods='13' adapters='139' free_code_cache='250552128'/>
<task_done success='1' nmsize='1080' count='308' stamp='0.139'/>
</task>
<task compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='514' iicount='514' level='3' stamp='0.139'>
<phase name='buildIR' stamp='0.139'>
<type id='709' name='void'/>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' iicount='514'/>
<parse method='817'  stamp='0.139'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='819' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='2265'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<parse_done stamp='0.140'/>
</parse>
<bc code='183' bci='13'/>
<klass id='821' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='822' holder='821' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='26'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='45'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='55'/>
<klass id='823' name='java/util/Arrays' flags='1'/>
<method id='824' holder='823' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' compile_id='12' compiler='C1' level='3' iicount='524'/>
<call method='824' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.140'/>
</parse>
<phase name='optimize_blocks' stamp='0.140'>
<phase_done name='optimize_blocks' stamp='0.140'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.140'>
<phase_done name='rangeCheckElimination' stamp='0.140'/>
</phase>
<phase name='optimize_null_checks' stamp='0.140'>
<phase_done name='optimize_null_checks' stamp='0.140'/>
</phase>
<phase_done name='buildIR' stamp='0.140'/>
</phase>
<phase name='emit_lir' stamp='0.140'>
<phase name='lirGeneration' stamp='0.140'>
<phase_done name='lirGeneration' stamp='0.140'/>
</phase>
<phase name='linearScan' stamp='0.140'>
<phase_done name='linearScan' stamp='0.140'/>
</phase>
<phase_done name='emit_lir' stamp='0.140'/>
</phase>
<phase name='codeemit' stamp='0.140'>
<phase_done name='codeemit' stamp='0.140'/>
</phase>
<phase name='codeinstall' stamp='0.140'>
<phase_done name='codeinstall' stamp='0.143'/>
</phase>
<code_cache total_blobs='240' nmethods='14' adapters='141' free_code_cache='250548608'/>
<task_done success='1' nmsize='1080' count='514' inlined_bytes='1' stamp='0.143'/>
</task>
<task compile_id='14' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='269' iicount='269' level='3' stamp='0.143'>
<phase name='buildIR' stamp='0.143'>
<klass id='726' name='java/lang/SecurityManager' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='817' holder='720' name='getSecurityManager' return='726' flags='9' bytes='4' iicount='269'/>
<parse method='817'  stamp='0.143'>
<parse_done stamp='0.143'/>
</parse>
<phase name='optimize_blocks' stamp='0.143'>
<phase_done name='optimize_blocks' stamp='0.143'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.143'>
<phase_done name='rangeCheckElimination' stamp='0.143'/>
</phase>
<phase name='optimize_null_checks' stamp='0.143'>
<phase_done name='optimize_null_checks' stamp='0.143'/>
</phase>
<phase_done name='buildIR' stamp='0.143'/>
</phase>
<phase name='emit_lir' stamp='0.143'>
<phase name='lirGeneration' stamp='0.143'>
<phase_done name='lirGeneration' stamp='0.143'/>
</phase>
<phase name='linearScan' stamp='0.143'>
<phase_done name='linearScan' stamp='0.143'/>
</phase>
<phase_done name='emit_lir' stamp='0.143'/>
</phase>
<phase name='codeemit' stamp='0.143'>
<phase_done name='codeemit' stamp='0.143'/>
</phase>
<phase name='codeinstall' stamp='0.143'>
<phase_done name='codeinstall' stamp='0.144'/>
</phase>
<code_cache total_blobs='241' nmethods='15' adapters='141' free_code_cache='250547776'/>
<task_done success='1' nmsize='336' count='269' stamp='0.144'/>
</task>
<task compile_id='16' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='326' iicount='326' level='3' stamp='0.147'>
<phase name='buildIR' stamp='0.147'>
<klass id='809' name='[B' flags='1041'/>
<klass id='817' name='java/io/BufferedInputStream' flags='1'/>
<method id='818' holder='817' name='getBufIfOpen' return='809' flags='2' bytes='21' iicount='382'/>
<parse method='818'  stamp='0.147'>
<bc code='183' bci='15'/>
<type id='709' name='void'/>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='820' name='java/io/IOException' unloaded='1'/>
<method id='822' holder='820' name='&lt;init&gt;' return='709' arguments='715' unloaded='1'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.147'/>
</parse>
<phase name='optimize_blocks' stamp='0.147'>
<phase_done name='optimize_blocks' stamp='0.147'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.147'>
<phase_done name='rangeCheckElimination' stamp='0.147'/>
</phase>
<phase name='optimize_null_checks' stamp='0.147'>
<phase_done name='optimize_null_checks' stamp='0.147'/>
</phase>
<phase_done name='buildIR' stamp='0.147'/>
</phase>
<phase name='emit_lir' stamp='0.147'>
<phase name='lirGeneration' stamp='0.147'>
<phase_done name='lirGeneration' stamp='0.147'/>
</phase>
<phase name='linearScan' stamp='0.147'>
<phase_done name='linearScan' stamp='0.147'/>
</phase>
<phase_done name='emit_lir' stamp='0.147'/>
</phase>
<phase name='codeemit' stamp='0.147'>
<phase_done name='codeemit' stamp='0.147'/>
</phase>
<phase name='codeinstall' stamp='0.147'>
<phase_done name='codeinstall' stamp='0.149'/>
</phase>
<code_cache total_blobs='251' nmethods='16' adapters='150' free_code_cache='250541888'/>
<task_done success='1' nmsize='552' count='738' stamp='0.149'/>
</task>
<task compile_id='17' method='java/io/BufferedInputStream read ()I' bytes='49' count='371' iicount='371' level='3' stamp='0.149'>
<phase name='buildIR' stamp='0.149'>
<type id='707' name='int'/>
<klass id='817' name='java/io/BufferedInputStream' flags='1'/>
<method id='818' holder='817' name='read' return='707' flags='33' bytes='49' iicount='371'/>
<parse method='818'  stamp='0.149'>
<bc code='183' bci='12'/>
<type id='709' name='void'/>
<method id='820' holder='817' name='fill' return='709' flags='2' bytes='233' iicount='1'/>
<call method='820' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='809' name='[B' flags='1041'/>
<method id='822' holder='817' name='getBufIfOpen' return='809' flags='2' bytes='21' compile_id='16' compiler='C1' level='3' iicount='990'/>
<call method='822' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<parse method='822'>
<bc code='183' bci='15'/>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='824' name='java/io/IOException' unloaded='1'/>
<method id='826' holder='824' name='&lt;init&gt;' return='709' arguments='715' unloaded='1'/>
<call method='826' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.149'/>
</parse>
<parse_done stamp='0.150'/>
</parse>
<phase name='optimize_blocks' stamp='0.150'>
<phase_done name='optimize_blocks' stamp='0.150'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.150'>
<phase_done name='rangeCheckElimination' stamp='0.150'/>
</phase>
<phase name='optimize_null_checks' stamp='0.150'>
<phase_done name='optimize_null_checks' stamp='0.150'/>
</phase>
<phase_done name='buildIR' stamp='0.150'/>
</phase>
<phase name='emit_lir' stamp='0.150'>
<phase name='lirGeneration' stamp='0.150'>
<phase_done name='lirGeneration' stamp='0.150'/>
</phase>
<phase name='linearScan' stamp='0.150'>
<phase_done name='linearScan' stamp='0.150'/>
</phase>
<phase_done name='emit_lir' stamp='0.150'/>
</phase>
<phase name='codeemit' stamp='0.150'>
<phase_done name='codeemit' stamp='0.150'/>
</phase>
<phase name='codeinstall' stamp='0.150'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.153'/>
</phase>
<code_cache total_blobs='252' nmethods='17' adapters='150' free_code_cache='250539392'/>
<task_done success='1' nmsize='1336' count='771' inlined_bytes='21' stamp='0.153'/>
</task>
<task compile_id='18' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='384' backedge_count='5960' iicount='384' level='3' stamp='0.153'>
<phase name='buildIR' stamp='0.153'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='818' name='java/io/DataInput' flags='1537'/>
<klass id='817' name='java/io/DataInputStream' flags='1'/>
<method id='819' holder='817' name='readUTF' return='715' arguments='818' flags='25' bytes='501' iicount='384'/>
<parse method='819'  stamp='0.153'>
<bc code='185' bci='1'/>
<type id='707' name='int'/>
<method id='821' holder='818' name='readUnsignedShort' return='707' flags='1025' bytes='0' iicount='1'/>
<call method='821' instr='invokeinterface'/>
<method id='822' holder='817' name='readUnsignedShort' return='707' flags='17' bytes='39' iicount='433'/>
<dependency type='unique_concrete_method' ctxk='818' x='822'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='817'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='817'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='817'/>
<bc code='185' bci='87'/>
<type id='709' name='void'/>
<klass id='809' name='[B' flags='1041'/>
<method id='825' holder='818' name='readFully' return='709' arguments='809 707 707' flags='1025' bytes='0' iicount='1'/>
<call method='825' instr='invokeinterface'/>
<method id='826' holder='817' name='readFully' return='709' arguments='809 707 707' flags='17' bytes='63' iicount='489'/>
<dependency type='unique_concrete_method' ctxk='818' x='826'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='817'/>
<bc code='183' bci='259'/>
<klass id='828' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='830' holder='828' name='&lt;init&gt;' return='709' arguments='715' unloaded='1'/>
<call method='830' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='831' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' iicount='138'/>
<call method='831' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='831'>
<bc code='183' bci='3'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='833' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' iicount='148'/>
<call method='833' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='833'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='835' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='2880'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='296'/>
<method id='838' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' iicount='283'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='2'/>
<method id='840' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='8' compiler='C1' level='3' iicount='313'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='301'/>
<method id='842' holder='780' name='append' return='780' arguments='707' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='778' name='append' return='778' arguments='707' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='304'/>
<method id='846' holder='780' name='toString' return='715' flags='1' bytes='17' iicount='137'/>
<call method='846' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='13'/>
<klass id='806' name='[C' flags='1041'/>
<method id='848' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='15' compiler='C1' level='3' iicount='1107'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='183' bci='307'/>
<call method='830' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='830' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='831' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='831'>
<bc code='183' bci='3'/>
<call method='833' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='833'>
<bc code='183' bci='1'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='408'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='2'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='415'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='418'/>
<call method='846' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='13'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='183' bci='421'/>
<call method='830' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='831' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='831'>
<bc code='183' bci='3'/>
<call method='833' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='833'>
<bc code='183' bci='1'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='474'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='2'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='479'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='182' bci='482'/>
<call method='846' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='13'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<bc code='183' bci='485'/>
<call method='830' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.153'/>
</parse>
<phase name='optimize_blocks' stamp='0.154'>
<phase_done name='optimize_blocks' stamp='0.154'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.154'>
<phase_done name='rangeCheckElimination' stamp='0.154'/>
</phase>
<phase name='optimize_null_checks' stamp='0.154'>
<phase_done name='optimize_null_checks' stamp='0.154'/>
</phase>
<phase_done name='buildIR' stamp='0.154'/>
</phase>
<phase name='emit_lir' stamp='0.154'>
<phase name='lirGeneration' stamp='0.154'>
<phase_done name='lirGeneration' stamp='0.154'/>
</phase>
<phase name='linearScan' stamp='0.154'>
<phase_done name='linearScan' stamp='0.154'/>
</phase>
<phase_done name='emit_lir' stamp='0.154'/>
</phase>
<phase name='codeemit' stamp='0.154'>
<phase_done name='codeemit' stamp='0.154'/>
</phase>
<phase name='codeinstall' stamp='0.154'>
<dependency type='leaf_type' ctxk='817'/>
<dependency type='unique_concrete_method' ctxk='818' x='822'/>
<dependency type='unique_concrete_method' ctxk='818' x='826'/>
<phase_done name='codeinstall' stamp='0.174'/>
</phase>
<code_cache total_blobs='253' nmethods='18' adapters='150' free_code_cache='250524160'/>
<task_done success='1' nmsize='8680' count='591' backedge_count='8454' inlined_bytes='159' stamp='0.174'/>
</task>
<task compile_id='21' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='972' backedge_count='972' iicount='972' level='3' stamp='0.174'>
<phase name='buildIR' stamp='0.174'>
<type id='709' name='void'/>
<klass id='809' name='[B' flags='1041'/>
<type id='707' name='int'/>
<klass id='817' name='java/io/DataInputStream' flags='1'/>
<method id='818' holder='817' name='readFully' return='709' arguments='809 707 707' flags='17' bytes='63' iicount='972'/>
<parse method='818'  stamp='0.174'>
<bc code='183' bci='8'/>
<klass id='821' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='822' holder='821' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='34'/>
<klass id='782' name='java/io/InputStream' flags='1025'/>
<method id='824' holder='782' name='read' return='707' arguments='809 707 707' flags='1' bytes='109' iicount='1'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<klass id='825' name='java/io/EOFException' unloaded='1'/>
<method id='826' holder='825' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='826' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.174'/>
</parse>
<phase name='optimize_blocks' stamp='0.174'>
<phase_done name='optimize_blocks' stamp='0.174'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.174'>
<phase_done name='rangeCheckElimination' stamp='0.174'/>
</phase>
<phase name='optimize_null_checks' stamp='0.174'>
<phase_done name='optimize_null_checks' stamp='0.174'/>
</phase>
<phase_done name='buildIR' stamp='0.174'/>
</phase>
<phase name='emit_lir' stamp='0.174'>
<phase name='lirGeneration' stamp='0.174'>
<phase_done name='lirGeneration' stamp='0.174'/>
</phase>
<phase name='linearScan' stamp='0.174'>
<phase_done name='linearScan' stamp='0.174'/>
</phase>
<phase_done name='emit_lir' stamp='0.174'/>
</phase>
<phase name='codeemit' stamp='0.174'>
<phase_done name='codeemit' stamp='0.174'/>
</phase>
<phase name='codeinstall' stamp='0.174'>
<phase_done name='codeinstall' stamp='0.177'/>
</phase>
<code_cache total_blobs='254' nmethods='19' adapters='150' free_code_cache='250521856'/>
<task_done success='1' nmsize='1128' count='974' backedge_count='974' stamp='0.177'/>
</task>
<task compile_id='22' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='972' backedge_count='11' iicount='972' level='3' stamp='0.177'>
<phase name='buildIR' stamp='0.177'>
<type id='707' name='int'/>
<klass id='809' name='[B' flags='1041'/>
<klass id='817' name='java/io/BufferedInputStream' flags='1'/>
<method id='818' holder='817' name='read' return='707' arguments='809 707 707' flags='33' bytes='113' iicount='972'/>
<parse method='818'  stamp='0.177'>
<bc code='183' bci='1'/>
<method id='821' holder='817' name='getBufIfOpen' return='809' flags='2' bytes='21' compile_id='16' compiler='C1' level='3' iicount='7083'/>
<call method='821' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='15'/>
<type id='709' name='void'/>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='823' name='java/io/IOException' unloaded='1'/>
<method id='825' holder='823' name='&lt;init&gt;' return='709' arguments='715' unloaded='1'/>
<call method='825' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.177'/>
</parse>
<bc code='183' bci='26'/>
<klass id='826' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='827' holder='826' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='827' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='49'/>
<method id='828' holder='817' name='read1' return='707' arguments='809 707 707' flags='2' bytes='108' iicount='983'/>
<call method='828' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='101'/>
<klass id='782' name='java/io/InputStream' flags='1025'/>
<method id='831' holder='782' name='available' return='707' flags='1' bytes='2' iicount='1'/>
<call method='831' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.177'/>
</parse>
<phase name='optimize_blocks' stamp='0.177'>
<phase_done name='optimize_blocks' stamp='0.177'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.177'>
<phase_done name='rangeCheckElimination' stamp='0.177'/>
</phase>
<phase name='optimize_null_checks' stamp='0.177'>
<phase_done name='optimize_null_checks' stamp='0.177'/>
</phase>
<phase_done name='buildIR' stamp='0.177'/>
</phase>
<phase name='emit_lir' stamp='0.177'>
<phase name='lirGeneration' stamp='0.177'>
<phase_done name='lirGeneration' stamp='0.177'/>
</phase>
<phase name='linearScan' stamp='0.177'>
<phase_done name='linearScan' stamp='0.177'/>
</phase>
<phase_done name='emit_lir' stamp='0.177'/>
</phase>
<phase name='codeemit' stamp='0.177'>
<phase_done name='codeemit' stamp='0.178'/>
</phase>
<phase name='codeinstall' stamp='0.178'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.183'/>
</phase>
<code_cache total_blobs='257' nmethods='20' adapters='152' free_code_cache='250516864'/>
<task_done success='1' nmsize='2328' count='972' backedge_count='11' inlined_bytes='21' stamp='0.183'/>
</task>
<task compile_id='23' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='983' iicount='983' level='3' stamp='0.183'>
<phase name='buildIR' stamp='0.183'>
<type id='707' name='int'/>
<klass id='809' name='[B' flags='1041'/>
<klass id='817' name='java/io/BufferedInputStream' flags='1'/>
<method id='818' holder='817' name='read1' return='707' arguments='809 707 707' flags='2' bytes='108' iicount='983'/>
<parse method='818'  stamp='0.183'>
<bc code='183' bci='18'/>
<method id='820' holder='817' name='getBufIfOpen' return='809' flags='2' bytes='21' compile_id='16' compiler='C1' level='3' iicount='7083'/>
<call method='820' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<parse method='820'>
<bc code='183' bci='15'/>
<type id='709' name='void'/>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='822' name='java/io/IOException' unloaded='1'/>
<method id='824' holder='822' name='&lt;init&gt;' return='709' arguments='715' unloaded='1'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='183' bci='33'/>
<klass id='782' name='java/io/InputStream' flags='1025'/>
<method id='825' holder='817' name='getInIfOpen' return='782' flags='2' bytes='21' iicount='13'/>
<call method='825' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='183' bci='15'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='39'/>
<method id='828' holder='782' name='read' return='707' arguments='809 707 707' flags='1' bytes='109' iicount='1'/>
<call method='828' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='44'/>
<method id='829' holder='817' name='fill' return='709' flags='2' bytes='233' iicount='13'/>
<call method='829' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='80'/>
<call method='820' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<parse method='820'>
<bc code='183' bci='15'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='184' bci='91'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='832' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='832' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.183'/>
</parse>
<phase name='optimize_blocks' stamp='0.183'>
<phase_done name='optimize_blocks' stamp='0.183'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.183'>
<phase_done name='rangeCheckElimination' stamp='0.183'/>
</phase>
<phase name='optimize_null_checks' stamp='0.183'>
<phase_done name='optimize_null_checks' stamp='0.183'/>
</phase>
<phase_done name='buildIR' stamp='0.183'/>
</phase>
<phase name='emit_lir' stamp='0.183'>
<phase name='lirGeneration' stamp='0.183'>
<phase_done name='lirGeneration' stamp='0.183'/>
</phase>
<phase name='linearScan' stamp='0.183'>
<phase_done name='linearScan' stamp='0.184'/>
</phase>
<phase_done name='emit_lir' stamp='0.184'/>
</phase>
<phase name='codeemit' stamp='0.184'>
<phase_done name='codeemit' stamp='0.184'/>
</phase>
<phase name='codeinstall' stamp='0.184'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.189'/>
</phase>
<code_cache total_blobs='258' nmethods='21' adapters='152' free_code_cache='250512640'/>
<task_done success='1' nmsize='2104' count='983' inlined_bytes='63' stamp='0.189'/>
</task>
<task compile_id='24' method='java/io/DataInputStream readShort ()S' bytes='40' count='1960' iicount='1960' level='3' stamp='0.189'>
<phase name='buildIR' stamp='0.189'>
<type id='706' name='short'/>
<klass id='817' name='java/io/DataInputStream' flags='1'/>
<method id='818' holder='817' name='readShort' return='706' flags='17' bytes='40' iicount='1960'/>
<parse method='818'  stamp='0.189'>
<bc code='182' bci='4'/>
<type id='707' name='int'/>
<klass id='782' name='java/io/InputStream' flags='1025'/>
<method id='822' holder='782' name='read' return='707' flags='1025' bytes='0' iicount='1'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='709' name='void'/>
<klass id='823' name='java/io/EOFException' unloaded='1'/>
<method id='824' holder='823' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.189'/>
</parse>
<phase name='optimize_blocks' stamp='0.189'>
<phase_done name='optimize_blocks' stamp='0.189'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.189'>
<phase_done name='rangeCheckElimination' stamp='0.189'/>
</phase>
<phase name='optimize_null_checks' stamp='0.189'>
<phase_done name='optimize_null_checks' stamp='0.189'/>
</phase>
<phase_done name='buildIR' stamp='0.189'/>
</phase>
<phase name='emit_lir' stamp='0.189'>
<phase name='lirGeneration' stamp='0.189'>
<phase_done name='lirGeneration' stamp='0.189'/>
</phase>
<phase name='linearScan' stamp='0.189'>
<phase_done name='linearScan' stamp='0.189'/>
</phase>
<phase_done name='emit_lir' stamp='0.189'/>
</phase>
<phase name='codeemit' stamp='0.189'>
<phase_done name='codeemit' stamp='0.189'/>
</phase>
<phase name='codeinstall' stamp='0.189'>
<phase_done name='codeinstall' stamp='0.191'/>
</phase>
<code_cache total_blobs='259' nmethods='22' adapters='152' free_code_cache='250510784'/>
<task_done success='1' nmsize='936' count='1960' stamp='0.191'/>
</task>
<task compile_id='19' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='591' iicount='591' level='3' stamp='0.191'>
<phase name='buildIR' stamp='0.191'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/io/DataInputStream' flags='1'/>
<method id='818' holder='817' name='readUTF' return='715' flags='17' bytes='5' iicount='591'/>
<parse method='818'  stamp='0.191'>
<bc code='184' bci='1'/>
<klass id='820' name='java/io/DataInput' flags='1537'/>
<method id='821' holder='817' name='readUTF' return='715' arguments='820' flags='25' bytes='501' compile_id='18' compiler='C1' level='3' iicount='591'/>
<call method='821' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.191'/>
</parse>
<phase name='optimize_blocks' stamp='0.191'>
<phase_done name='optimize_blocks' stamp='0.191'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.191'>
<phase_done name='rangeCheckElimination' stamp='0.191'/>
</phase>
<phase name='optimize_null_checks' stamp='0.191'>
<phase_done name='optimize_null_checks' stamp='0.191'/>
</phase>
<phase_done name='buildIR' stamp='0.191'/>
</phase>
<phase name='emit_lir' stamp='0.191'>
<phase name='lirGeneration' stamp='0.191'>
<phase_done name='lirGeneration' stamp='0.191'/>
</phase>
<phase name='linearScan' stamp='0.191'>
<phase_done name='linearScan' stamp='0.191'/>
</phase>
<phase_done name='emit_lir' stamp='0.191'/>
</phase>
<phase name='codeemit' stamp='0.191'>
<phase_done name='codeemit' stamp='0.191'/>
</phase>
<phase name='codeinstall' stamp='0.191'>
<phase_done name='codeinstall' stamp='0.192'/>
</phase>
<code_cache total_blobs='260' nmethods='23' adapters='152' free_code_cache='250509824'/>
<task_done success='1' nmsize='392' count='591' stamp='0.192'/>
</task>
<task compile_id='27' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='477' iicount='477' level='3' stamp='0.192'>
<phase name='buildIR' stamp='0.192'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='818' holder='817' name='getProperties' return='707' arguments='707' flags='0' bytes='11' iicount='477'/>
<parse method='818'  stamp='0.192'>
<parse_done stamp='0.192'/>
</parse>
<phase name='optimize_blocks' stamp='0.192'>
<phase_done name='optimize_blocks' stamp='0.192'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.192'>
<phase_done name='rangeCheckElimination' stamp='0.192'/>
</phase>
<phase name='optimize_null_checks' stamp='0.192'>
<phase_done name='optimize_null_checks' stamp='0.192'/>
</phase>
<phase_done name='buildIR' stamp='0.192'/>
</phase>
<phase name='emit_lir' stamp='0.192'>
<phase name='lirGeneration' stamp='0.192'>
<phase_done name='lirGeneration' stamp='0.192'/>
</phase>
<phase name='linearScan' stamp='0.192'>
<phase_done name='linearScan' stamp='0.192'/>
</phase>
<phase_done name='emit_lir' stamp='0.192'/>
</phase>
<phase name='codeemit' stamp='0.192'>
<phase_done name='codeemit' stamp='0.192'/>
</phase>
<phase name='codeinstall' stamp='0.192'>
<phase_done name='codeinstall' stamp='0.193'/>
</phase>
<code_cache total_blobs='261' nmethods='24' adapters='152' free_code_cache='250508800'/>
<task_done success='1' nmsize='400' count='477' stamp='0.193'/>
</task>
<task compile_id='26' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='477' iicount='477' level='3' stamp='0.193'>
<phase name='buildIR' stamp='0.193'>
<klass id='817' name='java/lang/CharacterData' flags='1024'/>
<type id='707' name='int'/>
<method id='818' holder='817' name='of' return='817' arguments='707' flags='24' bytes='120' iicount='477'/>
<parse method='818'  stamp='0.193'>
<parse_done stamp='0.193'/>
</parse>
<phase name='optimize_blocks' stamp='0.193'>
<phase_done name='optimize_blocks' stamp='0.193'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.193'>
<phase_done name='rangeCheckElimination' stamp='0.193'/>
</phase>
<phase name='optimize_null_checks' stamp='0.193'>
<phase_done name='optimize_null_checks' stamp='0.193'/>
</phase>
<phase_done name='buildIR' stamp='0.193'/>
</phase>
<phase name='emit_lir' stamp='0.193'>
<phase name='lirGeneration' stamp='0.193'>
<phase_done name='lirGeneration' stamp='0.193'/>
</phase>
<phase name='linearScan' stamp='0.193'>
<phase_done name='linearScan' stamp='0.193'/>
</phase>
<phase_done name='emit_lir' stamp='0.193'/>
</phase>
<phase name='codeemit' stamp='0.193'>
<phase_done name='codeemit' stamp='0.193'/>
</phase>
<phase name='codeinstall' stamp='0.193'>
<phase_done name='codeinstall' stamp='0.198'/>
</phase>
<code_cache total_blobs='264' nmethods='25' adapters='154' free_code_cache='250505024'/>
<task_done success='1' nmsize='1456' count='477' stamp='0.198'/>
</task>
<task compile_id='20' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='591' iicount='591' level='3' stamp='0.198'>
<phase name='buildIR' stamp='0.198'>
<type id='707' name='int'/>
<klass id='817' name='java/io/DataInputStream' flags='1'/>
<method id='818' holder='817' name='readUnsignedShort' return='707' flags='17' bytes='39' iicount='591'/>
<parse method='818'  stamp='0.198'>
<bc code='182' bci='4'/>
<klass id='782' name='java/io/InputStream' flags='1025'/>
<method id='822' holder='782' name='read' return='707' flags='1025' bytes='0' iicount='1'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='709' name='void'/>
<klass id='823' name='java/io/EOFException' unloaded='1'/>
<method id='824' holder='823' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='824' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.198'/>
</parse>
<phase name='optimize_blocks' stamp='0.198'>
<phase_done name='optimize_blocks' stamp='0.198'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.198'>
<phase_done name='rangeCheckElimination' stamp='0.198'/>
</phase>
<phase name='optimize_null_checks' stamp='0.198'>
<phase_done name='optimize_null_checks' stamp='0.198'/>
</phase>
<phase_done name='buildIR' stamp='0.198'/>
</phase>
<phase name='emit_lir' stamp='0.198'>
<phase name='lirGeneration' stamp='0.198'>
<phase_done name='lirGeneration' stamp='0.198'/>
</phase>
<phase name='linearScan' stamp='0.198'>
<phase_done name='linearScan' stamp='0.198'/>
</phase>
<phase_done name='emit_lir' stamp='0.198'/>
</phase>
<phase name='codeemit' stamp='0.198'>
<phase_done name='codeemit' stamp='0.198'/>
</phase>
<phase name='codeinstall' stamp='0.198'>
<phase_done name='codeinstall' stamp='0.200'/>
</phase>
<code_cache total_blobs='265' nmethods='26' adapters='154' free_code_cache='250503168'/>
<task_done success='1' nmsize='936' count='591' stamp='0.200'/>
</task>
<task compile_id='25' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='542' iicount='542' level='3' stamp='0.200'>
<phase name='buildIR' stamp='0.200'>
<type id='707' name='int'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='817' name='java/util/HashMap' flags='1'/>
<method id='818' holder='817' name='hash' return='707' arguments='714' flags='24' bytes='20' iicount='542'/>
<parse method='818'  stamp='0.200'>
<bc code='182' bci='9'/>
<method id='820' holder='714' name='hashCode' return='707' flags='257' bytes='0' iicount='22'/>
<call method='820' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.200'/>
</parse>
<phase name='optimize_blocks' stamp='0.200'>
<phase_done name='optimize_blocks' stamp='0.200'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.200'>
<phase_done name='rangeCheckElimination' stamp='0.200'/>
</phase>
<phase name='optimize_null_checks' stamp='0.200'>
<phase_done name='optimize_null_checks' stamp='0.200'/>
</phase>
<phase_done name='buildIR' stamp='0.200'/>
</phase>
<phase name='emit_lir' stamp='0.200'>
<phase name='lirGeneration' stamp='0.200'>
<phase_done name='lirGeneration' stamp='0.200'/>
</phase>
<phase name='linearScan' stamp='0.200'>
<phase_done name='linearScan' stamp='0.200'/>
</phase>
<phase_done name='emit_lir' stamp='0.200'/>
</phase>
<phase name='codeemit' stamp='0.200'>
<phase_done name='codeemit' stamp='0.200'/>
</phase>
<phase name='codeinstall' stamp='0.200'>
<phase_done name='codeinstall' stamp='0.202'/>
</phase>
<code_cache total_blobs='266' nmethods='27' adapters='154' free_code_cache='250501952'/>
<task_done success='1' nmsize='584' count='543' stamp='0.202'/>
</task>
<task compile_id='28' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='117' backedge_count='6201' iicount='117' level='3' stamp='0.203'>
<phase name='buildIR' stamp='0.203'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/io/UnixFileSystem' flags='0'/>
<method id='818' holder='817' name='normalize' return='715' arguments='715' flags='1' bytes='75' iicount='117'/>
<parse method='818'  stamp='0.203'>
<bc code='182' bci='1'/>
<type id='707' name='int'/>
<method id='820' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='7' compiler='C1' level='3' iicount='1174'/>
<call method='820' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='820'>
<parse_done stamp='0.203'/>
</parse>
<bc code='182' bci='19'/>
<type id='702' name='char'/>
<method id='822' holder='715' name='charAt' return='702' arguments='707' flags='1' bytes='29' compile_id='4' compiler='C2' level='4' iicount='7095'/>
<call method='822' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='822'>
<bc code='183' bci='18'/>
<type id='709' name='void'/>
<klass id='824' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='825' holder='824' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='825' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.203'/>
</parse>
<bc code='183' bci='44'/>
<method id='826' holder='817' name='normalize' return='715' arguments='715 707 707' flags='2' bytes='132' iicount='1'/>
<call method='826' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='69'/>
<call method='826' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.203'/>
</parse>
<phase name='optimize_blocks' stamp='0.203'>
<phase_done name='optimize_blocks' stamp='0.203'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.203'>
<phase_done name='rangeCheckElimination' stamp='0.203'/>
</phase>
<phase name='optimize_null_checks' stamp='0.203'>
<phase_done name='optimize_null_checks' stamp='0.203'/>
</phase>
<phase_done name='buildIR' stamp='0.203'/>
</phase>
<phase name='emit_lir' stamp='0.203'>
<phase name='lirGeneration' stamp='0.203'>
<phase_done name='lirGeneration' stamp='0.203'/>
</phase>
<phase name='linearScan' stamp='0.203'>
<phase_done name='linearScan' stamp='0.203'/>
</phase>
<phase_done name='emit_lir' stamp='0.203'/>
</phase>
<phase name='codeemit' stamp='0.203'>
<phase_done name='codeemit' stamp='0.204'/>
</phase>
<phase name='codeinstall' stamp='0.204'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.207'/>
</phase>
<code_cache total_blobs='268' nmethods='28' adapters='154' free_code_cache='250496832'/>
<task_done success='1' nmsize='1608' count='123' backedge_count='6462' inlined_bytes='35' stamp='0.207'/>
</task>
<task compile_id='31' method='java/lang/Character toLowerCase (C)C' bytes='6' count='405' iicount='405' level='3' stamp='0.207'>
<phase name='buildIR' stamp='0.207'>
<type id='702' name='char'/>
<klass id='795' name='java/lang/Character' flags='17'/>
<method id='817' holder='795' name='toLowerCase' return='702' arguments='702' flags='9' bytes='6' iicount='405'/>
<parse method='817'  stamp='0.207'>
<bc code='184' bci='1'/>
<type id='707' name='int'/>
<method id='819' holder='795' name='toLowerCase' return='707' arguments='707' flags='9' bytes='9' iicount='405'/>
<call method='819' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<bc code='184' bci='1'/>
<klass id='821' name='java/lang/CharacterData' flags='1024'/>
<method id='822' holder='821' name='of' return='821' arguments='707' flags='24' bytes='120' compile_id='26' compiler='C1' level='3' iicount='673'/>
<call method='822' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='824' holder='821' name='toLowerCase' return='707' arguments='707' flags='1024' bytes='0' iicount='1'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.207'/>
</parse>
<parse_done stamp='0.207'/>
</parse>
<phase name='optimize_blocks' stamp='0.207'>
<phase_done name='optimize_blocks' stamp='0.207'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.207'>
<phase_done name='rangeCheckElimination' stamp='0.207'/>
</phase>
<phase name='optimize_null_checks' stamp='0.207'>
<phase_done name='optimize_null_checks' stamp='0.208'/>
</phase>
<phase_done name='buildIR' stamp='0.208'/>
</phase>
<phase name='emit_lir' stamp='0.208'>
<phase name='lirGeneration' stamp='0.208'>
<phase_done name='lirGeneration' stamp='0.208'/>
</phase>
<phase name='linearScan' stamp='0.208'>
<phase_done name='linearScan' stamp='0.208'/>
</phase>
<phase_done name='emit_lir' stamp='0.208'/>
</phase>
<phase name='codeemit' stamp='0.208'>
<phase_done name='codeemit' stamp='0.208'/>
</phase>
<phase name='codeinstall' stamp='0.208'>
<phase_done name='codeinstall' stamp='0.209'/>
</phase>
<code_cache total_blobs='269' nmethods='29' adapters='154' free_code_cache='250495424'/>
<task_done success='1' nmsize='664' count='431' inlined_bytes='9' stamp='0.209'/>
</task>
<task compile_id='35' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3842' iicount='3842' level='1' stamp='0.211'>
<phase name='buildIR' stamp='0.211'>
<type id='709' name='void'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='817' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='3842'/>
<parse method='817'  stamp='0.211'>
<parse_done stamp='0.211'/>
</parse>
<phase name='optimize_blocks' stamp='0.211'>
<phase_done name='optimize_blocks' stamp='0.211'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.211'>
<phase_done name='rangeCheckElimination' stamp='0.211'/>
</phase>
<phase name='optimize_null_checks' stamp='0.211'>
<phase_done name='optimize_null_checks' stamp='0.211'/>
</phase>
<phase_done name='buildIR' stamp='0.211'/>
</phase>
<phase name='emit_lir' stamp='0.211'>
<phase name='lirGeneration' stamp='0.211'>
<phase_done name='lirGeneration' stamp='0.211'/>
</phase>
<phase name='linearScan' stamp='0.211'>
<phase_done name='linearScan' stamp='0.211'/>
</phase>
<phase_done name='emit_lir' stamp='0.211'/>
</phase>
<phase name='codeemit' stamp='0.211'>
<phase_done name='codeemit' stamp='0.211'/>
</phase>
<phase name='codeinstall' stamp='0.211'>
<phase_done name='codeinstall' stamp='0.212'/>
</phase>
<code_cache total_blobs='271' nmethods='31' adapters='154' free_code_cache='250493248'/>
<task_done success='1' nmsize='272' count='3992' stamp='0.212'/>
</task>
<task compile_id='29' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='342' iicount='342' level='3' stamp='0.212'>
<phase name='buildIR' stamp='0.212'>
<klass id='818' name='java/util/HashMap$Node' flags='8'/>
<type id='707' name='int'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='817' name='java/util/HashMap' flags='1'/>
<method id='819' holder='817' name='newNode' return='818' arguments='707 714 714 818' flags='0' bytes='13' iicount='342'/>
<parse method='819'  stamp='0.212'>
<bc code='183' bci='9'/>
<type id='709' name='void'/>
<method id='821' holder='818' name='&lt;init&gt;' return='709' arguments='707 714 714 818' flags='0' bytes='26' iicount='408'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='1'/>
<method id='823' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' compile_id='35' compiler='C1' level='1' iicount='3992'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.212'/>
</parse>
<parse_done stamp='0.212'/>
</parse>
<parse_done stamp='0.212'/>
</parse>
<phase name='optimize_blocks' stamp='0.212'>
<phase_done name='optimize_blocks' stamp='0.212'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.212'>
<phase_done name='rangeCheckElimination' stamp='0.212'/>
</phase>
<phase name='optimize_null_checks' stamp='0.212'>
<phase_done name='optimize_null_checks' stamp='0.212'/>
</phase>
<phase_done name='buildIR' stamp='0.212'/>
</phase>
<phase name='emit_lir' stamp='0.212'>
<phase name='lirGeneration' stamp='0.212'>
<phase_done name='lirGeneration' stamp='0.212'/>
</phase>
<phase name='linearScan' stamp='0.212'>
<phase_done name='linearScan' stamp='0.212'/>
</phase>
<phase_done name='emit_lir' stamp='0.212'/>
</phase>
<phase name='codeemit' stamp='0.212'>
<phase_done name='codeemit' stamp='0.213'/>
</phase>
<phase name='codeinstall' stamp='0.213'>
<phase_done name='codeinstall' stamp='0.215'/>
</phase>
<code_cache total_blobs='272' nmethods='32' adapters='154' free_code_cache='250491776'/>
<task_done success='1' nmsize='688' count='342' inlined_bytes='27' stamp='0.215'/>
</task>
<task compile_id='30' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='342' iicount='342' level='3' stamp='0.215'>
<phase name='buildIR' stamp='0.215'>
<type id='709' name='void'/>
<type id='701' name='boolean'/>
<klass id='817' name='java/util/HashMap' flags='1'/>
<method id='818' holder='817' name='afterNodeInsertion' return='709' arguments='701' flags='0' bytes='1' iicount='342'/>
<parse method='818'  stamp='0.215'>
<parse_done stamp='0.215'/>
</parse>
<phase name='optimize_blocks' stamp='0.215'>
<phase_done name='optimize_blocks' stamp='0.215'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.215'>
<phase_done name='rangeCheckElimination' stamp='0.215'/>
</phase>
<phase name='optimize_null_checks' stamp='0.215'>
<phase_done name='optimize_null_checks' stamp='0.215'/>
</phase>
<phase_done name='buildIR' stamp='0.215'/>
</phase>
<phase name='emit_lir' stamp='0.215'>
<phase name='lirGeneration' stamp='0.215'>
<phase_done name='lirGeneration' stamp='0.215'/>
</phase>
<phase name='linearScan' stamp='0.215'>
<phase_done name='linearScan' stamp='0.215'/>
</phase>
<phase_done name='emit_lir' stamp='0.215'/>
</phase>
<phase name='codeemit' stamp='0.215'>
<phase_done name='codeemit' stamp='0.215'/>
</phase>
<phase name='codeinstall' stamp='0.215'>
<phase_done name='codeinstall' stamp='0.216'/>
</phase>
<code_cache total_blobs='273' nmethods='33' adapters='154' free_code_cache='250490944'/>
<task_done success='1' nmsize='336' count='342' stamp='0.216'/>
</task>
<task compile_id='32' method='java/lang/Character toLowerCase (I)I' bytes='9' count='444' iicount='444' level='3' stamp='0.216'>
<phase name='buildIR' stamp='0.216'>
<type id='707' name='int'/>
<klass id='795' name='java/lang/Character' flags='17'/>
<method id='817' holder='795' name='toLowerCase' return='707' arguments='707' flags='9' bytes='9' iicount='444'/>
<parse method='817'  stamp='0.216'>
<bc code='184' bci='1'/>
<klass id='820' name='java/lang/CharacterData' flags='1024'/>
<method id='821' holder='820' name='of' return='820' arguments='707' flags='24' bytes='120' compile_id='26' compiler='C1' level='3' iicount='856'/>
<call method='821' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='823' holder='820' name='toLowerCase' return='707' arguments='707' flags='1024' bytes='0' iicount='1'/>
<call method='823' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.216'/>
</parse>
<phase name='optimize_blocks' stamp='0.216'>
<phase_done name='optimize_blocks' stamp='0.216'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.216'>
<phase_done name='rangeCheckElimination' stamp='0.216'/>
</phase>
<phase name='optimize_null_checks' stamp='0.216'>
<phase_done name='optimize_null_checks' stamp='0.216'/>
</phase>
<phase_done name='buildIR' stamp='0.216'/>
</phase>
<phase name='emit_lir' stamp='0.216'>
<phase name='lirGeneration' stamp='0.216'>
<phase_done name='lirGeneration' stamp='0.216'/>
</phase>
<phase name='linearScan' stamp='0.216'>
<phase_done name='linearScan' stamp='0.216'/>
</phase>
<phase_done name='emit_lir' stamp='0.216'/>
</phase>
<phase name='codeemit' stamp='0.216'>
<phase_done name='codeemit' stamp='0.216'/>
</phase>
<phase name='codeinstall' stamp='0.216'>
<phase_done name='codeinstall' stamp='0.217'/>
</phase>
<code_cache total_blobs='274' nmethods='34' adapters='154' free_code_cache='250489728'/>
<task_done success='1' nmsize='568' count='458' stamp='0.217'/>
</task>
<task compile_id='36' method='java/lang/String indexOf (I)I' bytes='7' count='532' iicount='532' level='3' stamp='0.217'>
<phase name='buildIR' stamp='0.217'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='707' flags='1' bytes='7' iicount='532'/>
<parse method='817'  stamp='0.217'>
<bc code='182' bci='3'/>
<method id='819' holder='715' name='indexOf' return='707' arguments='707 707' flags='1' bytes='70' compile_id='5' compiler='C1' level='3' iicount='538'/>
<call method='819' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.217'/>
</parse>
<phase name='optimize_blocks' stamp='0.217'>
<phase_done name='optimize_blocks' stamp='0.217'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.217'>
<phase_done name='rangeCheckElimination' stamp='0.217'/>
</phase>
<phase name='optimize_null_checks' stamp='0.217'>
<phase_done name='optimize_null_checks' stamp='0.217'/>
</phase>
<phase_done name='buildIR' stamp='0.217'/>
</phase>
<phase name='emit_lir' stamp='0.217'>
<phase name='lirGeneration' stamp='0.217'>
<phase_done name='lirGeneration' stamp='0.217'/>
</phase>
<phase name='linearScan' stamp='0.217'>
<phase_done name='linearScan' stamp='0.218'/>
</phase>
<phase_done name='emit_lir' stamp='0.218'/>
</phase>
<phase name='codeemit' stamp='0.218'>
<phase_done name='codeemit' stamp='0.218'/>
</phase>
<phase name='codeinstall' stamp='0.218'>
<phase_done name='codeinstall' stamp='0.219'/>
</phase>
<code_cache total_blobs='275' nmethods='35' adapters='154' free_code_cache='250488640'/>
<task_done success='1' nmsize='520' count='532' stamp='0.219'/>
</task>
<task compile_id='38' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='517' iicount='517' level='1' stamp='0.219'>
<phase name='buildIR' stamp='0.219'>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='740' name='java/lang/ref/Reference' flags='1025'/>
<method id='817' holder='740' name='get' return='714' flags='1' bytes='5' iicount='517'/>
<parse method='817'  stamp='0.219'>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<phase_done name='codeinstall' stamp='0.220'/>
</phase>
<code_cache total_blobs='276' nmethods='36' adapters='154' free_code_cache='250487936'/>
<task_done success='1' nmsize='272' count='523' stamp='0.220'/>
</task>
<task compile_id='39' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='405' iicount='405' level='3' stamp='0.220'>
<phase name='buildIR' stamp='0.220'>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' iicount='405'/>
<parse method='817'  stamp='0.220'>
<bc code='183' bci='2'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='8' compiler='C1' level='3' iicount='465'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.220'/>
</parse>
<phase name='optimize_blocks' stamp='0.220'>
<phase_done name='optimize_blocks' stamp='0.220'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.220'>
<phase_done name='rangeCheckElimination' stamp='0.220'/>
</phase>
<phase name='optimize_null_checks' stamp='0.220'>
<phase_done name='optimize_null_checks' stamp='0.220'/>
</phase>
<phase_done name='buildIR' stamp='0.220'/>
</phase>
<phase name='emit_lir' stamp='0.220'>
<phase name='lirGeneration' stamp='0.220'>
<phase_done name='lirGeneration' stamp='0.220'/>
</phase>
<phase name='linearScan' stamp='0.220'>
<phase_done name='linearScan' stamp='0.220'/>
</phase>
<phase_done name='emit_lir' stamp='0.220'/>
</phase>
<phase name='codeemit' stamp='0.220'>
<phase_done name='codeemit' stamp='0.220'/>
</phase>
<phase name='codeinstall' stamp='0.220'>
<phase_done name='codeinstall' stamp='0.221'/>
</phase>
<code_cache total_blobs='277' nmethods='37' adapters='154' free_code_cache='250486976'/>
<task_done success='1' nmsize='392' count='417' stamp='0.221'/>
</task>
<task compile_id='41' method='java/lang/String length ()I' bytes='6' count='1536' iicount='1536' level='1' stamp='0.221'>
<phase name='buildIR' stamp='0.221'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='7' compiler='C1' level='3' iicount='1538'/>
<parse method='817'  stamp='0.221'>
<parse_done stamp='0.221'/>
</parse>
<phase name='optimize_blocks' stamp='0.221'>
<phase_done name='optimize_blocks' stamp='0.221'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.221'>
<phase_done name='rangeCheckElimination' stamp='0.221'/>
</phase>
<phase name='optimize_null_checks' stamp='0.221'>
<phase_done name='optimize_null_checks' stamp='0.221'/>
</phase>
<phase_done name='buildIR' stamp='0.221'/>
</phase>
<phase name='emit_lir' stamp='0.221'>
<phase name='lirGeneration' stamp='0.221'>
<phase_done name='lirGeneration' stamp='0.221'/>
</phase>
<phase name='linearScan' stamp='0.221'>
<phase_done name='linearScan' stamp='0.221'/>
</phase>
<phase_done name='emit_lir' stamp='0.221'/>
</phase>
<phase name='codeemit' stamp='0.221'>
<phase_done name='codeemit' stamp='0.221'/>
</phase>
<phase name='codeinstall' stamp='0.221'>
<phase_done name='codeinstall' stamp='0.222'/>
</phase>
<code_cache total_blobs='278' nmethods='38' adapters='154' free_code_cache='250486144'/>
<task_done success='1' nmsize='272' count='1563' stamp='0.222'/>
</task>
<task compile_id='42' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='216' backedge_count='13314' iicount='216' level='3' stamp='0.222'>
<phase name='buildIR' stamp='0.222'>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='809' name='[B' flags='1041'/>
<klass id='817' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='818' holder='817' name='encode' return='707' arguments='806 707 707 809' flags='1' bytes='359' iicount='216'/>
<parse method='818'  stamp='0.222'>
<bc code='184' bci='14'/>
<klass id='820' name='java/lang/Math' flags='17'/>
<method id='821' holder='820' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='10' compiler='C1' level='3' iicount='2427'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.222'/>
</parse>
<bc code='184' bci='139'/>
<type id='701' name='boolean'/>
<type id='702' name='char'/>
<klass id='795' name='java/lang/Character' flags='17'/>
<method id='823' holder='795' name='isSurrogate' return='701' arguments='702' flags='9' bytes='18' iicount='1'/>
<call method='823' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.222'/>
</parse>
<bc code='183' bci='157'/>
<type id='709' name='void'/>
<klass id='825' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='826' holder='825' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='826' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='827' holder='825' name='parse' return='707' arguments='702 806 707 707' unloaded='1'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='829' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='828' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='830' holder='828' name='malformedInputAction' return='829' flags='1' bytes='5' iicount='1'/>
<call method='830' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<parse_done stamp='0.223'/>
</parse>
<parse_done stamp='0.223'/>
</parse>
<phase name='optimize_blocks' stamp='0.223'>
<phase_done name='optimize_blocks' stamp='0.223'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.223'>
<phase_done name='rangeCheckElimination' stamp='0.223'/>
</phase>
<phase name='optimize_null_checks' stamp='0.223'>
<phase_done name='optimize_null_checks' stamp='0.223'/>
</phase>
<phase_done name='buildIR' stamp='0.223'/>
</phase>
<phase name='emit_lir' stamp='0.223'>
<phase name='lirGeneration' stamp='0.223'>
<phase_done name='lirGeneration' stamp='0.223'/>
</phase>
<phase name='linearScan' stamp='0.223'>
<phase_done name='linearScan' stamp='0.223'/>
</phase>
<phase_done name='emit_lir' stamp='0.223'/>
</phase>
<phase name='codeemit' stamp='0.223'>
<phase_done name='codeemit' stamp='0.223'/>
</phase>
<phase name='codeinstall' stamp='0.223'>
<phase_done name='codeinstall' stamp='0.231'/>
</phase>
<code_cache total_blobs='279' nmethods='39' adapters='154' free_code_cache='250480576'/>
<task_done success='1' nmsize='2872' count='255' backedge_count='15086' inlined_bytes='34' stamp='0.231'/>
</task>
<task compile_id='44' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='532' backedge_count='1070' iicount='532' level='3' stamp='0.231'>
<phase name='buildIR' stamp='0.231'>
<type id='701' name='boolean'/>
<klass id='715' name='java/lang/String' flags='17'/>
<type id='707' name='int'/>
<method id='817' holder='715' name='startsWith' return='701' arguments='715 707' flags='1' bytes='72' iicount='532'/>
<parse method='817'  stamp='0.231'>
<parse_done stamp='0.231'/>
</parse>
<phase name='optimize_blocks' stamp='0.231'>
<phase_done name='optimize_blocks' stamp='0.231'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.231'>
<phase_done name='rangeCheckElimination' stamp='0.231'/>
</phase>
<phase name='optimize_null_checks' stamp='0.231'>
<phase_done name='optimize_null_checks' stamp='0.231'/>
</phase>
<phase_done name='buildIR' stamp='0.231'/>
</phase>
<phase name='emit_lir' stamp='0.231'>
<phase name='lirGeneration' stamp='0.231'>
<phase_done name='lirGeneration' stamp='0.231'/>
</phase>
<phase name='linearScan' stamp='0.231'>
<phase_done name='linearScan' stamp='0.231'/>
</phase>
<phase_done name='emit_lir' stamp='0.231'/>
</phase>
<phase name='codeemit' stamp='0.231'>
<phase_done name='codeemit' stamp='0.231'/>
</phase>
<phase name='codeinstall' stamp='0.231'>
<phase_done name='codeinstall' stamp='0.234'/>
</phase>
<code_cache total_blobs='280' nmethods='40' adapters='154' free_code_cache='250478720'/>
<task_done success='1' nmsize='816' count='537' backedge_count='1262' stamp='0.234'/>
</task>
<task compile_id='33' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='568' iicount='568' level='3' stamp='0.234'>
<phase name='buildIR' stamp='0.234'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='818' holder='817' name='toLowerCase' return='707' arguments='707' flags='0' bytes='39' iicount='568'/>
<parse method='818'  stamp='0.234'>
<bc code='182' bci='4'/>
<method id='820' holder='817' name='getProperties' return='707' arguments='707' flags='0' bytes='11' compile_id='27' compiler='C1' level='3' iicount='1080'/>
<call method='820' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='820'>
<parse_done stamp='0.234'/>
</parse>
<parse_done stamp='0.234'/>
</parse>
<phase name='optimize_blocks' stamp='0.234'>
<phase_done name='optimize_blocks' stamp='0.234'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.234'>
<phase_done name='rangeCheckElimination' stamp='0.234'/>
</phase>
<phase name='optimize_null_checks' stamp='0.234'>
<phase_done name='optimize_null_checks' stamp='0.234'/>
</phase>
<phase_done name='buildIR' stamp='0.234'/>
</phase>
<phase name='emit_lir' stamp='0.234'>
<phase name='lirGeneration' stamp='0.234'>
<phase_done name='lirGeneration' stamp='0.234'/>
</phase>
<phase name='linearScan' stamp='0.234'>
<phase_done name='linearScan' stamp='0.234'/>
</phase>
<phase_done name='emit_lir' stamp='0.234'/>
</phase>
<phase name='codeemit' stamp='0.234'>
<phase_done name='codeemit' stamp='0.234'/>
</phase>
<phase name='codeinstall' stamp='0.234'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.236'/>
</phase>
<code_cache total_blobs='281' nmethods='41' adapters='154' free_code_cache='250477312'/>
<task_done success='1' nmsize='624' count='603' inlined_bytes='11' stamp='0.236'/>
</task>
<task compile_id='40' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='312' iicount='312' level='1' stamp='0.236'>
<phase name='buildIR' stamp='0.236'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/ThreadLocal' flags='1'/>
<method id='818' holder='817' name='access$400' return='707' arguments='817' flags='4104' bytes='5' iicount='312'/>
<parse method='818'  stamp='0.236'>
<parse_done stamp='0.236'/>
</parse>
<phase name='optimize_blocks' stamp='0.236'>
<phase_done name='optimize_blocks' stamp='0.236'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.236'>
<phase_done name='rangeCheckElimination' stamp='0.236'/>
</phase>
<phase name='optimize_null_checks' stamp='0.236'>
<phase_done name='optimize_null_checks' stamp='0.236'/>
</phase>
<phase_done name='buildIR' stamp='0.236'/>
</phase>
<phase name='emit_lir' stamp='0.236'>
<phase name='lirGeneration' stamp='0.236'>
<phase_done name='lirGeneration' stamp='0.236'/>
</phase>
<phase name='linearScan' stamp='0.236'>
<phase_done name='linearScan' stamp='0.236'/>
</phase>
<phase_done name='emit_lir' stamp='0.236'/>
</phase>
<phase name='codeemit' stamp='0.236'>
<phase_done name='codeemit' stamp='0.236'/>
</phase>
<phase name='codeinstall' stamp='0.236'>
<phase_done name='codeinstall' stamp='0.237'/>
</phase>
<code_cache total_blobs='282' nmethods='42' adapters='154' free_code_cache='250476544'/>
<task_done success='1' nmsize='240' count='318' stamp='0.237'/>
</task>
<task compile_id='50' method='java/lang/CharacterDataLatin1 toUpperCaseEx (I)I' bytes='71' count='544' iicount='544' level='3' stamp='0.237'>
<phase name='buildIR' stamp='0.237'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='818' holder='817' name='toUpperCaseEx' return='707' arguments='707' flags='0' bytes='71' iicount='544'/>
<parse method='818'  stamp='0.237'>
<bc code='182' bci='4'/>
<method id='820' holder='817' name='getProperties' return='707' arguments='707' flags='0' bytes='11' compile_id='27' compiler='C1' level='3' iicount='1185'/>
<call method='820' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='820'>
<parse_done stamp='0.237'/>
</parse>
<parse_done stamp='0.237'/>
</parse>
<phase name='optimize_blocks' stamp='0.237'>
<phase_done name='optimize_blocks' stamp='0.237'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.237'>
<phase_done name='rangeCheckElimination' stamp='0.237'/>
</phase>
<phase name='optimize_null_checks' stamp='0.237'>
<phase_done name='optimize_null_checks' stamp='0.237'/>
</phase>
<phase_done name='buildIR' stamp='0.237'/>
</phase>
<phase name='emit_lir' stamp='0.237'>
<phase name='lirGeneration' stamp='0.237'>
<phase_done name='lirGeneration' stamp='0.237'/>
</phase>
<phase name='linearScan' stamp='0.237'>
<phase_done name='linearScan' stamp='0.237'/>
</phase>
<phase_done name='emit_lir' stamp='0.237'/>
</phase>
<phase name='codeemit' stamp='0.237'>
<phase_done name='codeemit' stamp='0.237'/>
</phase>
<phase name='codeinstall' stamp='0.237'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.239'/>
</phase>
<code_cache total_blobs='283' nmethods='43' adapters='154' free_code_cache='250475008'/>
<task_done success='1' nmsize='688' count='544' inlined_bytes='11' stamp='0.239'/>
</task>
<task compile_id='49' method='java/lang/Character toUpperCaseEx (I)I' bytes='30' count='544' iicount='544' level='3' stamp='0.239'>
<phase name='buildIR' stamp='0.239'>
<type id='707' name='int'/>
<klass id='795' name='java/lang/Character' flags='17'/>
<method id='817' holder='795' name='toUpperCaseEx' return='707' arguments='707' flags='8' bytes='30' iicount='544'/>
<parse method='817'  stamp='0.239'>
<bc code='184' bci='22'/>
<klass id='821' name='java/lang/CharacterData' flags='1024'/>
<method id='822' holder='821' name='of' return='821' arguments='707' flags='24' bytes='120' compile_id='26' compiler='C1' level='3' iicount='1220'/>
<call method='822' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='26'/>
<method id='824' holder='821' name='toUpperCaseEx' return='707' arguments='707' flags='0' bytes='6' iicount='1'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.239'/>
</parse>
<phase name='optimize_blocks' stamp='0.239'>
<phase_done name='optimize_blocks' stamp='0.239'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.239'>
<phase_done name='rangeCheckElimination' stamp='0.239'/>
</phase>
<phase name='optimize_null_checks' stamp='0.239'>
<phase_done name='optimize_null_checks' stamp='0.239'/>
</phase>
<phase_done name='buildIR' stamp='0.239'/>
</phase>
<phase name='emit_lir' stamp='0.239'>
<phase name='lirGeneration' stamp='0.239'>
<phase_done name='lirGeneration' stamp='0.239'/>
</phase>
<phase name='linearScan' stamp='0.239'>
<phase_done name='linearScan' stamp='0.239'/>
</phase>
<phase_done name='emit_lir' stamp='0.239'/>
</phase>
<phase name='codeemit' stamp='0.239'>
<phase_done name='codeemit' stamp='0.239'/>
</phase>
<phase name='codeinstall' stamp='0.239'>
<phase_done name='codeinstall' stamp='0.241'/>
</phase>
<code_cache total_blobs='284' nmethods='44' adapters='154' free_code_cache='250473728'/>
<task_done success='1' nmsize='600' count='544' stamp='0.241'/>
</task>
<task compile_id='53' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='274' iicount='274' level='1' stamp='0.241'>
<phase name='buildIR' stamp='0.241'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='784' name='java/io/File' flags='1'/>
<method id='817' holder='784' name='getPath' return='715' flags='1' bytes='5' iicount='274'/>
<parse method='817'  stamp='0.241'>
<parse_done stamp='0.241'/>
</parse>
<phase name='optimize_blocks' stamp='0.241'>
<phase_done name='optimize_blocks' stamp='0.241'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.241'>
<phase_done name='rangeCheckElimination' stamp='0.241'/>
</phase>
<phase name='optimize_null_checks' stamp='0.241'>
<phase_done name='optimize_null_checks' stamp='0.241'/>
</phase>
<phase_done name='buildIR' stamp='0.241'/>
</phase>
<phase name='emit_lir' stamp='0.241'>
<phase name='lirGeneration' stamp='0.241'>
<phase_done name='lirGeneration' stamp='0.241'/>
</phase>
<phase name='linearScan' stamp='0.241'>
<phase_done name='linearScan' stamp='0.241'/>
</phase>
<phase_done name='emit_lir' stamp='0.241'/>
</phase>
<phase name='codeemit' stamp='0.241'>
<phase_done name='codeemit' stamp='0.241'/>
</phase>
<phase name='codeinstall' stamp='0.241'>
<phase_done name='codeinstall' stamp='0.242'/>
</phase>
<code_cache total_blobs='285' nmethods='45' adapters='154' free_code_cache='250472960'/>
<task_done success='1' nmsize='272' count='277' stamp='0.242'/>
</task>
<task compile_id='43' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='271' iicount='271' level='1' stamp='0.242'>
<phase name='buildIR' stamp='0.242'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getProtocol' return='715' flags='1' bytes='5' iicount='271'/>
<parse method='817'  stamp='0.242'>
<parse_done stamp='0.242'/>
</parse>
<phase name='optimize_blocks' stamp='0.242'>
<phase_done name='optimize_blocks' stamp='0.242'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.242'>
<phase_done name='rangeCheckElimination' stamp='0.242'/>
</phase>
<phase name='optimize_null_checks' stamp='0.242'>
<phase_done name='optimize_null_checks' stamp='0.242'/>
</phase>
<phase_done name='buildIR' stamp='0.242'/>
</phase>
<phase name='emit_lir' stamp='0.242'>
<phase name='lirGeneration' stamp='0.242'>
<phase_done name='lirGeneration' stamp='0.242'/>
</phase>
<phase name='linearScan' stamp='0.242'>
<phase_done name='linearScan' stamp='0.242'/>
</phase>
<phase_done name='emit_lir' stamp='0.242'/>
</phase>
<phase name='codeemit' stamp='0.242'>
<phase_done name='codeemit' stamp='0.242'/>
</phase>
<phase name='codeinstall' stamp='0.242'>
<phase_done name='codeinstall' stamp='0.242'/>
</phase>
<code_cache total_blobs='286' nmethods='46' adapters='154' free_code_cache='250472192'/>
<task_done success='1' nmsize='272' count='286' stamp='0.242'/>
</task>
<task compile_id='48' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='212' iicount='212' level='1' stamp='0.242'>
<phase name='buildIR' stamp='0.242'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getFile' return='715' flags='1' bytes='5' iicount='212'/>
<parse method='817'  stamp='0.242'>
<parse_done stamp='0.242'/>
</parse>
<phase name='optimize_blocks' stamp='0.242'>
<phase_done name='optimize_blocks' stamp='0.242'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.242'>
<phase_done name='rangeCheckElimination' stamp='0.242'/>
</phase>
<phase name='optimize_null_checks' stamp='0.242'>
<phase_done name='optimize_null_checks' stamp='0.242'/>
</phase>
<phase_done name='buildIR' stamp='0.243'/>
</phase>
<phase name='emit_lir' stamp='0.243'>
<phase name='lirGeneration' stamp='0.243'>
<phase_done name='lirGeneration' stamp='0.243'/>
</phase>
<phase name='linearScan' stamp='0.243'>
<phase_done name='linearScan' stamp='0.243'/>
</phase>
<phase_done name='emit_lir' stamp='0.243'/>
</phase>
<phase name='codeemit' stamp='0.243'>
<phase_done name='codeemit' stamp='0.243'/>
</phase>
<phase name='codeinstall' stamp='0.243'>
<phase_done name='codeinstall' stamp='0.243'/>
</phase>
<code_cache total_blobs='287' nmethods='47' adapters='154' free_code_cache='250471424'/>
<task_done success='1' nmsize='272' count='220' stamp='0.243'/>
</task>
<task compile_id='46' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='239' iicount='239' level='1' stamp='0.243'>
<phase name='buildIR' stamp='0.243'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getAuthority' return='715' flags='1' bytes='5' iicount='239'/>
<parse method='817'  stamp='0.243'>
<parse_done stamp='0.243'/>
</parse>
<phase name='optimize_blocks' stamp='0.243'>
<phase_done name='optimize_blocks' stamp='0.243'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.243'>
<phase_done name='rangeCheckElimination' stamp='0.243'/>
</phase>
<phase name='optimize_null_checks' stamp='0.243'>
<phase_done name='optimize_null_checks' stamp='0.243'/>
</phase>
<phase_done name='buildIR' stamp='0.243'/>
</phase>
<phase name='emit_lir' stamp='0.243'>
<phase name='lirGeneration' stamp='0.243'>
<phase_done name='lirGeneration' stamp='0.243'/>
</phase>
<phase name='linearScan' stamp='0.243'>
<phase_done name='linearScan' stamp='0.243'/>
</phase>
<phase_done name='emit_lir' stamp='0.243'/>
</phase>
<phase name='codeemit' stamp='0.243'>
<phase_done name='codeemit' stamp='0.243'/>
</phase>
<phase name='codeinstall' stamp='0.243'>
<phase_done name='codeinstall' stamp='0.244'/>
</phase>
<code_cache total_blobs='288' nmethods='48' adapters='154' free_code_cache='250470656'/>
<task_done success='1' nmsize='272' count='245' stamp='0.244'/>
</task>
<task compile_id='55' method='java/lang/Math max (II)I' bytes='11' count='699' iicount='699' level='3' stamp='0.244'>
<phase name='buildIR' stamp='0.244'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/Math' flags='17'/>
<method id='818' holder='817' name='max' return='707' arguments='707 707' flags='9' bytes='11' iicount='699'/>
<parse method='818'  stamp='0.244'>
<parse_done stamp='0.244'/>
</parse>
<phase name='optimize_blocks' stamp='0.244'>
<phase_done name='optimize_blocks' stamp='0.244'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.244'>
<phase_done name='rangeCheckElimination' stamp='0.244'/>
</phase>
<phase name='optimize_null_checks' stamp='0.244'>
<phase_done name='optimize_null_checks' stamp='0.244'/>
</phase>
<phase_done name='buildIR' stamp='0.244'/>
</phase>
<phase name='emit_lir' stamp='0.244'>
<phase name='lirGeneration' stamp='0.244'>
<phase_done name='lirGeneration' stamp='0.244'/>
</phase>
<phase name='linearScan' stamp='0.244'>
<phase_done name='linearScan' stamp='0.244'/>
</phase>
<phase_done name='emit_lir' stamp='0.244'/>
</phase>
<phase name='codeemit' stamp='0.244'>
<phase_done name='codeemit' stamp='0.244'/>
</phase>
<phase name='codeinstall' stamp='0.244'>
<phase_done name='codeinstall' stamp='0.245'/>
</phase>
<code_cache total_blobs='289' nmethods='49' adapters='154' free_code_cache='250469696'/>
<task_done success='1' nmsize='400' count='1996' stamp='0.245'/>
</task>
<task compile_id='51' method='sun/util/calendar/CalendarDate isNormalized ()Z' bytes='5' count='192' iicount='192' level='1' stamp='0.245'>
<phase name='buildIR' stamp='0.245'>
<type id='701' name='boolean'/>
<klass id='817' name='sun/util/calendar/CalendarDate' flags='1025'/>
<method id='818' holder='817' name='isNormalized' return='701' flags='1' bytes='5' iicount='192'/>
<parse method='818'  stamp='0.245'>
<parse_done stamp='0.245'/>
</parse>
<phase name='optimize_blocks' stamp='0.245'>
<phase_done name='optimize_blocks' stamp='0.245'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.245'>
<phase_done name='rangeCheckElimination' stamp='0.245'/>
</phase>
<phase name='optimize_null_checks' stamp='0.245'>
<phase_done name='optimize_null_checks' stamp='0.245'/>
</phase>
<phase_done name='buildIR' stamp='0.245'/>
</phase>
<phase name='emit_lir' stamp='0.245'>
<phase name='lirGeneration' stamp='0.245'>
<phase_done name='lirGeneration' stamp='0.245'/>
</phase>
<phase name='linearScan' stamp='0.245'>
<phase_done name='linearScan' stamp='0.245'/>
</phase>
<phase_done name='emit_lir' stamp='0.245'/>
</phase>
<phase name='codeemit' stamp='0.245'>
<phase_done name='codeemit' stamp='0.245'/>
</phase>
<phase name='codeinstall' stamp='0.245'>
<phase_done name='codeinstall' stamp='0.246'/>
</phase>
<code_cache total_blobs='290' nmethods='50' adapters='154' free_code_cache='250468928'/>
<task_done success='1' nmsize='272' count='198' stamp='0.246'/>
</task>
<task compile_id='47' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='259' iicount='259' level='1' stamp='0.246'>
<phase name='buildIR' stamp='0.246'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getPath' return='715' flags='1' bytes='5' iicount='259'/>
<parse method='817'  stamp='0.246'>
<parse_done stamp='0.246'/>
</parse>
<phase name='optimize_blocks' stamp='0.246'>
<phase_done name='optimize_blocks' stamp='0.246'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.246'>
<phase_done name='rangeCheckElimination' stamp='0.246'/>
</phase>
<phase name='optimize_null_checks' stamp='0.246'>
<phase_done name='optimize_null_checks' stamp='0.246'/>
</phase>
<phase_done name='buildIR' stamp='0.246'/>
</phase>
<phase name='emit_lir' stamp='0.246'>
<phase name='lirGeneration' stamp='0.246'>
<phase_done name='lirGeneration' stamp='0.246'/>
</phase>
<phase name='linearScan' stamp='0.246'>
<phase_done name='linearScan' stamp='0.246'/>
</phase>
<phase_done name='emit_lir' stamp='0.246'/>
</phase>
<phase name='codeemit' stamp='0.246'>
<phase_done name='codeemit' stamp='0.246'/>
</phase>
<phase name='codeinstall' stamp='0.246'>
<phase_done name='codeinstall' stamp='0.248'/>
</phase>
<code_cache total_blobs='291' nmethods='51' adapters='154' free_code_cache='250468160'/>
<task_done success='1' nmsize='272' count='259' stamp='0.248'/>
</task>
<task compile_id='54' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='288' iicount='288' level='1' stamp='0.248'>
<phase name='buildIR' stamp='0.248'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/lang/StringCoding$StringEncoder' flags='10'/>
<method id='818' holder='817' name='requestedCharsetName' return='715' flags='16' bytes='5' iicount='288'/>
<parse method='818'  stamp='0.248'>
<parse_done stamp='0.248'/>
</parse>
<phase name='optimize_blocks' stamp='0.248'>
<phase_done name='optimize_blocks' stamp='0.248'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.248'>
<phase_done name='rangeCheckElimination' stamp='0.248'/>
</phase>
<phase name='optimize_null_checks' stamp='0.248'>
<phase_done name='optimize_null_checks' stamp='0.248'/>
</phase>
<phase_done name='buildIR' stamp='0.248'/>
</phase>
<phase name='emit_lir' stamp='0.248'>
<phase name='lirGeneration' stamp='0.248'>
<phase_done name='lirGeneration' stamp='0.248'/>
</phase>
<phase name='linearScan' stamp='0.248'>
<phase_done name='linearScan' stamp='0.248'/>
</phase>
<phase_done name='emit_lir' stamp='0.248'/>
</phase>
<phase name='codeemit' stamp='0.248'>
<phase_done name='codeemit' stamp='0.248'/>
</phase>
<phase name='codeinstall' stamp='0.248'>
<phase_done name='codeinstall' stamp='0.249'/>
</phase>
<code_cache total_blobs='292' nmethods='52' adapters='154' free_code_cache='250467392'/>
<task_done success='1' nmsize='272' count='297' stamp='0.249'/>
</task>
<task compile_id='45' method='java/util/Vector size ()I' bytes='5' count='240' iicount='240' level='1' stamp='0.249'>
<phase name='buildIR' stamp='0.249'>
<type id='707' name='int'/>
<klass id='817' name='java/util/Vector' flags='1'/>
<method id='818' holder='817' name='size' return='707' flags='33' bytes='5' iicount='240'/>
<parse method='818'  stamp='0.249'>
<parse_done stamp='0.249'/>
</parse>
<phase name='optimize_blocks' stamp='0.249'>
<phase_done name='optimize_blocks' stamp='0.249'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.249'>
<phase_done name='rangeCheckElimination' stamp='0.249'/>
</phase>
<phase name='optimize_null_checks' stamp='0.249'>
<phase_done name='optimize_null_checks' stamp='0.249'/>
</phase>
<phase_done name='buildIR' stamp='0.249'/>
</phase>
<phase name='emit_lir' stamp='0.249'>
<phase name='lirGeneration' stamp='0.249'>
<phase_done name='lirGeneration' stamp='0.249'/>
</phase>
<phase name='linearScan' stamp='0.249'>
<phase_done name='linearScan' stamp='0.249'/>
</phase>
<phase_done name='emit_lir' stamp='0.249'/>
</phase>
<phase name='codeemit' stamp='0.249'>
<phase_done name='codeemit' stamp='0.249'/>
</phase>
<phase name='codeinstall' stamp='0.249'>
<phase_done name='codeinstall' stamp='0.251'/>
</phase>
<code_cache total_blobs='293' nmethods='53' adapters='154' free_code_cache='250466240'/>
<task_done success='1' nmsize='624' count='240' stamp='0.251'/>
</task>
<task compile_id='52' method='java/util/ArrayList size ()I' bytes='5' count='197' iicount='197' level='1' stamp='0.251'>
<phase name='buildIR' stamp='0.251'>
<type id='707' name='int'/>
<klass id='817' name='java/util/ArrayList' flags='1'/>
<method id='818' holder='817' name='size' return='707' flags='1' bytes='5' iicount='197'/>
<parse method='818'  stamp='0.251'>
<parse_done stamp='0.251'/>
</parse>
<phase name='optimize_blocks' stamp='0.251'>
<phase_done name='optimize_blocks' stamp='0.251'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.251'>
<phase_done name='rangeCheckElimination' stamp='0.251'/>
</phase>
<phase name='optimize_null_checks' stamp='0.251'>
<phase_done name='optimize_null_checks' stamp='0.251'/>
</phase>
<phase_done name='buildIR' stamp='0.251'/>
</phase>
<phase name='emit_lir' stamp='0.251'>
<phase name='lirGeneration' stamp='0.251'>
<phase_done name='lirGeneration' stamp='0.251'/>
</phase>
<phase name='linearScan' stamp='0.251'>
<phase_done name='linearScan' stamp='0.251'/>
</phase>
<phase_done name='emit_lir' stamp='0.251'/>
</phase>
<phase name='codeemit' stamp='0.251'>
<phase_done name='codeemit' stamp='0.251'/>
</phase>
<phase name='codeinstall' stamp='0.251'>
<phase_done name='codeinstall' stamp='0.252'/>
</phase>
<code_cache total_blobs='294' nmethods='54' adapters='154' free_code_cache='250465472'/>
<task_done success='1' nmsize='272' count='200' stamp='0.252'/>
</task>
<task compile_id='37' method='java/nio/Buffer position ()I' bytes='5' count='196' iicount='196' level='1' stamp='0.252'>
<phase name='buildIR' stamp='0.252'>
<type id='707' name='int'/>
<klass id='793' name='java/nio/Buffer' flags='1025'/>
<method id='817' holder='793' name='position' return='707' flags='17' bytes='5' iicount='196'/>
<parse method='817'  stamp='0.252'>
<parse_done stamp='0.252'/>
</parse>
<phase name='optimize_blocks' stamp='0.252'>
<phase_done name='optimize_blocks' stamp='0.252'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.252'>
<phase_done name='rangeCheckElimination' stamp='0.252'/>
</phase>
<phase name='optimize_null_checks' stamp='0.252'>
<phase_done name='optimize_null_checks' stamp='0.252'/>
</phase>
<phase_done name='buildIR' stamp='0.252'/>
</phase>
<phase name='emit_lir' stamp='0.252'>
<phase name='lirGeneration' stamp='0.252'>
<phase_done name='lirGeneration' stamp='0.252'/>
</phase>
<phase name='linearScan' stamp='0.252'>
<phase_done name='linearScan' stamp='0.252'/>
</phase>
<phase_done name='emit_lir' stamp='0.252'/>
</phase>
<phase name='codeemit' stamp='0.252'>
<phase_done name='codeemit' stamp='0.252'/>
</phase>
<phase name='codeinstall' stamp='0.252'>
<phase_done name='codeinstall' stamp='0.253'/>
</phase>
<code_cache total_blobs='296' nmethods='55' adapters='154' free_code_cache='250459328'/>
<task_done success='1' nmsize='272' count='196' stamp='0.253'/>
</task>
<task compile_id='61' method='sun/util/calendar/CalendarDate getYear ()I' bytes='5' count='164' iicount='164' level='1' stamp='0.253'>
<phase name='buildIR' stamp='0.254'>
<type id='707' name='int'/>
<klass id='817' name='sun/util/calendar/CalendarDate' flags='1025'/>
<method id='818' holder='817' name='getYear' return='707' flags='1' bytes='5' iicount='164'/>
<parse method='818'  stamp='0.254'>
<parse_done stamp='0.254'/>
</parse>
<phase name='optimize_blocks' stamp='0.254'>
<phase_done name='optimize_blocks' stamp='0.254'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.254'>
<phase_done name='rangeCheckElimination' stamp='0.254'/>
</phase>
<phase name='optimize_null_checks' stamp='0.254'>
<phase_done name='optimize_null_checks' stamp='0.254'/>
</phase>
<phase_done name='buildIR' stamp='0.254'/>
</phase>
<phase name='emit_lir' stamp='0.254'>
<phase name='lirGeneration' stamp='0.254'>
<phase_done name='lirGeneration' stamp='0.254'/>
</phase>
<phase name='linearScan' stamp='0.254'>
<phase_done name='linearScan' stamp='0.254'/>
</phase>
<phase_done name='emit_lir' stamp='0.254'/>
</phase>
<phase name='codeemit' stamp='0.254'>
<phase_done name='codeemit' stamp='0.254'/>
</phase>
<phase name='codeinstall' stamp='0.254'>
<phase_done name='codeinstall' stamp='0.255'/>
</phase>
<code_cache total_blobs='297' nmethods='57' adapters='154' free_code_cache='250463360'/>
<task_done success='1' nmsize='272' count='164' stamp='0.255'/>
</task>
<task compile_id='62' method='sun/util/calendar/CalendarDate getZone ()Ljava/util/TimeZone;' bytes='5' count='164' iicount='164' level='1' stamp='0.255'>
<phase name='buildIR' stamp='0.255'>
<klass id='818' name='java/util/TimeZone' flags='1025'/>
<klass id='817' name='sun/util/calendar/CalendarDate' flags='1025'/>
<method id='819' holder='817' name='getZone' return='818' flags='1' bytes='5' iicount='164'/>
<parse method='819'  stamp='0.255'>
<parse_done stamp='0.255'/>
</parse>
<phase name='optimize_blocks' stamp='0.255'>
<phase_done name='optimize_blocks' stamp='0.255'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.255'>
<phase_done name='rangeCheckElimination' stamp='0.255'/>
</phase>
<phase name='optimize_null_checks' stamp='0.255'>
<phase_done name='optimize_null_checks' stamp='0.255'/>
</phase>
<phase_done name='buildIR' stamp='0.255'/>
</phase>
<phase name='emit_lir' stamp='0.255'>
<phase name='lirGeneration' stamp='0.255'>
<phase_done name='lirGeneration' stamp='0.255'/>
</phase>
<phase name='linearScan' stamp='0.255'>
<phase_done name='linearScan' stamp='0.255'/>
</phase>
<phase_done name='emit_lir' stamp='0.255'/>
</phase>
<phase name='codeemit' stamp='0.255'>
<phase_done name='codeemit' stamp='0.255'/>
</phase>
<phase name='codeinstall' stamp='0.255'>
<phase_done name='codeinstall' stamp='0.255'/>
</phase>
<code_cache total_blobs='298' nmethods='58' adapters='154' free_code_cache='250462592'/>
<task_done success='1' nmsize='272' count='169' stamp='0.255'/>
</task>
<task compile_id='59' method='java/net/URL getQuery ()Ljava/lang/String;' bytes='5' count='151' iicount='151' level='1' stamp='0.256'>
<phase name='buildIR' stamp='0.256'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getQuery' return='715' flags='1' bytes='5' iicount='151'/>
<parse method='817'  stamp='0.256'>
<parse_done stamp='0.256'/>
</parse>
<phase name='optimize_blocks' stamp='0.256'>
<phase_done name='optimize_blocks' stamp='0.256'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.256'>
<phase_done name='rangeCheckElimination' stamp='0.256'/>
</phase>
<phase name='optimize_null_checks' stamp='0.256'>
<phase_done name='optimize_null_checks' stamp='0.256'/>
</phase>
<phase_done name='buildIR' stamp='0.256'/>
</phase>
<phase name='emit_lir' stamp='0.256'>
<phase name='lirGeneration' stamp='0.256'>
<phase_done name='lirGeneration' stamp='0.256'/>
</phase>
<phase name='linearScan' stamp='0.256'>
<phase_done name='linearScan' stamp='0.256'/>
</phase>
<phase_done name='emit_lir' stamp='0.256'/>
</phase>
<phase name='codeemit' stamp='0.256'>
<phase_done name='codeemit' stamp='0.256'/>
</phase>
<phase name='codeinstall' stamp='0.256'>
<phase_done name='codeinstall' stamp='0.256'/>
</phase>
<code_cache total_blobs='299' nmethods='59' adapters='154' free_code_cache='250461824'/>
<task_done success='1' nmsize='272' count='151' stamp='0.256'/>
</task>
<task compile_id='60' method='java/net/URL getRef ()Ljava/lang/String;' bytes='5' count='151' iicount='151' level='1' stamp='0.256'>
<phase name='buildIR' stamp='0.256'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getRef' return='715' flags='1' bytes='5' iicount='151'/>
<parse method='817'  stamp='0.256'>
<parse_done stamp='0.256'/>
</parse>
<phase name='optimize_blocks' stamp='0.256'>
<phase_done name='optimize_blocks' stamp='0.256'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.256'>
<phase_done name='rangeCheckElimination' stamp='0.256'/>
</phase>
<phase name='optimize_null_checks' stamp='0.256'>
<phase_done name='optimize_null_checks' stamp='0.256'/>
</phase>
<phase_done name='buildIR' stamp='0.256'/>
</phase>
<phase name='emit_lir' stamp='0.256'>
<phase name='lirGeneration' stamp='0.256'>
<phase_done name='lirGeneration' stamp='0.256'/>
</phase>
<phase name='linearScan' stamp='0.256'>
<phase_done name='linearScan' stamp='0.256'/>
</phase>
<phase_done name='emit_lir' stamp='0.256'/>
</phase>
<phase name='codeemit' stamp='0.256'>
<phase_done name='codeemit' stamp='0.256'/>
</phase>
<phase name='codeinstall' stamp='0.256'>
<phase_done name='codeinstall' stamp='0.257'/>
</phase>
<code_cache total_blobs='300' nmethods='60' adapters='154' free_code_cache='250461056'/>
<task_done success='1' nmsize='272' count='151' stamp='0.257'/>
</task>
<task compile_id='56' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='141' iicount='141' level='1' stamp='0.257'>
<phase name='buildIR' stamp='0.257'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/net/Parts' flags='0'/>
<method id='818' holder='817' name='getPath' return='715' flags='0' bytes='5' iicount='141'/>
<parse method='818'  stamp='0.257'>
<parse_done stamp='0.257'/>
</parse>
<phase name='optimize_blocks' stamp='0.257'>
<phase_done name='optimize_blocks' stamp='0.257'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.257'>
<phase_done name='rangeCheckElimination' stamp='0.257'/>
</phase>
<phase name='optimize_null_checks' stamp='0.257'>
<phase_done name='optimize_null_checks' stamp='0.257'/>
</phase>
<phase_done name='buildIR' stamp='0.257'/>
</phase>
<phase name='emit_lir' stamp='0.257'>
<phase name='lirGeneration' stamp='0.257'>
<phase_done name='lirGeneration' stamp='0.257'/>
</phase>
<phase name='linearScan' stamp='0.257'>
<phase_done name='linearScan' stamp='0.257'/>
</phase>
<phase_done name='emit_lir' stamp='0.257'/>
</phase>
<phase name='codeemit' stamp='0.257'>
<phase_done name='codeemit' stamp='0.257'/>
</phase>
<phase name='codeinstall' stamp='0.257'>
<phase_done name='codeinstall' stamp='0.258'/>
</phase>
<code_cache total_blobs='301' nmethods='61' adapters='154' free_code_cache='250460288'/>
<task_done success='1' nmsize='272' count='141' stamp='0.258'/>
</task>
<task compile_id='57' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='141' iicount='141' level='1' stamp='0.258'>
<phase name='buildIR' stamp='0.258'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/net/Parts' flags='0'/>
<method id='818' holder='817' name='getQuery' return='715' flags='0' bytes='5' iicount='141'/>
<parse method='818'  stamp='0.258'>
<parse_done stamp='0.258'/>
</parse>
<phase name='optimize_blocks' stamp='0.258'>
<phase_done name='optimize_blocks' stamp='0.258'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.258'>
<phase_done name='rangeCheckElimination' stamp='0.258'/>
</phase>
<phase name='optimize_null_checks' stamp='0.258'>
<phase_done name='optimize_null_checks' stamp='0.258'/>
</phase>
<phase_done name='buildIR' stamp='0.258'/>
</phase>
<phase name='emit_lir' stamp='0.258'>
<phase name='lirGeneration' stamp='0.258'>
<phase_done name='lirGeneration' stamp='0.258'/>
</phase>
<phase name='linearScan' stamp='0.258'>
<phase_done name='linearScan' stamp='0.258'/>
</phase>
<phase_done name='emit_lir' stamp='0.258'/>
</phase>
<phase name='codeemit' stamp='0.258'>
<phase_done name='codeemit' stamp='0.258'/>
</phase>
<phase name='codeinstall' stamp='0.258'>
<phase_done name='codeinstall' stamp='0.259'/>
</phase>
<code_cache total_blobs='302' nmethods='62' adapters='154' free_code_cache='250459520'/>
<task_done success='1' nmsize='272' count='141' stamp='0.259'/>
</task>
<task compile_id='58' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='141' iicount='141' level='1' stamp='0.259'>
<phase name='buildIR' stamp='0.259'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/net/Parts' flags='0'/>
<method id='818' holder='817' name='getRef' return='715' flags='0' bytes='5' iicount='141'/>
<parse method='818'  stamp='0.259'>
<parse_done stamp='0.259'/>
</parse>
<phase name='optimize_blocks' stamp='0.259'>
<phase_done name='optimize_blocks' stamp='0.259'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.259'>
<phase_done name='rangeCheckElimination' stamp='0.259'/>
</phase>
<phase name='optimize_null_checks' stamp='0.259'>
<phase_done name='optimize_null_checks' stamp='0.259'/>
</phase>
<phase_done name='buildIR' stamp='0.259'/>
</phase>
<phase name='emit_lir' stamp='0.259'>
<phase name='lirGeneration' stamp='0.259'>
<phase_done name='lirGeneration' stamp='0.259'/>
</phase>
<phase name='linearScan' stamp='0.259'>
<phase_done name='linearScan' stamp='0.259'/>
</phase>
<phase_done name='emit_lir' stamp='0.259'/>
</phase>
<phase name='codeemit' stamp='0.259'>
<phase_done name='codeemit' stamp='0.259'/>
</phase>
<phase name='codeinstall' stamp='0.259'>
<phase_done name='codeinstall' stamp='0.260'/>
</phase>
<code_cache total_blobs='303' nmethods='63' adapters='154' free_code_cache='250458752'/>
<task_done success='1' nmsize='272' count='141' stamp='0.260'/>
</task>
<task compile_id='64' method='java/util/zip/ZipFile access$000 (Ljava/util/zip/ZipFile;)Ljava/util/Map;' bytes='5' count='144' iicount='144' level='1' stamp='0.260'>
<phase name='buildIR' stamp='0.260'>
<klass id='818' name='java/util/Map' flags='1537'/>
<klass id='817' name='java/util/zip/ZipFile' flags='1'/>
<method id='819' holder='817' name='access$000' return='818' arguments='817' flags='4104' bytes='5' iicount='144'/>
<parse method='819'  stamp='0.260'>
<parse_done stamp='0.260'/>
</parse>
<phase name='optimize_blocks' stamp='0.260'>
<phase_done name='optimize_blocks' stamp='0.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.260'>
<phase_done name='rangeCheckElimination' stamp='0.260'/>
</phase>
<phase name='optimize_null_checks' stamp='0.260'>
<phase_done name='optimize_null_checks' stamp='0.260'/>
</phase>
<phase_done name='buildIR' stamp='0.260'/>
</phase>
<phase name='emit_lir' stamp='0.260'>
<phase name='lirGeneration' stamp='0.260'>
<phase_done name='lirGeneration' stamp='0.260'/>
</phase>
<phase name='linearScan' stamp='0.260'>
<phase_done name='linearScan' stamp='0.260'/>
</phase>
<phase_done name='emit_lir' stamp='0.260'/>
</phase>
<phase name='codeemit' stamp='0.260'>
<phase_done name='codeemit' stamp='0.260'/>
</phase>
<phase name='codeinstall' stamp='0.260'>
<phase_done name='codeinstall' stamp='0.261'/>
</phase>
<code_cache total_blobs='304' nmethods='64' adapters='154' free_code_cache='250457984'/>
<task_done success='1' nmsize='240' count='144' stamp='0.261'/>
</task>
<task compile_id='66' method='sun/util/calendar/CalendarDate getMonth ()I' bytes='5' count='129' iicount='129' level='1' stamp='0.261'>
<phase name='buildIR' stamp='0.261'>
<type id='707' name='int'/>
<klass id='817' name='sun/util/calendar/CalendarDate' flags='1025'/>
<method id='818' holder='817' name='getMonth' return='707' flags='1' bytes='5' iicount='129'/>
<parse method='818'  stamp='0.261'>
<parse_done stamp='0.261'/>
</parse>
<phase name='optimize_blocks' stamp='0.261'>
<phase_done name='optimize_blocks' stamp='0.261'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.261'>
<phase_done name='rangeCheckElimination' stamp='0.261'/>
</phase>
<phase name='optimize_null_checks' stamp='0.261'>
<phase_done name='optimize_null_checks' stamp='0.261'/>
</phase>
<phase_done name='buildIR' stamp='0.261'/>
</phase>
<phase name='emit_lir' stamp='0.261'>
<phase name='lirGeneration' stamp='0.261'>
<phase_done name='lirGeneration' stamp='0.261'/>
</phase>
<phase name='linearScan' stamp='0.261'>
<phase_done name='linearScan' stamp='0.261'/>
</phase>
<phase_done name='emit_lir' stamp='0.261'/>
</phase>
<phase name='codeemit' stamp='0.261'>
<phase_done name='codeemit' stamp='0.261'/>
</phase>
<phase name='codeinstall' stamp='0.261'>
<phase_done name='codeinstall' stamp='0.262'/>
</phase>
<code_cache total_blobs='305' nmethods='65' adapters='154' free_code_cache='250457216'/>
<task_done success='1' nmsize='272' count='129' stamp='0.262'/>
</task>
<task compile_id='63' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='143' iicount='143' level='1' stamp='0.262'>
<phase name='buildIR' stamp='0.262'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getHost' return='715' flags='1' bytes='5' iicount='143'/>
<parse method='817'  stamp='0.262'>
<parse_done stamp='0.262'/>
</parse>
<phase name='optimize_blocks' stamp='0.262'>
<phase_done name='optimize_blocks' stamp='0.262'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.262'>
<phase_done name='rangeCheckElimination' stamp='0.262'/>
</phase>
<phase name='optimize_null_checks' stamp='0.262'>
<phase_done name='optimize_null_checks' stamp='0.262'/>
</phase>
<phase_done name='buildIR' stamp='0.262'/>
</phase>
<phase name='emit_lir' stamp='0.262'>
<phase name='lirGeneration' stamp='0.262'>
<phase_done name='lirGeneration' stamp='0.262'/>
</phase>
<phase name='linearScan' stamp='0.262'>
<phase_done name='linearScan' stamp='0.262'/>
</phase>
<phase_done name='emit_lir' stamp='0.262'/>
</phase>
<phase name='codeemit' stamp='0.262'>
<phase_done name='codeemit' stamp='0.262'/>
</phase>
<phase name='codeinstall' stamp='0.262'>
<phase_done name='codeinstall' stamp='0.263'/>
</phase>
<code_cache total_blobs='307' nmethods='66' adapters='155' free_code_cache='250455936'/>
<task_done success='1' nmsize='272' count='143' stamp='0.263'/>
</task>
<task compile_id='67' method='java/lang/String toCharArray ()[C' bytes='25' count='256' iicount='256' level='3' stamp='0.265'>
<phase name='buildIR' stamp='0.265'>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='toCharArray' return='806' flags='1' bytes='25' iicount='256'/>
<parse method='817'  stamp='0.265'>
<bc code='184' bci='20'/>
<type id='709' name='void'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<type id='707' name='int'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='819' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='819' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.265'/>
</parse>
<phase name='optimize_blocks' stamp='0.265'>
<phase_done name='optimize_blocks' stamp='0.265'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.265'>
<phase_done name='rangeCheckElimination' stamp='0.265'/>
</phase>
<phase name='optimize_null_checks' stamp='0.265'>
<phase_done name='optimize_null_checks' stamp='0.265'/>
</phase>
<phase_done name='buildIR' stamp='0.265'/>
</phase>
<phase name='emit_lir' stamp='0.265'>
<phase name='lirGeneration' stamp='0.265'>
<phase_done name='lirGeneration' stamp='0.265'/>
</phase>
<phase name='linearScan' stamp='0.265'>
<phase_done name='linearScan' stamp='0.265'/>
</phase>
<phase_done name='emit_lir' stamp='0.265'/>
</phase>
<phase name='codeemit' stamp='0.265'>
<phase_done name='codeemit' stamp='0.265'/>
</phase>
<phase name='codeinstall' stamp='0.265'>
<phase_done name='codeinstall' stamp='0.268'/>
</phase>
<code_cache total_blobs='308' nmethods='67' adapters='155' free_code_cache='250454592'/>
<task_done success='1' nmsize='648' count='256' stamp='0.268'/>
</task>
<task compile_id='68' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='276' iicount='276' level='3' stamp='0.268'>
<phase name='buildIR' stamp='0.268'>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<type id='702' name='char'/>
<method id='817' holder='780' name='append' return='780' arguments='702' flags='1' bytes='8' iicount='276'/>
<parse method='817'  stamp='0.268'>
<bc code='183' bci='2'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='778' name='append' return='778' arguments='702' flags='1' bytes='29' iicount='276'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<bc code='183' bci='7'/>
<type id='709' name='void'/>
<type id='707' name='int'/>
<method id='821' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' compile_id='13' compiler='C1' level='3' iicount='1236'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='182' bci='12'/>
<method id='823' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='448'/>
<call method='823' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<parse_done stamp='0.268'/>
</parse>
<phase name='optimize_blocks' stamp='0.268'>
<phase_done name='optimize_blocks' stamp='0.268'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.268'>
<phase_done name='rangeCheckElimination' stamp='0.268'/>
</phase>
<phase name='optimize_null_checks' stamp='0.268'>
<phase_done name='optimize_null_checks' stamp='0.268'/>
</phase>
<phase_done name='buildIR' stamp='0.268'/>
</phase>
<phase name='emit_lir' stamp='0.268'>
<phase name='lirGeneration' stamp='0.268'>
<phase_done name='lirGeneration' stamp='0.268'/>
</phase>
<phase name='linearScan' stamp='0.268'>
<phase_done name='linearScan' stamp='0.269'/>
</phase>
<phase_done name='emit_lir' stamp='0.269'/>
</phase>
<phase name='codeemit' stamp='0.269'>
<phase_done name='codeemit' stamp='0.269'/>
</phase>
<phase name='codeinstall' stamp='0.269'>
<phase_done name='codeinstall' stamp='0.271'/>
</phase>
<code_cache total_blobs='309' nmethods='68' adapters='155' free_code_cache='250452672'/>
<task_done success='1' nmsize='904' count='276' inlined_bytes='45' stamp='0.271'/>
</task>
<task compile_id='69' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='276' iicount='276' level='3' stamp='0.271'>
<phase name='buildIR' stamp='0.271'>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='702' name='char'/>
<method id='817' holder='778' name='append' return='778' arguments='702' flags='1' bytes='29' iicount='276'/>
<parse method='817'  stamp='0.271'>
<bc code='183' bci='7'/>
<type id='709' name='void'/>
<type id='707' name='int'/>
<method id='819' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' compile_id='13' compiler='C1' level='3' iicount='1236'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<bc code='182' bci='12'/>
<method id='821' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='448'/>
<call method='821' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='778' x='821'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.271'/>
</parse>
<parse_done stamp='0.271'/>
</parse>
<phase name='optimize_blocks' stamp='0.271'>
<phase_done name='optimize_blocks' stamp='0.271'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.271'>
<phase_done name='rangeCheckElimination' stamp='0.271'/>
</phase>
<phase name='optimize_null_checks' stamp='0.271'>
<phase_done name='optimize_null_checks' stamp='0.271'/>
</phase>
<phase_done name='buildIR' stamp='0.271'/>
</phase>
<phase name='emit_lir' stamp='0.271'>
<phase name='lirGeneration' stamp='0.271'>
<phase_done name='lirGeneration' stamp='0.271'/>
</phase>
<phase name='linearScan' stamp='0.271'>
<phase_done name='linearScan' stamp='0.271'/>
</phase>
<phase_done name='emit_lir' stamp='0.271'/>
</phase>
<phase name='codeemit' stamp='0.271'>
<phase_done name='codeemit' stamp='0.272'/>
</phase>
<phase name='codeinstall' stamp='0.272'>
<dependency type='unique_concrete_method' ctxk='778' x='821'/>
<phase_done name='codeinstall' stamp='0.274'/>
</phase>
<code_cache total_blobs='310' nmethods='69' adapters='155' free_code_cache='250450944'/>
<task_done success='1' nmsize='776' count='331' inlined_bytes='16' stamp='0.274'/>
</task>
<task compile_id='70' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1501' iicount='1501' level='1' stamp='0.274'>
<phase name='buildIR' stamp='0.274'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='818' holder='817' name='getProperties' return='707' arguments='707' flags='0' bytes='11' compile_id='27' compiler='C1' level='3' iicount='1501'/>
<parse method='818'  stamp='0.274'>
<parse_done stamp='0.275'/>
</parse>
<phase name='optimize_blocks' stamp='0.275'>
<phase_done name='optimize_blocks' stamp='0.275'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.275'>
<phase_done name='rangeCheckElimination' stamp='0.275'/>
</phase>
<phase name='optimize_null_checks' stamp='0.275'>
<phase_done name='optimize_null_checks' stamp='0.275'/>
</phase>
<phase_done name='buildIR' stamp='0.275'/>
</phase>
<phase name='emit_lir' stamp='0.275'>
<phase name='lirGeneration' stamp='0.275'>
<phase_done name='lirGeneration' stamp='0.275'/>
</phase>
<phase name='linearScan' stamp='0.275'>
<phase_done name='linearScan' stamp='0.275'/>
</phase>
<phase_done name='emit_lir' stamp='0.275'/>
</phase>
<phase name='codeemit' stamp='0.275'>
<phase_done name='codeemit' stamp='0.275'/>
</phase>
<phase name='codeinstall' stamp='0.275'>
<phase_done name='codeinstall' stamp='0.276'/>
</phase>
<code_cache total_blobs='311' nmethods='70' adapters='155' free_code_cache='250450048'/>
<task_done success='1' nmsize='304' count='1501' stamp='0.276'/>
</task>
<task compile_id='71' method='java/lang/String hashCode ()I' bytes='55' count='1214' backedge_count='22606' iicount='1214' decompiles='1' unstable_if_traps='1' level='3' stamp='0.278'>
<phase name='buildIR' stamp='0.278'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='hashCode' return='707' flags='1' bytes='55' iicount='1216'/>
<parse method='817'  stamp='0.278'>
<parse_done stamp='0.278'/>
</parse>
<phase name='optimize_blocks' stamp='0.278'>
<phase_done name='optimize_blocks' stamp='0.278'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.278'>
<phase_done name='rangeCheckElimination' stamp='0.278'/>
</phase>
<phase name='optimize_null_checks' stamp='0.278'>
<phase_done name='optimize_null_checks' stamp='0.278'/>
</phase>
<phase_done name='buildIR' stamp='0.278'/>
</phase>
<phase name='emit_lir' stamp='0.278'>
<phase name='lirGeneration' stamp='0.278'>
<phase_done name='lirGeneration' stamp='0.278'/>
</phase>
<phase name='linearScan' stamp='0.278'>
<phase_done name='linearScan' stamp='0.278'/>
</phase>
<phase_done name='emit_lir' stamp='0.278'/>
</phase>
<phase name='codeemit' stamp='0.278'>
<phase_done name='codeemit' stamp='0.278'/>
</phase>
<phase name='codeinstall' stamp='0.278'>
<phase_done name='codeinstall' stamp='0.281'/>
</phase>
<code_cache total_blobs='312' nmethods='71' adapters='155' free_code_cache='250448576'/>
<task_done success='1' nmsize='656' count='1223' backedge_count='22737' stamp='0.281'/>
</task>
<task compile_id='72' method='java/nio/charset/CharsetEncoder maxBytesPerChar ()F' bytes='5' count='516' iicount='516' level='3' stamp='0.283'>
<phase name='buildIR' stamp='0.283'>
<type id='703' name='float'/>
<klass id='817' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='818' holder='817' name='maxBytesPerChar' return='703' flags='17' bytes='5' iicount='516'/>
<parse method='818'  stamp='0.283'>
<parse_done stamp='0.283'/>
</parse>
<phase name='optimize_blocks' stamp='0.283'>
<phase_done name='optimize_blocks' stamp='0.283'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.283'>
<phase_done name='rangeCheckElimination' stamp='0.283'/>
</phase>
<phase name='optimize_null_checks' stamp='0.283'>
<phase_done name='optimize_null_checks' stamp='0.283'/>
</phase>
<phase_done name='buildIR' stamp='0.283'/>
</phase>
<phase name='emit_lir' stamp='0.283'>
<phase name='lirGeneration' stamp='0.283'>
<phase_done name='lirGeneration' stamp='0.283'/>
</phase>
<phase name='linearScan' stamp='0.283'>
<phase_done name='linearScan' stamp='0.283'/>
</phase>
<phase_done name='emit_lir' stamp='0.283'/>
</phase>
<phase name='codeemit' stamp='0.283'>
<phase_done name='codeemit' stamp='0.283'/>
</phase>
<phase name='codeinstall' stamp='0.283'>
<phase_done name='codeinstall' stamp='0.284'/>
</phase>
<code_cache total_blobs='313' nmethods='72' adapters='155' free_code_cache='250447744'/>
<task_done success='1' nmsize='336' count='536' stamp='0.284'/>
</task>
<task compile_id='73' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='138' backedge_count='9649' iicount='138' level='3' stamp='0.284'>
<phase name='buildIR' stamp='0.284'>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='806 707 707 806 707 707 707' flags='8' bytes='166' iicount='138'/>
<parse method='817'  stamp='0.284'>
<parse_done stamp='0.284'/>
</parse>
<phase name='optimize_blocks' stamp='0.284'>
<phase_done name='optimize_blocks' stamp='0.284'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.284'>
<phase_done name='rangeCheckElimination' stamp='0.284'/>
</phase>
<phase name='optimize_null_checks' stamp='0.284'>
<phase_done name='optimize_null_checks' stamp='0.284'/>
</phase>
<phase_done name='buildIR' stamp='0.284'/>
</phase>
<phase name='emit_lir' stamp='0.284'>
<phase name='lirGeneration' stamp='0.284'>
<phase_done name='lirGeneration' stamp='0.284'/>
</phase>
<phase name='linearScan' stamp='0.284'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.285'/>
</phase>
<phase name='codeemit' stamp='0.285'>
<phase_done name='codeemit' stamp='0.285'/>
</phase>
<phase name='codeinstall' stamp='0.285'>
<phase_done name='codeinstall' stamp='0.290'/>
</phase>
<code_cache total_blobs='315' nmethods='74' adapters='155' free_code_cache='250443584'/>
<task_done success='1' nmsize='1616' count='138' backedge_count='9649' stamp='0.290'/>
</task>
<task compile_id='75' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='386' iicount='386' level='3' stamp='0.290'>
<phase name='buildIR' stamp='0.290'>
<klass id='818' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='819' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='707' name='int'/>
<klass id='817' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='820' holder='817' name='tabAt' return='818' arguments='819 707' flags='24' bytes='21' iicount='386'/>
<parse method='820'  stamp='0.290'>
<bc code='182' bci='14'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<type id='708' name='long'/>
<klass id='781' name='sun/misc/Unsafe' flags='17'/>
<method id='824' holder='781' name='getObjectVolatile' return='714' arguments='714 708' flags='257' bytes='0' compile_id='76' compile_kind='c2n' level='0' iicount='384'/>
<call method='824' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.290'/>
</parse>
<phase name='optimize_blocks' stamp='0.290'>
<phase_done name='optimize_blocks' stamp='0.290'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.290'>
<phase_done name='rangeCheckElimination' stamp='0.290'/>
</phase>
<phase name='optimize_null_checks' stamp='0.290'>
<phase_done name='optimize_null_checks' stamp='0.290'/>
</phase>
<phase_done name='buildIR' stamp='0.290'/>
</phase>
<phase name='emit_lir' stamp='0.290'>
<phase name='lirGeneration' stamp='0.290'>
<phase_done name='lirGeneration' stamp='0.290'/>
</phase>
<phase name='linearScan' stamp='0.290'>
<phase_done name='linearScan' stamp='0.290'/>
</phase>
<phase_done name='emit_lir' stamp='0.290'/>
</phase>
<phase name='codeemit' stamp='0.290'>
<phase_done name='codeemit' stamp='0.291'/>
</phase>
<phase name='codeinstall' stamp='0.291'>
<phase_done name='codeinstall' stamp='0.292'/>
</phase>
<code_cache total_blobs='316' nmethods='75' adapters='155' free_code_cache='250442432'/>
<task_done success='1' nmsize='560' count='390' stamp='0.292'/>
</task>
<task compile_id='77' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='447' iicount='451' level='3' stamp='0.292'>
<phase name='buildIR' stamp='0.292'>
<type id='701' name='boolean'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='startsWith' return='701' arguments='715' flags='1' bytes='7' iicount='480'/>
<parse method='817'  stamp='0.292'>
<bc code='182' bci='3'/>
<type id='707' name='int'/>
<method id='819' holder='715' name='startsWith' return='701' arguments='715 707' flags='1' bytes='72' compile_id='44' compiler='C1' level='3' iicount='1001'/>
<call method='819' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.292'/>
</parse>
<phase name='optimize_blocks' stamp='0.292'>
<phase_done name='optimize_blocks' stamp='0.292'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.292'>
<phase_done name='rangeCheckElimination' stamp='0.292'/>
</phase>
<phase name='optimize_null_checks' stamp='0.292'>
<phase_done name='optimize_null_checks' stamp='0.292'/>
</phase>
<phase_done name='buildIR' stamp='0.292'/>
</phase>
<phase name='emit_lir' stamp='0.292'>
<phase name='lirGeneration' stamp='0.292'>
<phase_done name='lirGeneration' stamp='0.292'/>
</phase>
<phase name='linearScan' stamp='0.292'>
<phase_done name='linearScan' stamp='0.292'/>
</phase>
<phase_done name='emit_lir' stamp='0.292'/>
</phase>
<phase name='codeemit' stamp='0.292'>
<phase_done name='codeemit' stamp='0.292'/>
</phase>
<phase name='codeinstall' stamp='0.292'>
<phase_done name='codeinstall' stamp='0.293'/>
</phase>
<code_cache total_blobs='317' nmethods='76' adapters='155' free_code_cache='250441344'/>
<task_done success='1' nmsize='520' count='484' stamp='0.293'/>
</task>
<task compile_id='79' method='java/lang/AbstractStringBuilder expandCapacity (I)V' bytes='50' count='474' iicount='474' level='3' stamp='0.293'>
<phase name='buildIR' stamp='0.293'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='817' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='474'/>
<parse method='817'  stamp='0.293'>
<bc code='183' bci='30'/>
<klass id='737' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='819' holder='737' name='&lt;init&gt;' return='709' flags='1' bytes='5' iicount='1'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='43'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='821' name='java/util/Arrays' flags='1'/>
<method id='822' holder='821' name='copyOf' return='806' arguments='806 707' flags='9' bytes='19' iicount='495'/>
<call method='822' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='822'>
<bc code='184' bci='11'/>
<klass id='824' name='java/lang/Math' flags='17'/>
<method id='825' holder='824' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='10' compiler='C1' level='3' iicount='3963'/>
<call method='825' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<parse_done stamp='0.294'/>
</parse>
<bc code='184' bci='14'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='827' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='827' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.294'/>
</parse>
<parse_done stamp='0.294'/>
</parse>
<phase name='optimize_blocks' stamp='0.294'>
<phase_done name='optimize_blocks' stamp='0.294'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.294'>
<phase_done name='rangeCheckElimination' stamp='0.294'/>
</phase>
<phase name='optimize_null_checks' stamp='0.294'>
<phase_done name='optimize_null_checks' stamp='0.294'/>
</phase>
<phase_done name='buildIR' stamp='0.294'/>
</phase>
<phase name='emit_lir' stamp='0.294'>
<phase name='lirGeneration' stamp='0.294'>
<phase_done name='lirGeneration' stamp='0.294'/>
</phase>
<phase name='linearScan' stamp='0.294'>
<phase_done name='linearScan' stamp='0.294'/>
</phase>
<phase_done name='emit_lir' stamp='0.294'/>
</phase>
<phase name='codeemit' stamp='0.294'>
<phase_done name='codeemit' stamp='0.294'/>
</phase>
<phase name='codeinstall' stamp='0.294'>
<phase_done name='codeinstall' stamp='0.298'/>
</phase>
<code_cache total_blobs='320' nmethods='77' adapters='157' free_code_cache='250437696'/>
<task_done success='1' nmsize='1368' count='482' inlined_bytes='30' stamp='0.298'/>
</task>
<task compile_id='74' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='679' iicount='679' level='3' stamp='0.298'>
<phase name='buildIR' stamp='0.298'>
<klass id='809' name='[B' flags='1041'/>
<type id='707' name='int'/>
<klass id='817' name='java/util/Arrays' flags='1'/>
<method id='818' holder='817' name='copyOf' return='809' arguments='809 707' flags='9' bytes='19' iicount='679'/>
<parse method='818'  stamp='0.298'>
<bc code='184' bci='11'/>
<klass id='820' name='java/lang/Math' flags='17'/>
<method id='821' holder='820' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='10' compiler='C1' level='3' iicount='3994'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.298'/>
</parse>
<bc code='184' bci='14'/>
<type id='709' name='void'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='823' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='6' compile_kind='c2n' level='0' iicount='1152'/>
<call method='823' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.298'/>
</parse>
<phase name='optimize_blocks' stamp='0.298'>
<phase_done name='optimize_blocks' stamp='0.298'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.298'>
<phase_done name='rangeCheckElimination' stamp='0.298'/>
</phase>
<phase name='optimize_null_checks' stamp='0.298'>
<phase_done name='optimize_null_checks' stamp='0.298'/>
</phase>
<phase_done name='buildIR' stamp='0.298'/>
</phase>
<phase name='emit_lir' stamp='0.298'>
<phase name='lirGeneration' stamp='0.298'>
<phase_done name='lirGeneration' stamp='0.298'/>
</phase>
<phase name='linearScan' stamp='0.298'>
<phase_done name='linearScan' stamp='0.298'/>
</phase>
<phase_done name='emit_lir' stamp='0.298'/>
</phase>
<phase name='codeemit' stamp='0.298'>
<phase_done name='codeemit' stamp='0.298'/>
</phase>
<phase name='codeinstall' stamp='0.298'>
<phase_done name='codeinstall' stamp='0.300'/>
</phase>
<code_cache total_blobs='321' nmethods='78' adapters='157' free_code_cache='250436096'/>
<task_done success='1' nmsize='808' count='679' inlined_bytes='11' stamp='0.300'/>
</task>
<fragment>
<![CDATA[
<task compile_id='81' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='517' backedge_count='51' iicount='517' level='3' stamp='0.300'>
<phase name='buildIR' stamp='0.300'>
<klass id='714' name='java/lang/Object' flags='1'/>
<type id='707' name='int'/>
<type id='701' name='boolean'/>
<klass id='817' name='java/util/HashMap' flags='1'/>
<method id='818' holder='817' name='putVal' return='714' arguments='707 714 714 701 701' flags='16' bytes='300' iicount='517'/>
<parse method='818'  stamp='0.300'>
<bc code='182' bci='20'/>
<klass id='821' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='822' holder='817' name='resize' return='821' flags='16' bytes='359' iicount='48'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='820' name='java/util/HashMap$Node' flags='8'/>
<method id='824' holder='817' name='newNode' return='820' arguments='707 714 714 820' flags='0' bytes='13' compile_id='29' compiler='C1' level='3' iicount='417'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='825' holder='714' name='equals' return='701' arguments='714' flags='1' bytes='11' iicount='1'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='826' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='827' holder='826' name='putTreeVal' return='826' arguments='817 821 707 714 714' flags='16' bytes='314' iicount='1'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='824' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='709' name='void'/>
<method id='828' holder='817' name='treeifyBin' return='709' arguments='821 707' flags='16' bytes='110' iicount='1'/>
<call method='828' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='825' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='830' holder='817' name='afterNodeAccess' return='709' arguments='820' flags='0' bytes='1' iicount='37'/>
<call method='830' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='822' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='831' holder='817' name='afterNodeInsertion' return='709' arguments='701' flags='0' bytes='1' compile_id='30' compiler='C1' level='3' iicount='417'/>
<call method='831' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.300'/>
</parse>
<phase name='optimize_blocks' stamp='0.301'>
<phase_done name='optimize_blocks' stamp='0.301'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.301'>
<phase_done name='rangeCheckElimination' stamp='0.301'/>
</phase>
<phase name='optimize_null_checks' stamp='0.301'>
<phase_done name='optimize_null_checks' stamp='0.301'/>
</phase>
<phase_done name='buildIR' stamp='0.301'/>
</phase>
<phase name='emit_lir' stamp='0.301'>
<phase name='lirGeneration' stamp='0.301'>
<phase_done name='lirGeneration' stamp='0.301'/>
</phase>
<phase name='linearScan' stamp='0.301'>
<phase_done name='linearScan' stamp='0.301'/>
</phase>
<phase_done name='emit_lir' stamp='0.301'/>
</phase>
<phase name='codeemit' stamp='0.301'>
<phase_done name='codeemit' stamp='0.301'/>
</phase>
<phase name='codeinstall' stamp='0.301'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='19715'>
<start_compile_thread name='C2 CompilerThread1' thread='19715' process='44591' stamp='0.092'/>
<task compile_id='65' method='java/lang/Math max (II)I' bytes='11' count='5713' iicount='5719' stamp='0.252'>
<phase name='parse' nodes='3' live='3' stamp='0.252'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/Math' flags='17'/>
<method id='818' holder='817' name='max' return='707' arguments='707 707' flags='9' bytes='11' compile_id='55' compiler='C1' level='3' iicount='5883'/>
<parse method='818' uses='5883' stamp='0.252'>
<bc code='161' bci='2'/>
<branch target_bci='9' taken='241' not_taken='5632' cnt='5873' prob='0.0410352'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.252'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.252'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.252'>
<phase name='ccp' nodes='33' live='18' stamp='0.252'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.252'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.252'>
<phase_done name='idealLoop' nodes='33' live='18' stamp='0.252'/>
</phase>
<phase_done name='optimizer' nodes='33' live='18' stamp='0.252'/>
</phase>
<phase name='matcher' nodes='33' live='18' stamp='0.252'>
<phase_done name='matcher' nodes='19' live='19' stamp='0.252'/>
</phase>
<phase name='regalloc' nodes='25' live='25' stamp='0.252'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='27' live='27' stamp='0.252'/>
</phase>
<phase name='output' nodes='27' live='27' stamp='0.252'>
<phase_done name='output' nodes='34' live='32' stamp='0.253'/>
</phase>
<code_cache total_blobs='297' nmethods='56' adapters='154' free_code_cache='250458752'/>
<task_done success='1' nmsize='88' count='6478' stamp='0.254'/>
</task>
</compilation_log>
<compilation_log thread='20227'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread2' thread='20227' process='44591' stamp='0.092'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='19203'>
<start_compile_thread name='C2 CompilerThread0' thread='19203' process='44591' stamp='0.092'/>
<task compile_id='4' method='java/lang/String charAt (I)C' bytes='29' count='7006' iicount='7006' stamp='0.110'>
<phase name='parse' nodes='3' live='3' stamp='0.110'>
<type id='702' name='char'/>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='charAt' return='702' arguments='707' flags='1' bytes='29' iicount='7006'/>
<klass id='819' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='817' bci='13' reason='unloaded' action='reinterpret' index='5' klass='819'/>
<parse method='817' uses='7006' stamp='0.110'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7006' cnt='7006' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7006' not_taken='0' cnt='7006' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='99' live='94' memory='34760' stamp='0.110'/>
</parse>
<phase_done name='parse' nodes='100' live='62' stamp='0.110'/>
</phase>
<phase name='optimizer' nodes='100' live='62' stamp='0.110'>
<phase name='ccp' nodes='100' live='62' stamp='0.110'>
<phase_done name='ccp' nodes='100' live='62' stamp='0.110'/>
</phase>
<phase name='idealLoop' nodes='100' live='62' stamp='0.110'>
<phase_done name='idealLoop' nodes='100' live='62' stamp='0.110'/>
</phase>
<phase_done name='optimizer' nodes='104' live='63' stamp='0.110'/>
</phase>
<phase name='matcher' nodes='104' live='63' stamp='0.110'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.110'/>
</phase>
<phase name='regalloc' nodes='70' live='70' stamp='0.110'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.111'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.111'>
<phase_done name='output' nodes='94' live='86' stamp='0.111'/>
</phase>
<code_cache total_blobs='229' nmethods='4' adapters='139' free_code_cache='250564352'/>
<task_done success='1' nmsize='216' count='7095' stamp='0.112'/>
</task>
<task compile_id='34' method='java/lang/String hashCode ()I' bytes='55' count='1075' backedge_count='20572' iicount='1075' stamp='0.207'>
<phase name='parse' nodes='3' live='3' stamp='0.207'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='hashCode' return='707' flags='1' bytes='55' compile_id='2' compiler='C1' level='3' iicount='1085'/>
<parse method='817' uses='1085' stamp='0.207'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='282' not_taken='494' cnt='776' prob='0.363402'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='0' not_taken='494' cnt='494' prob='never'/>
<uncommon_trap bci='14' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='494' not_taken='16667' cnt='17161' prob='0.0287862'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='494' not_taken='16667' cnt='16667' prob='0.0287862'/>
<parse_done nodes='195' live='188' memory='50640' stamp='0.208'/>
</parse>
<phase_done name='parse' nodes='196' live='127' stamp='0.208'/>
</phase>
<phase name='optimizer' nodes='196' live='127' stamp='0.208'>
<phase name='idealLoop' nodes='197' live='107' stamp='0.208'>
<loop_tree>
<loop idx='197' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='201' live='99' stamp='0.208'/>
</phase>
<phase name='idealLoop' nodes='201' live='99' stamp='0.208'>
<loop_tree>
<loop idx='206' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='105' stamp='0.208'/>
</phase>
<phase name='idealLoop' nodes='227' live='105' stamp='0.208'>
<loop_tree>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='323' live='175' stamp='0.208'/>
</phase>
<phase name='ccp' nodes='323' live='175' stamp='0.208'>
<phase_done name='ccp' nodes='323' live='175' stamp='0.208'/>
</phase>
<phase name='idealLoop' nodes='323' live='175' stamp='0.208'>
<loop_tree>
<loop idx='265' inner_loop='1' pre_loop='206' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='238' inner_loop='1' post_loop='206' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='386' live='198' stamp='0.208'/>
</phase>
<phase name='idealLoop' nodes='386' live='198' stamp='0.208'>
<loop_tree>
<loop idx='265' inner_loop='1' pre_loop='206' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='238' inner_loop='1' post_loop='206' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='392' live='184' stamp='0.209'/>
</phase>
<phase name='idealLoop' nodes='392' live='184' stamp='0.209'>
<loop_tree>
<loop idx='265' inner_loop='1' pre_loop='206' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='238' inner_loop='1' post_loop='206' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='162' stamp='0.209'/>
</phase>
<phase_done name='optimizer' nodes='405' live='162' stamp='0.209'/>
</phase>
<phase name='matcher' nodes='405' live='162' stamp='0.209'>
<phase_done name='matcher' nodes='145' live='145' stamp='0.209'/>
</phase>
<phase name='regalloc' nodes='181' live='181' stamp='0.209'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='201' live='196' stamp='0.209'/>
</phase>
<phase name='output' nodes='201' live='196' stamp='0.209'>
<phase_done name='output' nodes='219' live='207' stamp='0.209'/>
</phase>
<code_cache total_blobs='271' nmethods='30' adapters='154' free_code_cache='250488640'/>
<task_done success='1' nmsize='408' count='1198' backedge_count='22301' stamp='0.211'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.317'/>
</hotspot_log>
